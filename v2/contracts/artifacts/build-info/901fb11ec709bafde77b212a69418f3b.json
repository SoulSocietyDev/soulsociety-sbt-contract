{
	"id": "901fb11ec709bafde77b212a69418f3b",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.20",
	"solcLongVersion": "0.8.20+commit.a1b79de6",
	"input": {
		"language": "Solidity",
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		},
		"sources": {
			"v2/contracts/SoulSocietySBT.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.20;\n\nimport \"v2/contracts/interfaces/ISoulSocietyEnumerableSBT.sol\";\nimport \"v2/contracts/interfaces/ISoulSocietySBTMetadata.sol\";\nimport \"v2/contracts/interfaces/ISoulSocietySBTErrors.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\";\nimport {Strings} from \"@openzeppelin/contracts/utils/Strings.sol\";\nimport {IERC721} from \"@openzeppelin/contracts/token/ERC721/IERC721.sol\";\nimport {IERC165, ERC165} from \"@openzeppelin/contracts/utils/introspection/ERC165.sol\";\n\n\n/// @title Implementation contract of Lightweight growth type SBT developed by SoulSociety\n/// @notice As an implementation of ISoulSocietyLightweightEnumableSTB, only the owner can modify growth.\ncontract SoulSocietySBT is ISoulSocietySBT, ISoulSocietySBTMetadata, ISoulSocietySBTErrors , IERC721, ERC165, Ownable {\n\n    using Strings for uint256;\n\n    // token Name\n    string private constant _name = \"HONSBT\";\n\n    // token Symbol\n    string private constant _symbol = \"HONSBT\";\n\n    // token Meta URI\n    string private _uri;\n\n    // The number of users who own SBT.\n    uint256 private _totalUser;\n\n    // Total number of SBT issued\n    uint256 private _totalCount;\n\n    // Mapping from SBT ID to owned address\n    mapping(uint256 => address) private _owners;\n\n    // Mapping from SBT ID to token Type\n    mapping(uint256 => uint256) private _tokenTypes;\n\n    // Mapping from SBT ID to current Growth\n    mapping(uint256 => uint256) private _tokenGrowths;\n\n    // Mapping from owner to count of SBT \n    mapping(address => uint256) private _balances;\n\n    // Mapping from owner to information open flag\n    mapping(address => bool) private _userProtects;\n\n    // Mapping from owner to list of owned token IDs\n    mapping(address => mapping(uint256 => uint256)) private _ownedTokens;\n\n    // Mapping from owner to lost of approvals\n\n    bytes4 private constant _ERC721_RECEIVED = IERC721Receiver.onERC721Received.selector;\n\n    constructor(string memory uri_) {\n        _uri = uri_;\n\n        emit ContractCreated(msg.sender, block.timestamp, _name, _symbol, _uri);\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return \n            interfaceId == type(IERC721).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    // ------------------------------------------------------------\n    // Functions related to basic contract information\n    // Public Interface Implementation\n    // ------------------------------------------------------------\n    \n    // Token Name\n    function name() external view virtual returns (string memory) {\n        return _name;\n    }\n\n    // Token Symbol\n    function symbol() external view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId_) external view virtual  returns (string memory) {       \n        // check protected status \n        _isProtectedTokenId(tokenId_);\n    \n        return bytes(_uri).length > 0 ? string(abi.encodePacked(_uri,tokenId_.toString(),\"?tokenType=\", _tokenTypes[tokenId_].toString())) : \"\";\n    }\n\n\n    function setTokenURI(string memory tokenURI_) external onlyOwner returns(string memory) {\n        _uri = tokenURI_;\n\n        emit SetTokenURI(msg.sender, tokenURI_);\n\n        return _uri;\n    }\n\n    function totalUser() public view  returns (uint256) {\n        return _totalUser;\n    }\n\n    function totalSupply() public view  returns (uint256) {\n        return _totalCount;\n    }\n \n    function getTokenType(uint256 tokenId_) public view returns (uint256) {\n\n        _isProtectedTokenId(tokenId_);\n\n        return _tokenTypes[tokenId_];\n    }\n\n    // ------------------------------------------------------------------------\n    // Permission settings to check the view information of a token\n    // ------------------------------------------------------------------------\n    function setProtected(bool isProtected_) public  returns (bool) {\n        if (!(_balanceOf(msg.sender) > 0)) {\n            revert SoulSocietySBTInvalidOwner(msg.sender);\n        }\n\n        _userProtects[msg.sender] = isProtected_;\n\n        return getProtected(msg.sender);\n    }\n\n    function getProtected(address to_) public view returns(bool) {\n        return _getProtected(to_);\n    }\n\n    function _getProtected(address to_) internal  view returns(bool) {\n        // If owner doesn't exist, return value is false\n        return _userProtects[to_];\n    }\n\n    function isProtected(address to_) external view returns (bool) {\n        return _isProtected(to_);\n    }\n\n    function _isProtected(address to_) internal view returns (bool) {        \n        if (_userProtects[to_] == true)\n            revert SoulSocietySBTProtectedOwner(to_);\n        \n        return false;\n    }\n\n    function _isProtectedTokenId(uint256 tokenId_) internal view {\n\n        \n        // If tokenId doesn't exist,  don't need to check \"protected status\"\n        if (!_exists(tokenId_)) {\n            revert SoulSocietySBTNonexistentToken(tokenId_);\n        }\n\n        _isProtected(_owners[tokenId_]);\n    }\n\n\n    // ERC721 Interface \n    /**\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n     */\n    function ownerOf(uint256 tokenId_) external  view  override  returns (address) {\n         // Check whether the token exists and if its status is 'protected'.\n        _isProtectedTokenId(tokenId_);\n\n        return _owners[tokenId_];\n    }\n\n    /**\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n     */\n    function _ownerOf(uint256 tokenId_) internal view  returns (address) {\n        return _owners[tokenId_];\n    }\n\n    function balanceOf(address owner_) external  view  returns (uint256) {\n         // Check whether the token exists and if its status is 'protected'.\n        _isProtected(owner_);\n        \n        return _balanceOf(owner_);\n    }\n\n    function _balanceOf(address owner_) internal view returns (uint256) {\n        return _balances[owner_];\n    }\n\n    /**\n     *  Does not provide a transfer feature.\n     */\n    function safeTransferFrom(address , address , uint256 , bytes calldata) external pure {\n        \n        revert SoulSocietySBTNotSupported(\"safeTransferFrom\");\n    }\n\n    function safeTransferFrom(address , address , uint256 ) external pure {\n        revert SoulSocietySBTNotSupported(\"safeTransferFrom\");\n    }\n\n    function transferFrom(address , address , uint256 ) external pure {\n        revert SoulSocietySBTNotSupported(\"transferFrom\");\n    }\n\n    function approve(address , uint256 ) external pure{\n        revert SoulSocietySBTNotSupported(\"approve\");\n    }\n\n    function setApprovalForAll(address , bool ) external pure {\n        revert SoulSocietySBTNotSupported(\"setApprovalForAll\");\n    }\n\n    function getApproved(uint256 ) external pure returns (address )  {\n        revert SoulSocietySBTNotSupported(\"getApproved\");\n\n\n    }\n\n    function isApprovedForAll(address , address ) public pure returns (bool) {\n        revert SoulSocietySBTNotSupported(\"isApprovedForAll\");\n    }\n\n    // -------------------------------------------------------------------------\n    // Mint & Grow Up\n    // -------------------------------------------------------------------------\n    \n    function mint(address to_, uint256 tokenType_) public virtual onlyOwner returns(uint256) {\n        return _safeMint(to_, tokenType_);\n    }\n\n    function _safeMint(address to_, uint256 tokenType_) internal virtual returns(uint256) {\n\n        uint256 tokenId = _totalCount + 1;\n    \n\n        if (to_ == address(0)) {\n            revert SoulSocietySBTInvalidReceiver(address(0));\n        }\n\n        if (_exists(tokenId)) {\n            revert SoulSocietySBTExistToken(tokenId);\n        }\n\n        // if to is false , to address is new user\n        if(!_existsOwner(to_)) {\n            _totalUser += 1;\n        }\n\n        unchecked {\n            _balances[to_] += 1;\n            _totalCount += 1;   \n        }\n\n        _owners[tokenId] = to_;\n        _tokenTypes[tokenId] = tokenType_;\n        _tokenGrowths[tokenId] = 1;\n        // _userProtects[to_] = false;\n        _ownedTokens[to_][_balances[to_]-1] = tokenId; // index from 0\n\n        emit Mint(address(0), to_, tokenId, tokenType_);\n\n        require(\n            _checkOnERC721Received(address(0), to_, tokenId, \"\"),\n            \"ERC721: transfer to non ERC721Receiver implementer\"\n        );\n\n        return tokenId;\n    }\n\n    function reset(address to_, uint256 tokenId_) public  {\n        if (msg.sender != to_) {\n            revert SoulSocietySBTInvalidOwner(to_);\n        }\n        _setGrowthToZero(to_, tokenId_);\n    }\n\n    function _setGrowthToZero(address to_, uint tokenId_) internal {\n        // check to exist and owner address\n        _requireMintedOf(to_, tokenId_);\n\n        _tokenGrowths[tokenId_] = 0;\n\n        emit Reset(to_, tokenId_);\n    }\n\n    // ---------------------------------------------------------------\n    // Metadata-related functions of SoulSociety's growth type SBT\n    // ---------------------------------------------------------------\n    function getGrowth(uint256 tokenId_) public view  returns (uint256) {\n        // Check whether the token exists and if its status is 'protected'.\n        _isProtectedTokenId(tokenId_);\n\n        return _tokenGrowths[tokenId_];\n    }\n\n\n    /**\n     * @dev Returns whether `tokenId` exists.\n     *\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n     *\n     * Tokens start existing when they are minted (`_mint`),\n     * and stop existing when they are burned (`_burn`).\n     */\n    function _exists(uint256 tokenId) internal view virtual returns (bool) {\n        return _ownerOf(tokenId) != address(0);\n    }\n\n    function _existsOwner(address to) internal view virtual returns (bool) {\n        return _balances[to] != 0;\n    }\n\n\n    // -------------------------------------------------------------------------\n    // Growth Control : GrowUp\n    // -------------------------------------------------------------------------\n\n    // A function that grows the SBT you have\n    function growUp(address to_, uint256 tokenId_) public  onlyOwner returns(uint256) {\n        return _growUp(to_, tokenId_);\n    }\n    \n    function _growUp(address to_, uint256 tokenId_) internal returns(uint256) {\n\n        // check to exist and owner address\n        _requireMintedOf(to_, tokenId_);\n\n        _tokenGrowths[tokenId_] += 1;\n\n        uint256 tokenGrowth =  _tokenGrowths[tokenId_];\n\n        emit GrowUp(to_, tokenId_, tokenGrowth);\n\n        return tokenGrowth;\n    }\n\n\n\n    /**\n     * @dev Returns a token ID owned by `owner` at a given `index` of its token list.\n     * Use along with {balanceOf} to enumerate all of ``owner``'s tokens.\n     */\n    function tokenOfOwnerByIndex(address owner_, uint256 index_) public view returns (uint256) {\n        // Check whether the token exists and if its status is 'protected'.\n       _isProtected(owner_);\n\n        require(index_ < _balanceOf(owner_), \"Out of Index\");\n\n        if (owner_ == address(0)) {\n            revert SoulSocietySBTInvalidReceiver(address(0));\n        }\n\n        uint256 tokenId = _ownedTokens[owner_][index_];\n\n        return tokenId; \n    }\n\n    /**\n     * @dev Reverts if the `tokenId` has not been minted yet.\n     */\n    // function _requireMinted(uint256 tokenId) internal view virtual {\n    //     if (!_exists(tokenId)) {\n    //         revert SoulSocietySBTNonexistentToken(tokenId);\n    //     }\n    // }\n\n    /**\n     * @dev Reverts if the `tokenId` has not been minted yet and owner address is not equal \"to\" address\n     */\n    function _requireMintedOf(address to, uint256 tokenId) internal view virtual {\n        if(_ownerOf(tokenId) != to) {\n            revert SoulSocietySBTInvalidOwner(to);\n        }\n    }\n\n    function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory _data) internal returns (bool) {\n        if (!isContract(to)) {\n            return true;\n        }\n\n        bytes4 retval = IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, _data);\n        return (retval == _ERC721_RECEIVED);\n    }\n\n    function isContract(address account) internal view returns (bool) {\n        uint256 size;\n        assembly { size := extcodesize(account) }\n        return size > 0;\n    }\n}"
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n *\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the caller.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Strings.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./math/Math.sol\";\nimport \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant _SYMBOLS = \"0123456789abcdef\";\n    uint8 private constant _ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toString(int256 value) internal pure returns (string memory) {\n        return string(abi.encodePacked(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value))));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @title ERC721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n     * reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"v2/contracts/interfaces/ISoulSocietySBTErrors.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.20;\n\n/**\n * @dev Standard SoulSocietySBT.sol Errors\n * Interface of the ERC6093 custom errors for ERC721 tokens\n * as defined in https://eips.ethereum.org/EIPS/eip-6093\n */\n\ninterface ISoulSocietySBTErrors {\n\n    /*\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * @Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error SoulSocietySBTInvalidOwner(address to);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error SoulSocietySBTNonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error SoulSocietySBTIncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token.\n     * @param owner Address of the current owner of a token.\n     * @param to Address whose SBT token are being used.\n     */\n    error SoulSocietySBTNotOwner(address owner, address to);\n\n    /*\n     * @dev Indicates a failure with the tokenId. Used in transfers.\n     * @param tokedId to check\n     */\n    error SoulSocietySBTExistToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error SoulSocietySBTInvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error SoulSocietySBTInvalidReceiver(address receiver);\n\n\n    /**\n     * @dev Indicates protected status. Used in token.\n     * @param owner Address.\n     */\n    error SoulSocietySBTProtectedOwner(address owner);\n\n\n    error SoulSocietySBTNotSupported(string message);\n//    /**\n//     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n//     * @param operator Address that may be allowed to operate on tokens without being their owner.\n//     * @param tokenId Identifier number of a token.\n//     */\n//    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n//\n//    /**\n//     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n//     * @param approver Address initiating an approval operation.\n//     */\n//    error ERC721InvalidApprover(address approver);\n//\n//    /**\n//     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n//     * @param operator Address that may be allowed to operate on tokens without being their owner.\n//     */\n//    error ERC721InvalidOperator(address operator);\n}\n"
			},
			"v2/contracts/interfaces/ISoulSocietySBTMetadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.20;\n\nimport \"v2/contracts/interfaces/ISoulSocietySBT.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface ISoulSocietySBTMetadata is ISoulSocietySBT {\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId_) external view returns (string memory);\n}"
			},
			"v2/contracts/interfaces/ISoulSocietyEnumerableSBT.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.20;\n\nimport \"v2/contracts/interfaces/ISoulSocietySBT.sol\";\n\n/// @title Lightweight Growth type SBT interface developed by SoulSociety\n/// @notice There is a part where the gas fee required by Ethereum is too expensive to contain various information. \n/// Therefore, by considering each contract as a piece of information, we tried to implement growth-type SBT through minimum information and minimum gas cost by managing growth in the contract.\ninterface ISoulSocietyEnumableSBT is ISoulSocietySBT {\n    /**\n     * @dev Returns the total amount of tokens stored by the contract.\n     */\n    function totalSupply() external view returns (uint256);\n\n    // @notice A function that provides the number of currently registered users\n    // @return Number of currently registered users\n    function totalUser() external view  returns (uint256);\n\n\n    /**\n     * @dev Returns a token ID owned by `owner` at a given `index` of its token list.\n     * Use along with {balanceOf} to enumerate all of ``owner``'s tokens.\n     */\n    function tokenOfOwnerByIndex(address owner, uint256 index) external view returns (uint256);\n\n    /**\n     * @dev Returns a token ID at a given `index` of all the tokens stored by the contract.\n     * Use along with {totalSupply} to enumerate all tokens.\n     */\n    function tokenByIndex(uint256 index) external view returns (uint256);\n\n}\n"
			},
			"v2/contracts/interfaces/ISoulSocietySBT.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.20;\n\n/// @title Growth type Lightweight SBT interface developed by SoulSociety\n/// @notice There is a part where the gas fee required by Ethereum is too expensive to contain various information. \n/// Therefore, by considering each contract as a piece of information, we tried to implement growth-type SBT through minimum information and minimum gas cost by managing growth in the contract.\ninterface ISoulSocietySBT {\n\n    event ContractCreated(address indexed creator, uint256 creationTime, string name, string symbol, string uri);\n    \n    event SetTokenURI(address indexed sender, string uri);\n\n    /**\n     * @dev Emitted when `tokenId` token is minted from `from(Contract Owner)` to `to`.\n     */\n    event Mint(address from, address indexed to, uint256 indexed tokenId, uint256 indexed tokenType);\n\n    event Reset(address indexed to, uint indexed tokenId);\n\n    // @notice Emitted when user grows\n    // @param to Address that user Address\n    // @param growth User growth\n    event GrowUp(address indexed to, uint256 tokenId, uint256 indexed growth);\n\n    /**\n     * @dev Returns the total amount of tokens stored by the contract.\n     */\n    function totalSupply() external view returns (uint256);\n\n    // @notice A function that provides the number of currently registered users\n    // @return Number of currently registered users\n    function totalUser() external view  returns (uint256);\n\n    function setTokenURI(string memory tokenURI) external returns(string memory);\n\n    // @notice This function contains user growth information.\n    // @param Know current growth User's address\n    function getGrowth(uint256 tokenId) external view returns (uint256);\n\n    // @notice Function to grow users\n    // @param Address of the user you want to grow\n    // function growUp(address) external returns (uint256);\n    function growUp(address to, uint256 tokenId) external returns (uint256);\n\n    function reset(address to, uint256 tokenId) external ; \n\n    function getTokenType(uint256 tokenId_) external view returns (uint256);\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function mint(address to, uint256 tokenType) external returns (uint256);\n\n\n    // @notice Function to down-growth\n    // @param Address of the user you want to down-grow\n    // function growDown(address) external returns (uint256);\n\n    // @notice Function to check whether a specific SBT is public\n    // @param user address\n    // @return true when public, false when private\n    function isProtected(address) external view returns (bool);\n\n    // @notice A function that makes the SBT you hold private\n    // @param protected flag\n    // @return true when normally private, false when already locked or failed\n    function setProtected(bool isProtected) external returns (bool);\n\n    /**\n     * @dev Returns a token ID owned by `owner` at a given `index` of its token list.\n     * Use along with {balanceOf} to enumerate all of ``owner``'s tokens.\n     */\n    function tokenOfOwnerByIndex(address owner, uint256 index) external view returns (uint256);\n\n}"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Down, // Toward negative infinity\n        Up, // Toward infinity\n        Zero // Toward zero\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds up instead\n     * of rounding down.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n     * with further edits by Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod0 := mul(x, y)\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            require(denominator > prod1, \"Math: mulDiv overflow\");\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\n            // See https://cs.stackexchange.com/q/138556/92363.\n\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\n            uint256 twos = denominator & (~denominator + 1);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\n            // in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (rounding == Rounding.Up && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (rounding == Rounding.Up && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"IERC721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC721 compliant contract.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e66dfde185df46104c11bc89d08fa0760737aa59a2b8546a656473d810a8ea4\",\"dweb:/ipfs/QmXvyqtXPaPss2PD7eqPoSao5Szm2n6UMoiG8TZZDjmChR\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"IERC721Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.",
						"kind": "dev",
						"methods": {
							"onERC721Received(address,address,uint256,bytes)": {
								"details": "Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
							}
						},
						"title": "ERC721 token receiver interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC721Received(address,address,uint256,bytes)": "150b7a02"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"Strings": {
					"abi": [],
					"devdoc": {
						"details": "String operations.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Strings.sol\":220:2779  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":220:2779  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220a53f296fca65d595334fdb6db3c631c1a00bd4307f5eb409cc680c884acbac6064736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220a53f296fca65d595334fdb6db3c631c1a00bd4307f5eb409cc680c884acbac6064736f6c63430008140033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA5 EXTCODEHASH 0x29 PUSH16 0xCA65D595334FDB6DB3C631C1A00BD430 PUSH32 0x5EB409CC680C884ACBAC6064736F6C6343000814003300000000000000000000 ",
							"sourceMap": "220:2559:4:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;220:2559:4;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220a53f296fca65d595334fdb6db3c631c1a00bd4307f5eb409cc680c884acbac6064736f6c63430008140033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA5 EXTCODEHASH 0x29 PUSH16 0xCA65D595334FDB6DB3C631C1A00BD430 PUSH32 0x5EB409CC680C884ACBAC6064736F6C6343000814003300000000000000000000 ",
							"sourceMap": "220:2559:4:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"equal(string memory,string memory)": "infinite",
								"toHexString(address)": "infinite",
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(int256)": "infinite",
								"toString(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 4,
									"value": "B"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "BYTE",
									"source": 4
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "ADDRESS",
									"source": 4
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "MSTORE8",
									"source": 4
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a53f296fca65d595334fdb6db3c631c1a00bd4307f5eb409cc680c884acbac6064736f6c63430008140033",
									".code": [
										{
											"begin": 220,
											"end": 2779,
											"name": "PUSHDEPLOYADDRESS",
											"source": 4
										},
										{
											"begin": 220,
											"end": 2779,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 220,
											"end": 2779,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 220,
											"end": 2779,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 220,
											"end": 2779,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 220,
											"end": 2779,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 220,
											"end": 2779,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 220,
											"end": 2779,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 220,
											"end": 2779,
											"name": "REVERT",
											"source": 4
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"v2/contracts/SoulSocietySBT.sol",
								"v2/contracts/interfaces/ISoulSocietyEnumerableSBT.sol",
								"v2/contracts/interfaces/ISoulSocietySBT.sol",
								"v2/contracts/interfaces/ISoulSocietySBTErrors.sol",
								"v2/contracts/interfaces/ISoulSocietySBTMetadata.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"Math": {
					"abi": [],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/Math.sol\":202:12784  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":202:12784  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220cfed702a283660ad4d6da9d3efdf5b383d1fff046a9832c5045caf4f61dddeed64736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220cfed702a283660ad4d6da9d3efdf5b383d1fff046a9832c5045caf4f61dddeed64736f6c63430008140033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCF 0xED PUSH17 0x2A283660AD4D6DA9D3EFDF5B383D1FFF04 PUSH11 0x9832C5045CAF4F61DDDEED PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "202:12582:7:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;202:12582:7;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220cfed702a283660ad4d6da9d3efdf5b383d1fff046a9832c5045caf4f61dddeed64736f6c63430008140033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCF 0xED PUSH17 0x2A283660AD4D6DA9D3EFDF5B383D1FFF04 PUSH11 0x9832C5045CAF4F61DDDEED PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "202:12582:7:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum Math.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum Math.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum Math.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 7,
									"value": "B"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "BYTE",
									"source": 7
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "ADDRESS",
									"source": 7
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "MSTORE8",
									"source": 7
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220cfed702a283660ad4d6da9d3efdf5b383d1fff046a9832c5045caf4f61dddeed64736f6c63430008140033",
									".code": [
										{
											"begin": 202,
											"end": 12784,
											"name": "PUSHDEPLOYADDRESS",
											"source": 7
										},
										{
											"begin": 202,
											"end": 12784,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 202,
											"end": 12784,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 202,
											"end": 12784,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 202,
											"end": 12784,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 202,
											"end": 12784,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 202,
											"end": 12784,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 202,
											"end": 12784,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 202,
											"end": 12784,
											"name": "REVERT",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"v2/contracts/SoulSocietySBT.sol",
								"v2/contracts/interfaces/ISoulSocietyEnumerableSBT.sol",
								"v2/contracts/interfaces/ISoulSocietySBT.sol",
								"v2/contracts/interfaces/ISoulSocietySBTErrors.sol",
								"v2/contracts/interfaces/ISoulSocietySBTMetadata.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"SignedMath": {
					"abi": [],
					"devdoc": {
						"details": "Standard signed math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SignedMath.sol\":215:1262  library SignedMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SignedMath.sol\":215:1262  library SignedMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212203171a5f44ba5c934cd77b95e9a39fba9a5531b78b36cd4a88836169920c0c61264736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212203171a5f44ba5c934cd77b95e9a39fba9a5531b78b36cd4a88836169920c0c61264736f6c63430008140033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BALANCE PUSH18 0xA5F44BA5C934CD77B95E9A39FBA9A5531B78 0xB3 PUSH13 0xD4A88836169920C0C61264736F PUSH13 0x63430008140033000000000000 ",
							"sourceMap": "215:1047:8:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;215:1047:8;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212203171a5f44ba5c934cd77b95e9a39fba9a5531b78b36cd4a88836169920c0c61264736f6c63430008140033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BALANCE PUSH18 0xA5F44BA5C934CD77B95E9A39FBA9A5531B78 0xB3 PUSH13 0xD4A88836169920C0C61264736F PUSH13 0x63430008140033000000000000 ",
							"sourceMap": "215:1047:8:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"abs(int256)": "infinite",
								"average(int256,int256)": "infinite",
								"max(int256,int256)": "infinite",
								"min(int256,int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "BYTE",
									"source": 8
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "ADDRESS",
									"source": 8
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "MSTORE8",
									"source": 8
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212203171a5f44ba5c934cd77b95e9a39fba9a5531b78b36cd4a88836169920c0c61264736f6c63430008140033",
									".code": [
										{
											"begin": 215,
											"end": 1262,
											"name": "PUSHDEPLOYADDRESS",
											"source": 8
										},
										{
											"begin": 215,
											"end": 1262,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 215,
											"end": 1262,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 215,
											"end": 1262,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 215,
											"end": 1262,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 215,
											"end": 1262,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 215,
											"end": 1262,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 215,
											"end": 1262,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 215,
											"end": 1262,
											"name": "REVERT",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"v2/contracts/SoulSocietySBT.sol",
								"v2/contracts/interfaces/ISoulSocietyEnumerableSBT.sol",
								"v2/contracts/interfaces/ISoulSocietySBT.sol",
								"v2/contracts/interfaces/ISoulSocietySBTErrors.sol",
								"v2/contracts/interfaces/ISoulSocietySBTMetadata.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"v2/contracts/SoulSocietySBT.sol": {
				"SoulSocietySBT": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "uri_",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "SoulSocietySBTExistToken",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "SoulSocietySBTIncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "SoulSocietySBTInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "SoulSocietySBTInvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "SoulSocietySBTInvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "SoulSocietySBTNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "SoulSocietySBTNotOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "message",
									"type": "string"
								}
							],
							"name": "SoulSocietySBTNotSupported",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "SoulSocietySBTProtectedOwner",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "creator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "creationTime",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "symbol",
									"type": "string"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "uri",
									"type": "string"
								}
							],
							"name": "ContractCreated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "growth",
									"type": "uint256"
								}
							],
							"name": "GrowUp",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenType",
									"type": "uint256"
								}
							],
							"name": "Mint",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Reset",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "uri",
									"type": "string"
								}
							],
							"name": "SetTokenURI",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner_",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId_",
									"type": "uint256"
								}
							],
							"name": "getGrowth",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to_",
									"type": "address"
								}
							],
							"name": "getProtected",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId_",
									"type": "uint256"
								}
							],
							"name": "getTokenType",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to_",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId_",
									"type": "uint256"
								}
							],
							"name": "growUp",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to_",
									"type": "address"
								}
							],
							"name": "isProtected",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to_",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenType_",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId_",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to_",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId_",
									"type": "uint256"
								}
							],
							"name": "reset",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bool",
									"name": "isProtected_",
									"type": "bool"
								}
							],
							"name": "setProtected",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "tokenURI_",
									"type": "string"
								}
							],
							"name": "setTokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner_",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "index_",
									"type": "uint256"
								}
							],
							"name": "tokenOfOwnerByIndex",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId_",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalUser",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"SoulSocietySBTIncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"SoulSocietySBTInvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"SoulSocietySBTInvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"SoulSocietySBTNonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"SoulSocietySBTNotOwner(address,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"to": "Address whose SBT token are being used."
									}
								}
							],
							"SoulSocietySBTProtectedOwner(address)": [
								{
									"details": "Indicates protected status. Used in token.",
									"params": {
										"owner": "Address."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Mint(address,address,uint256,uint256)": {
								"details": "Emitted when `tokenId` token is minted from `from(Contract Owner)` to `to`."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"name()": {
								"details": "Returns the token collection name."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist"
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenOfOwnerByIndex(address,uint256)": {
								"details": "Returns a token ID owned by `owner` at a given `index` of its token list. Use along with {balanceOf} to enumerate all of ``owner``'s tokens."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"totalSupply()": {
								"details": "Returns the total amount of tokens stored by the contract."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"title": "Implementation contract of Lightweight growth type SBT developed by SoulSociety",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"v2/contracts/SoulSocietySBT.sol\":791:12604  contract SoulSocietySBT is ISoulSocietySBT, ISoulSocietySBTMetadata, ISoulSocietySBTErrors , IERC721, ERC165, Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"v2/contracts/SoulSocietySBT.sol\":2027:2169  constructor(string memory uri_) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  tag_7\n    /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:954  _transferOwnership */\n  tag_10\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  jump\t// in\ntag_7:\n    /* \"v2/contracts/SoulSocietySBT.sol\":2069:2073  _uri */\n  0x01\n    /* \"v2/contracts/SoulSocietySBT.sol\":2069:2080  _uri = uri_ */\n  tag_12\n    /* \"v2/contracts/SoulSocietySBT.sol\":2076:2080  uri_ */\n  dup3\n    /* \"v2/contracts/SoulSocietySBT.sol\":2069:2073  _uri */\n  dup3\n    /* \"v2/contracts/SoulSocietySBT.sol\":2069:2080  _uri = uri_ */\n  tag_13\n  jump\t// in\ntag_12:\n  pop\n    /* \"v2/contracts/SoulSocietySBT.sol\":2141:2146  _name */\n  0x40\n  dup1\n  mload\n  dup1\n  dup3\n  add\n  dup3\n  mstore\n  0x06\n  dup1\n  dup3\n  mstore\n  shl(0xd2, 0x1213d394d095)\n  0x20\n  dup1\n  dup5\n  add\n  dup3\n  swap1\n  mstore\n    /* \"v2/contracts/SoulSocietySBT.sol\":2148:2155  _symbol */\n  dup5\n  mload\n  dup1\n  dup7\n  add\n  dup7\n  mstore\n  swap3\n  dup4\n  mstore\n  dup3\n  add\n  mstore\n    /* \"v2/contracts/SoulSocietySBT.sol\":2096:2162  ContractCreated(msg.sender, block.timestamp, _name, _symbol, _uri) */\n  swap2\n  mload\n    /* \"v2/contracts/SoulSocietySBT.sol\":2112:2122  msg.sender */\n  caller\n  swap3\n    /* \"v2/contracts/SoulSocietySBT.sol\":2096:2162  ContractCreated(msg.sender, block.timestamp, _name, _symbol, _uri) */\n  0xddb33c9627985605622b2c4e8b308152b557aeae8ba59e2f05038c9d8ed6ae84\n  swap3\n  tag_14\n  swap3\n    /* \"v2/contracts/SoulSocietySBT.sol\":2124:2139  block.timestamp */\n  timestamp\n  swap3\n    /* \"v2/contracts/SoulSocietySBT.sol\":2148:2155  _symbol */\n  swap1\n    /* \"v2/contracts/SoulSocietySBT.sol\":2157:2161  _uri */\n  0x01\n  swap1\n    /* \"v2/contracts/SoulSocietySBT.sol\":2096:2162  ContractCreated(msg.sender, block.timestamp, _name, _symbol, _uri) */\n  tag_15\n  jump\t// in\ntag_14:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log2\n    /* \"v2/contracts/SoulSocietySBT.sol\":2027:2169  constructor(string memory uri_) {... */\n  pop\n    /* \"v2/contracts/SoulSocietySBT.sol\":791:12604  contract SoulSocietySBT is ISoulSocietySBT, ISoulSocietySBTMetadata, ISoulSocietySBTErrors , IERC721, ERC165, Ownable {... */\n  jump(tag_26)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2426:2613  function _transferOwnership(address newOwner) internal virtual {... */\ntag_10:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2499:2515  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2518:2524  _owner */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2534:2551  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  dup5\n  sstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2566:2606  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2518:2524  _owner */\n  swap2\n  swap1\n  swap3\n  and\n  swap3\n  dup4\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2566:2606  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2499:2515  address oldOwner */\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2566:2606  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2489:2613  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2426:2613  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:141   */\ntag_19:\n    /* \"#utility.yul\":75:85   */\n  0x4e487b71\n    /* \"#utility.yul\":70:73   */\n  0xe0\n    /* \"#utility.yul\":66:86   */\n  shl\n    /* \"#utility.yul\":63:64   */\n  0x00\n    /* \"#utility.yul\":56:87   */\n  mstore\n    /* \"#utility.yul\":106:110   */\n  0x41\n    /* \"#utility.yul\":103:104   */\n  0x04\n    /* \"#utility.yul\":96:111   */\n  mstore\n    /* \"#utility.yul\":130:134   */\n  0x24\n    /* \"#utility.yul\":127:128   */\n  0x00\n    /* \"#utility.yul\":120:135   */\n  revert\n    /* \"#utility.yul\":146:396   */\ntag_20:\n    /* \"#utility.yul\":231:232   */\n  0x00\n    /* \"#utility.yul\":241:354   */\ntag_29:\n    /* \"#utility.yul\":255:261   */\n  dup4\n    /* \"#utility.yul\":252:253   */\n  dup2\n    /* \"#utility.yul\":249:262   */\n  lt\n    /* \"#utility.yul\":241:354   */\n  iszero\n  tag_31\n  jumpi\n    /* \"#utility.yul\":331:342   */\n  dup2\n  dup2\n  add\n    /* \"#utility.yul\":325:343   */\n  mload\n    /* \"#utility.yul\":312:323   */\n  dup4\n  dup3\n  add\n    /* \"#utility.yul\":305:344   */\n  mstore\n    /* \"#utility.yul\":277:279   */\n  0x20\n    /* \"#utility.yul\":270:280   */\n  add\n    /* \"#utility.yul\":241:354   */\n  jump(tag_29)\ntag_31:\n  pop\n  pop\n    /* \"#utility.yul\":388:389   */\n  0x00\n    /* \"#utility.yul\":370:386   */\n  swap2\n  add\n    /* \"#utility.yul\":363:390   */\n  mstore\n    /* \"#utility.yul\":146:396   */\n  jump\t// out\n    /* \"#utility.yul\":401:1298   */\ntag_3:\n    /* \"#utility.yul\":481:487   */\n  0x00\n    /* \"#utility.yul\":534:536   */\n  0x20\n    /* \"#utility.yul\":522:531   */\n  dup3\n    /* \"#utility.yul\":513:520   */\n  dup5\n    /* \"#utility.yul\":509:532   */\n  sub\n    /* \"#utility.yul\":505:537   */\n  slt\n    /* \"#utility.yul\":502:554   */\n  iszero\n  tag_33\n  jumpi\n    /* \"#utility.yul\":550:551   */\n  0x00\n    /* \"#utility.yul\":547:548   */\n  dup1\n    /* \"#utility.yul\":540:552   */\n  revert\n    /* \"#utility.yul\":502:554   */\ntag_33:\n    /* \"#utility.yul\":577:593   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":642:656   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":639:673   */\n  iszero\n  tag_34\n  jumpi\n    /* \"#utility.yul\":669:670   */\n  0x00\n    /* \"#utility.yul\":666:667   */\n  dup1\n    /* \"#utility.yul\":659:671   */\n  revert\n    /* \"#utility.yul\":639:673   */\ntag_34:\n    /* \"#utility.yul\":707:713   */\n  dup2\n    /* \"#utility.yul\":696:705   */\n  dup5\n    /* \"#utility.yul\":692:714   */\n  add\n    /* \"#utility.yul\":682:714   */\n  swap2\n  pop\n    /* \"#utility.yul\":752:759   */\n  dup5\n    /* \"#utility.yul\":745:749   */\n  0x1f\n    /* \"#utility.yul\":741:743   */\n  dup4\n    /* \"#utility.yul\":737:750   */\n  add\n    /* \"#utility.yul\":733:760   */\n  slt\n    /* \"#utility.yul\":723:778   */\n  tag_35\n  jumpi\n    /* \"#utility.yul\":774:775   */\n  0x00\n    /* \"#utility.yul\":771:772   */\n  dup1\n    /* \"#utility.yul\":764:776   */\n  revert\n    /* \"#utility.yul\":723:778   */\ntag_35:\n    /* \"#utility.yul\":803:805   */\n  dup2\n    /* \"#utility.yul\":797:806   */\n  mload\n    /* \"#utility.yul\":825:827   */\n  dup2\n    /* \"#utility.yul\":821:823   */\n  dup2\n    /* \"#utility.yul\":818:828   */\n  gt\n    /* \"#utility.yul\":815:851   */\n  iszero\n  tag_37\n  jumpi\n    /* \"#utility.yul\":831:849   */\n  tag_37\n  tag_19\n  jump\t// in\ntag_37:\n    /* \"#utility.yul\":906:908   */\n  0x40\n    /* \"#utility.yul\":900:909   */\n  mload\n    /* \"#utility.yul\":874:876   */\n  0x1f\n    /* \"#utility.yul\":960:973   */\n  dup3\n  add\n  not(0x1f)\n    /* \"#utility.yul\":956:978   */\n  swap1\n  dup2\n  and\n    /* \"#utility.yul\":980:982   */\n  0x3f\n    /* \"#utility.yul\":952:983   */\n  add\n    /* \"#utility.yul\":948:988   */\n  and\n    /* \"#utility.yul\":936:989   */\n  dup2\n  add\n  swap1\n    /* \"#utility.yul\":1004:1022   */\n  dup4\n  dup3\n  gt\n    /* \"#utility.yul\":1024:1046   */\n  dup2\n  dup4\n  lt\n    /* \"#utility.yul\":1001:1047   */\n  or\n    /* \"#utility.yul\":998:1070   */\n  iszero\n  tag_39\n  jumpi\n    /* \"#utility.yul\":1050:1068   */\n  tag_39\n  tag_19\n  jump\t// in\ntag_39:\n    /* \"#utility.yul\":1090:1100   */\n  dup2\n    /* \"#utility.yul\":1086:1088   */\n  0x40\n    /* \"#utility.yul\":1079:1101   */\n  mstore\n    /* \"#utility.yul\":1125:1127   */\n  dup3\n    /* \"#utility.yul\":1117:1123   */\n  dup2\n    /* \"#utility.yul\":1110:1128   */\n  mstore\n    /* \"#utility.yul\":1165:1172   */\n  dup8\n    /* \"#utility.yul\":1160:1162   */\n  0x20\n    /* \"#utility.yul\":1155:1157   */\n  dup5\n    /* \"#utility.yul\":1151:1153   */\n  dup8\n    /* \"#utility.yul\":1147:1158   */\n  add\n    /* \"#utility.yul\":1143:1163   */\n  add\n    /* \"#utility.yul\":1140:1173   */\n  gt\n    /* \"#utility.yul\":1137:1190   */\n  iszero\n  tag_40\n  jumpi\n    /* \"#utility.yul\":1186:1187   */\n  0x00\n    /* \"#utility.yul\":1183:1184   */\n  dup1\n    /* \"#utility.yul\":1176:1188   */\n  revert\n    /* \"#utility.yul\":1137:1190   */\ntag_40:\n    /* \"#utility.yul\":1199:1267   */\n  tag_41\n    /* \"#utility.yul\":1264:1266   */\n  dup4\n    /* \"#utility.yul\":1259:1261   */\n  0x20\n    /* \"#utility.yul\":1251:1257   */\n  dup4\n    /* \"#utility.yul\":1247:1262   */\n  add\n    /* \"#utility.yul\":1242:1244   */\n  0x20\n    /* \"#utility.yul\":1238:1240   */\n  dup9\n    /* \"#utility.yul\":1234:1245   */\n  add\n    /* \"#utility.yul\":1199:1267   */\n  tag_20\n  jump\t// in\ntag_41:\n    /* \"#utility.yul\":1286:1292   */\n  swap8\n    /* \"#utility.yul\":401:1298   */\n  swap7\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1303:1683   */\ntag_21:\n    /* \"#utility.yul\":1382:1383   */\n  0x01\n    /* \"#utility.yul\":1378:1390   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":1425:1437   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":1446:1507   */\n  tag_43\n  jumpi\n    /* \"#utility.yul\":1500:1504   */\n  0x7f\n    /* \"#utility.yul\":1492:1498   */\n  dup3\n    /* \"#utility.yul\":1488:1505   */\n  and\n    /* \"#utility.yul\":1478:1505   */\n  swap2\n  pop\n    /* \"#utility.yul\":1446:1507   */\ntag_43:\n    /* \"#utility.yul\":1553:1555   */\n  0x20\n    /* \"#utility.yul\":1545:1551   */\n  dup3\n    /* \"#utility.yul\":1542:1556   */\n  lt\n    /* \"#utility.yul\":1522:1540   */\n  dup2\n    /* \"#utility.yul\":1519:1557   */\n  sub\n    /* \"#utility.yul\":1516:1677   */\n  tag_44\n  jumpi\n    /* \"#utility.yul\":1599:1609   */\n  0x4e487b71\n    /* \"#utility.yul\":1594:1597   */\n  0xe0\n    /* \"#utility.yul\":1590:1610   */\n  shl\n    /* \"#utility.yul\":1587:1588   */\n  0x00\n    /* \"#utility.yul\":1580:1611   */\n  mstore\n    /* \"#utility.yul\":1634:1638   */\n  0x22\n    /* \"#utility.yul\":1631:1632   */\n  0x04\n    /* \"#utility.yul\":1624:1639   */\n  mstore\n    /* \"#utility.yul\":1662:1666   */\n  0x24\n    /* \"#utility.yul\":1659:1660   */\n  0x00\n    /* \"#utility.yul\":1652:1667   */\n  revert\n    /* \"#utility.yul\":1516:1677   */\ntag_44:\n  pop\n    /* \"#utility.yul\":1303:1683   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1814:2359   */\ntag_23:\n    /* \"#utility.yul\":1916:1918   */\n  0x1f\n    /* \"#utility.yul\":1911:1914   */\n  dup3\n    /* \"#utility.yul\":1908:1919   */\n  gt\n    /* \"#utility.yul\":1905:2353   */\n  iszero\n  tag_47\n  jumpi\n    /* \"#utility.yul\":1952:1953   */\n  0x00\n    /* \"#utility.yul\":1977:1982   */\n  dup2\n    /* \"#utility.yul\":1973:1975   */\n  dup2\n    /* \"#utility.yul\":1966:1983   */\n  mstore\n    /* \"#utility.yul\":2022:2026   */\n  0x20\n    /* \"#utility.yul\":2018:2020   */\n  dup2\n    /* \"#utility.yul\":2008:2027   */\n  keccak256\n    /* \"#utility.yul\":2092:2094   */\n  0x1f\n    /* \"#utility.yul\":2080:2090   */\n  dup6\n    /* \"#utility.yul\":2076:2095   */\n  add\n    /* \"#utility.yul\":2073:2074   */\n  0x05\n    /* \"#utility.yul\":2069:2096   */\n  shr\n    /* \"#utility.yul\":2063:2067   */\n  dup2\n    /* \"#utility.yul\":2059:2097   */\n  add\n    /* \"#utility.yul\":2128:2132   */\n  0x20\n    /* \"#utility.yul\":2116:2126   */\n  dup7\n    /* \"#utility.yul\":2113:2133   */\n  lt\n    /* \"#utility.yul\":2110:2157   */\n  iszero\n  tag_48\n  jumpi\n  pop\n    /* \"#utility.yul\":2151:2155   */\n  dup1\n    /* \"#utility.yul\":2110:2157   */\ntag_48:\n    /* \"#utility.yul\":2206:2208   */\n  0x1f\n    /* \"#utility.yul\":2201:2204   */\n  dup6\n    /* \"#utility.yul\":2197:2209   */\n  add\n    /* \"#utility.yul\":2194:2195   */\n  0x05\n    /* \"#utility.yul\":2190:2210   */\n  shr\n    /* \"#utility.yul\":2184:2188   */\n  dup3\n    /* \"#utility.yul\":2180:2211   */\n  add\n    /* \"#utility.yul\":2170:2211   */\n  swap2\n  pop\n    /* \"#utility.yul\":2261:2343   */\ntag_49:\n    /* \"#utility.yul\":2279:2281   */\n  dup2\n    /* \"#utility.yul\":2272:2277   */\n  dup2\n    /* \"#utility.yul\":2269:2282   */\n  lt\n    /* \"#utility.yul\":2261:2343   */\n  iszero\n  tag_51\n  jumpi\n    /* \"#utility.yul\":2324:2341   */\n  dup3\n  dup2\n  sstore\n    /* \"#utility.yul\":2305:2306   */\n  0x01\n    /* \"#utility.yul\":2294:2307   */\n  add\n    /* \"#utility.yul\":2261:2343   */\n  jump(tag_49)\ntag_51:\n    /* \"#utility.yul\":2265:2268   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":1905:2353   */\ntag_47:\n    /* \"#utility.yul\":1814:2359   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2535:3887   */\ntag_13:\n    /* \"#utility.yul\":2655:2665   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":2677:2707   */\n  dup2\n  gt\n    /* \"#utility.yul\":2674:2730   */\n  iszero\n  tag_55\n  jumpi\n    /* \"#utility.yul\":2710:2728   */\n  tag_55\n  tag_19\n  jump\t// in\ntag_55:\n    /* \"#utility.yul\":2739:2836   */\n  tag_56\n    /* \"#utility.yul\":2829:2835   */\n  dup2\n    /* \"#utility.yul\":2789:2827   */\n  tag_57\n    /* \"#utility.yul\":2821:2825   */\n  dup5\n    /* \"#utility.yul\":2815:2826   */\n  sload\n    /* \"#utility.yul\":2789:2827   */\n  tag_21\n  jump\t// in\ntag_57:\n    /* \"#utility.yul\":2783:2787   */\n  dup5\n    /* \"#utility.yul\":2739:2836   */\n  tag_23\n  jump\t// in\ntag_56:\n    /* \"#utility.yul\":2891:2895   */\n  0x20\n  dup1\n    /* \"#utility.yul\":2955:2957   */\n  0x1f\n    /* \"#utility.yul\":2944:2958   */\n  dup4\n  gt\n    /* \"#utility.yul\":2972:2973   */\n  0x01\n    /* \"#utility.yul\":2967:3630   */\n  dup2\n  eq\n  tag_59\n  jumpi\n    /* \"#utility.yul\":3674:3675   */\n  0x00\n    /* \"#utility.yul\":3691:3697   */\n  dup5\n    /* \"#utility.yul\":3688:3777   */\n  iszero\n  tag_60\n  jumpi\n  pop\n    /* \"#utility.yul\":3743:3762   */\n  dup6\n  dup4\n  add\n    /* \"#utility.yul\":3737:3763   */\n  mload\n    /* \"#utility.yul\":3688:3777   */\ntag_60:\n  not(0x00)\n    /* \"#utility.yul\":2492:2493   */\n  0x03\n    /* \"#utility.yul\":2488:2499   */\n  dup7\n  swap1\n  shl\n    /* \"#utility.yul\":2484:2508   */\n  shr\n    /* \"#utility.yul\":2480:2509   */\n  not\n    /* \"#utility.yul\":2470:2510   */\n  and\n    /* \"#utility.yul\":2516:2517   */\n  0x01\n    /* \"#utility.yul\":2512:2523   */\n  dup6\n  swap1\n  shl\n    /* \"#utility.yul\":2467:2524   */\n  or\n    /* \"#utility.yul\":3790:3871   */\n  dup6\n  sstore\n    /* \"#utility.yul\":2937:3881   */\n  jump(tag_51)\n    /* \"#utility.yul\":2967:3630   */\ntag_59:\n    /* \"#utility.yul\":1761:1762   */\n  0x00\n    /* \"#utility.yul\":1754:1768   */\n  dup6\n  dup2\n  mstore\n    /* \"#utility.yul\":1798:1802   */\n  0x20\n    /* \"#utility.yul\":1785:1803   */\n  dup2\n  keccak256\n  not(0x1f)\n    /* \"#utility.yul\":3003:3023   */\n  dup7\n  and\n  swap2\n    /* \"#utility.yul\":3121:3357   */\ntag_63:\n    /* \"#utility.yul\":3135:3142   */\n  dup3\n    /* \"#utility.yul\":3132:3133   */\n  dup2\n    /* \"#utility.yul\":3129:3143   */\n  lt\n    /* \"#utility.yul\":3121:3357   */\n  iszero\n  tag_65\n  jumpi\n    /* \"#utility.yul\":3224:3243   */\n  dup9\n  dup7\n  add\n    /* \"#utility.yul\":3218:3244   */\n  mload\n    /* \"#utility.yul\":3203:3245   */\n  dup3\n  sstore\n    /* \"#utility.yul\":3316:3343   */\n  swap5\n  dup5\n  add\n  swap5\n    /* \"#utility.yul\":3284:3285   */\n  0x01\n    /* \"#utility.yul\":3272:3286   */\n  swap1\n  swap2\n  add\n  swap1\n    /* \"#utility.yul\":3151:3170   */\n  dup5\n  add\n    /* \"#utility.yul\":3121:3357   */\n  jump(tag_63)\ntag_65:\n    /* \"#utility.yul\":3125:3128   */\n  pop\n    /* \"#utility.yul\":3385:3391   */\n  dup6\n    /* \"#utility.yul\":3376:3383   */\n  dup3\n    /* \"#utility.yul\":3373:3392   */\n  lt\n    /* \"#utility.yul\":3370:3571   */\n  iszero\n  tag_66\n  jumpi\n    /* \"#utility.yul\":3446:3465   */\n  dup8\n  dup6\n  add\n    /* \"#utility.yul\":3440:3466   */\n  mload\n  not(0x00)\n    /* \"#utility.yul\":3529:3530   */\n  0x03\n    /* \"#utility.yul\":3525:3539   */\n  dup9\n  swap1\n  shl\n    /* \"#utility.yul\":3541:3544   */\n  0xf8\n    /* \"#utility.yul\":3521:3545   */\n  and\n    /* \"#utility.yul\":3517:3554   */\n  shr\n    /* \"#utility.yul\":3513:3555   */\n  not\n    /* \"#utility.yul\":3498:3556   */\n  and\n    /* \"#utility.yul\":3483:3557   */\n  dup2\n  sstore\n    /* \"#utility.yul\":3370:3571   */\ntag_66:\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":3617:3618   */\n  0x01\n    /* \"#utility.yul\":3601:3615   */\n  swap1\n  dup2\n  shl\n    /* \"#utility.yul\":3597:3619   */\n  add\n    /* \"#utility.yul\":3584:3620   */\n  swap1\n  sstore\n  pop\n    /* \"#utility.yul\":2535:3887   */\n  jump\t// out\n    /* \"#utility.yul\":3892:4163   */\ntag_25:\n    /* \"#utility.yul\":3934:3937   */\n  0x00\n    /* \"#utility.yul\":3972:3977   */\n  dup2\n    /* \"#utility.yul\":3966:3978   */\n  mload\n    /* \"#utility.yul\":3999:4005   */\n  dup1\n    /* \"#utility.yul\":3994:3997   */\n  dup5\n    /* \"#utility.yul\":3987:4006   */\n  mstore\n    /* \"#utility.yul\":4015:4091   */\n  tag_68\n    /* \"#utility.yul\":4084:4090   */\n  dup2\n    /* \"#utility.yul\":4077:4081   */\n  0x20\n    /* \"#utility.yul\":4072:4075   */\n  dup7\n    /* \"#utility.yul\":4068:4082   */\n  add\n    /* \"#utility.yul\":4061:4065   */\n  0x20\n    /* \"#utility.yul\":4054:4059   */\n  dup7\n    /* \"#utility.yul\":4050:4066   */\n  add\n    /* \"#utility.yul\":4015:4091   */\n  tag_20\n  jump\t// in\ntag_68:\n    /* \"#utility.yul\":4145:4147   */\n  0x1f\n    /* \"#utility.yul\":4124:4139   */\n  add\n  not(0x1f)\n    /* \"#utility.yul\":4120:4149   */\n  and\n    /* \"#utility.yul\":4111:4150   */\n  swap3\n  swap1\n  swap3\n  add\n    /* \"#utility.yul\":4152:4156   */\n  0x20\n    /* \"#utility.yul\":4107:4157   */\n  add\n  swap3\n    /* \"#utility.yul\":3892:4163   */\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4168:5497   */\ntag_15:\n    /* \"#utility.yul\":4438:4444   */\n  dup5\n    /* \"#utility.yul\":4427:4436   */\n  dup2\n    /* \"#utility.yul\":4420:4445   */\n  mstore\n    /* \"#utility.yul\":4401:4405   */\n  0x00\n    /* \"#utility.yul\":4464:4466   */\n  0x20\n    /* \"#utility.yul\":4502:4505   */\n  0x80\n    /* \"#utility.yul\":4497:4499   */\n  dup2\n    /* \"#utility.yul\":4486:4495   */\n  dup5\n    /* \"#utility.yul\":4482:4500   */\n  add\n    /* \"#utility.yul\":4475:4506   */\n  mstore\n    /* \"#utility.yul\":4529:4575   */\n  tag_70\n    /* \"#utility.yul\":4570:4573   */\n  0x80\n    /* \"#utility.yul\":4559:4568   */\n  dup5\n    /* \"#utility.yul\":4555:4574   */\n  add\n    /* \"#utility.yul\":4547:4553   */\n  dup8\n    /* \"#utility.yul\":4529:4575   */\n  tag_25\n  jump\t// in\ntag_70:\n    /* \"#utility.yul\":4623:4632   */\n  dup4\n    /* \"#utility.yul\":4615:4621   */\n  dup2\n    /* \"#utility.yul\":4611:4633   */\n  sub\n    /* \"#utility.yul\":4606:4608   */\n  0x40\n    /* \"#utility.yul\":4595:4604   */\n  dup6\n    /* \"#utility.yul\":4591:4609   */\n  add\n    /* \"#utility.yul\":4584:4634   */\n  mstore\n    /* \"#utility.yul\":4657:4690   */\n  tag_71\n    /* \"#utility.yul\":4683:4689   */\n  dup2\n    /* \"#utility.yul\":4675:4681   */\n  dup8\n    /* \"#utility.yul\":4657:4690   */\n  tag_25\n  jump\t// in\ntag_71:\n    /* \"#utility.yul\":4643:4690   */\n  swap1\n  pop\n    /* \"#utility.yul\":4738:4747   */\n  dup4\n    /* \"#utility.yul\":4730:4736   */\n  dup2\n    /* \"#utility.yul\":4726:4748   */\n  sub\n    /* \"#utility.yul\":4721:4723   */\n  0x60\n    /* \"#utility.yul\":4710:4719   */\n  dup6\n    /* \"#utility.yul\":4706:4724   */\n  add\n    /* \"#utility.yul\":4699:4749   */\n  mstore\n    /* \"#utility.yul\":4769:4770   */\n  0x00\n    /* \"#utility.yul\":4802:4808   */\n  dup6\n    /* \"#utility.yul\":4796:4809   */\n  sload\n    /* \"#utility.yul\":4832:4868   */\n  tag_72\n    /* \"#utility.yul\":4858:4867   */\n  dup2\n    /* \"#utility.yul\":4832:4868   */\n  tag_21\n  jump\t// in\ntag_72:\n    /* \"#utility.yul\":4877:4899   */\n  dup1\n  dup5\n  mstore\n    /* \"#utility.yul\":4918:4919   */\n  0x01\n    /* \"#utility.yul\":4935:4953   */\n  dup3\n  dup2\n  and\n    /* \"#utility.yul\":4962:5114   */\n  dup1\n  iszero\n  tag_74\n  jumpi\n    /* \"#utility.yul\":5128:5129   */\n  0x01\n    /* \"#utility.yul\":5123:5471   */\n  dup2\n  eq\n  tag_75\n  jumpi\n    /* \"#utility.yul\":4928:5471   */\n  jump(tag_73)\n    /* \"#utility.yul\":4962:5114   */\ntag_74:\n  not(0xff)\n    /* \"#utility.yul\":5007:5031   */\n  dup5\n  and\n    /* \"#utility.yul\":4990:5005   */\n  dup7\n  dup9\n  add\n    /* \"#utility.yul\":4983:5032   */\n  mstore\n    /* \"#utility.yul\":5082:5096   */\n  dup3\n  iszero\n    /* \"#utility.yul\":5075:5097   */\n  iszero\n    /* \"#utility.yul\":5072:5073   */\n  0x05\n    /* \"#utility.yul\":5068:5098   */\n  shl\n    /* \"#utility.yul\":5056:5099   */\n  dup7\n  add\n    /* \"#utility.yul\":5052:5104   */\n  dup8\n  add\n  swap5\n  pop\n    /* \"#utility.yul\":4962:5114   */\n  jump(tag_73)\n    /* \"#utility.yul\":5123:5471   */\ntag_75:\n    /* \"#utility.yul\":5154:5160   */\n  dup10\n    /* \"#utility.yul\":5151:5152   */\n  0x00\n    /* \"#utility.yul\":5144:5161   */\n  mstore\n    /* \"#utility.yul\":5202:5204   */\n  dup7\n    /* \"#utility.yul\":5199:5200   */\n  0x00\n    /* \"#utility.yul\":5189:5205   */\n  keccak256\n    /* \"#utility.yul\":5227:5228   */\n  0x00\n    /* \"#utility.yul\":5241:5418   */\ntag_76:\n    /* \"#utility.yul\":5255:5261   */\n  dup5\n    /* \"#utility.yul\":5252:5253   */\n  dup2\n    /* \"#utility.yul\":5249:5262   */\n  lt\n    /* \"#utility.yul\":5241:5418   */\n  iszero\n  tag_78\n  jumpi\n    /* \"#utility.yul\":5345:5359   */\n  dup2\n  sload\n    /* \"#utility.yul\":5324:5338   */\n  dup9\n  dup3\n  add\n    /* \"#utility.yul\":5320:5343   */\n  dup11\n  add\n    /* \"#utility.yul\":5313:5360   */\n  mstore\n    /* \"#utility.yul\":5388:5404   */\n  swap1\n  dup4\n  add\n  swap1\n    /* \"#utility.yul\":5270:5280   */\n  dup9\n  add\n    /* \"#utility.yul\":5241:5418   */\n  jump(tag_76)\ntag_78:\n    /* \"#utility.yul\":5442:5456   */\n  dup8\n  add\n    /* \"#utility.yul\":5438:5461   */\n  dup9\n  add\n  swap6\n  pop\n  pop\n    /* \"#utility.yul\":4928:5471   */\ntag_73:\n  pop\n    /* \"#utility.yul\":5488:5491   */\n  swap3\n  swap12\n    /* \"#utility.yul\":4168:5497   */\n  swap11\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\ntag_26:\n    /* \"v2/contracts/SoulSocietySBT.sol\":791:12604  contract SoulSocietySBT is ISoulSocietySBT, ISoulSocietySBTMetadata, ISoulSocietySBTErrors , IERC721, ERC165, Ownable {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"v2/contracts/SoulSocietySBT.sol\":791:12604  contract SoulSocietySBT is ISoulSocietySBT, ISoulSocietySBTMetadata, ISoulSocietySBTErrors , IERC721, ERC165, Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x715018a6\n      gt\n      tag_31\n      jumpi\n      dup1\n      0xbe37e907\n      gt\n      tag_32\n      jumpi\n      dup1\n      0xe0df5b6f\n      gt\n      tag_33\n      jumpi\n      dup1\n      0xe0df5b6f\n      eq\n      tag_27\n      jumpi\n      dup1\n      0xe1604b70\n      eq\n      tag_28\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_29\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_30\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_33:\n      dup1\n      0xbe37e907\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xc87b56dd\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xce35de95\n      eq\n      tag_26\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_32:\n      dup1\n      0x95d89b41\n      gt\n      tag_34\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x9b252852\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xb88d4fde\n      eq\n      tag_23\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_34:\n      dup1\n      0x715018a6\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x76aed2e1\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_19\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_31:\n      dup1\n      0x23b872dd\n      gt\n      tag_35\n      jumpi\n      dup1\n      0x42842e0e\n      gt\n      tag_36\n      jumpi\n      dup1\n      0x42842e0e\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x51c18e0c\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x6352211e\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_16\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_36:\n      dup1\n      0x23b872dd\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x2f745c59\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x40c10f19\n      eq\n      tag_12\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_35:\n      dup1\n      0x095ea7b3\n      gt\n      tag_37\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x1c02bc31\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x1f8eb677\n      eq\n      tag_9\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_37:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x081812fc\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"v2/contracts/SoulSocietySBT.sol\":2236:2473  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_3:\n      tag_38\n      tag_39\n      calldatasize\n      0x04\n      tag_40\n      jump\t// in\n    tag_39:\n      tag_41\n      jump\t// in\n    tag_38:\n      mload(0x40)\n        /* \"#utility.yul\":565:579   */\n      swap1\n      iszero\n        /* \"#utility.yul\":558:580   */\n      iszero\n        /* \"#utility.yul\":540:581   */\n      dup2\n      mstore\n        /* \"#utility.yul\":528:530   */\n      0x20\n        /* \"#utility.yul\":513:531   */\n      add\n        /* \"v2/contracts/SoulSocietySBT.sol\":2236:2473  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_42:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"v2/contracts/SoulSocietySBT.sol\":2732:2823  function name() external view virtual returns (string memory) {... */\n    tag_4:\n        /* \"v2/contracts/SoulSocietySBT.sol\":2811:2816  _name */\n      0x40\n      dup1\n      mload\n      dup1\n      dup3\n      add\n      swap1\n      swap2\n      mstore\n      0x06\n      dup2\n      mstore\n      shl(0xd2, 0x1213d394d095)\n      0x20\n      dup3\n      add\n      mstore\n        /* \"v2/contracts/SoulSocietySBT.sol\":2732:2823  function name() external view virtual returns (string memory) {... */\n    tag_44:\n      mload(0x40)\n      tag_42\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n        /* \"v2/contracts/SoulSocietySBT.sol\":7048:7180  function getApproved(uint256 ) external pure returns (address )  {... */\n    tag_5:\n      tag_48\n      tag_49\n      calldatasize\n      0x04\n      tag_50\n      jump\t// in\n    tag_49:\n      tag_51\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1697:1729   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1679:1730   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1667:1669   */\n      0x20\n        /* \"#utility.yul\":1652:1670   */\n      add\n        /* \"v2/contracts/SoulSocietySBT.sol\":7048:7180  function getApproved(uint256 ) external pure returns (address )  {... */\n      tag_42\n        /* \"#utility.yul\":1533:1736   */\n      jump\n        /* \"v2/contracts/SoulSocietySBT.sol\":6796:6907  function approve(address , uint256 ) external pure{... */\n    tag_6:\n      tag_54\n      tag_55\n      calldatasize\n      0x04\n      tag_56\n      jump\t// in\n    tag_55:\n      tag_57\n      jump\t// in\n    tag_54:\n      stop\n        /* \"v2/contracts/SoulSocietySBT.sol\":3664:3753  function totalSupply() public view  returns (uint256) {... */\n    tag_7:\n        /* \"v2/contracts/SoulSocietySBT.sol\":3735:3746  _totalCount */\n      sload(0x03)\n        /* \"v2/contracts/SoulSocietySBT.sol\":3664:3753  function totalSupply() public view  returns (uint256) {... */\n    tag_58:\n      mload(0x40)\n        /* \"#utility.yul\":2324:2349   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":2312:2314   */\n      0x20\n        /* \"#utility.yul\":2297:2315   */\n      add\n        /* \"v2/contracts/SoulSocietySBT.sol\":3664:3753  function totalSupply() public view  returns (uint256) {... */\n      tag_42\n        /* \"#utility.yul\":2178:2355   */\n      jump\n        /* \"v2/contracts/SoulSocietySBT.sol\":4150:4428  function setProtected(bool isProtected_) public  returns (bool) {... */\n    tag_8:\n      tag_38\n      tag_63\n      calldatasize\n      0x04\n      tag_64\n      jump\t// in\n    tag_63:\n      tag_65\n      jump\t// in\n        /* \"v2/contracts/SoulSocietySBT.sol\":4434:4537  function getProtected(address to_) public view returns(bool) {... */\n    tag_9:\n      tag_38\n      tag_68\n      calldatasize\n      0x04\n      tag_69\n      jump\t// in\n    tag_68:\n      tag_70\n      jump\t// in\n        /* \"v2/contracts/SoulSocietySBT.sol\":6658:6790  function transferFrom(address , address , uint256 ) external pure {... */\n    tag_10:\n      tag_54\n      tag_73\n      calldatasize\n      0x04\n      tag_74\n      jump\t// in\n    tag_73:\n      tag_75\n      jump\t// in\n        /* \"v2/contracts/SoulSocietySBT.sol\":11044:11502  function tokenOfOwnerByIndex(address owner_, uint256 index_) public view returns (uint256) {... */\n    tag_11:\n      tag_58\n      tag_77\n      calldatasize\n      0x04\n      tag_56\n      jump\t// in\n    tag_77:\n      tag_78\n      jump\t// in\n        /* \"v2/contracts/SoulSocietySBT.sol\":7524:7663  function mint(address to_, uint256 tokenType_) public virtual onlyOwner returns(uint256) {... */\n    tag_12:\n      tag_58\n      tag_81\n      calldatasize\n      0x04\n      tag_56\n      jump\t// in\n    tag_81:\n      tag_82\n      jump\t// in\n        /* \"v2/contracts/SoulSocietySBT.sol\":6512:6652  function safeTransferFrom(address , address , uint256 ) external pure {... */\n    tag_13:\n      tag_54\n      tag_85\n      calldatasize\n      0x04\n      tag_74\n      jump\t// in\n    tag_85:\n      tag_86\n      jump\t// in\n        /* \"v2/contracts/SoulSocietySBT.sol\":9353:9584  function getGrowth(uint256 tokenId_) public view  returns (uint256) {... */\n    tag_14:\n      tag_58\n      tag_88\n      calldatasize\n      0x04\n      tag_50\n      jump\t// in\n    tag_88:\n      tag_89\n      jump\t// in\n        /* \"v2/contracts/SoulSocietySBT.sol\":5470:5707  function ownerOf(uint256 tokenId_) external  view  override  returns (address) {... */\n    tag_15:\n      tag_48\n      tag_92\n      calldatasize\n      0x04\n      tag_50\n      jump\t// in\n    tag_92:\n      tag_93\n      jump\t// in\n        /* \"v2/contracts/SoulSocietySBT.sol\":5932:6159  function balanceOf(address owner_) external  view  returns (uint256) {... */\n    tag_16:\n      tag_58\n      tag_96\n      calldatasize\n      0x04\n      tag_69\n      jump\t// in\n    tag_96:\n      tag_97\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1824:1925  function renounceOwnership() public virtual onlyOwner {... */\n    tag_17:\n      tag_54\n      tag_100\n      jump\t// in\n        /* \"v2/contracts/SoulSocietySBT.sol\":3760:3916  function getTokenType(uint256 tokenId_) public view returns (uint256) {... */\n    tag_18:\n      tag_58\n      tag_102\n      calldatasize\n      0x04\n      tag_50\n      jump\t// in\n    tag_102:\n      tag_103\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n    tag_19:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1247:1254  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1279  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n      jump(tag_48)\n        /* \"v2/contracts/SoulSocietySBT.sol\":8706:8903  function reset(address to_, uint256 tokenId_) public  {... */\n    tag_21:\n      tag_54\n      tag_112\n      calldatasize\n      0x04\n      tag_56\n      jump\t// in\n    tag_112:\n      tag_113\n      jump\t// in\n        /* \"v2/contracts/SoulSocietySBT.sol\":6913:7042  function setApprovalForAll(address , bool ) external pure {... */\n    tag_22:\n      tag_54\n      tag_115\n      calldatasize\n      0x04\n      tag_116\n      jump\t// in\n    tag_115:\n      tag_117\n      jump\t// in\n        /* \"v2/contracts/SoulSocietySBT.sol\":6341:6506  function safeTransferFrom(address , address , uint256 , bytes calldata) external pure {... */\n    tag_23:\n      tag_54\n      tag_85\n      calldatasize\n      0x04\n      tag_120\n      jump\t// in\n        /* \"v2/contracts/SoulSocietySBT.sol\":10380:10508  function growUp(address to_, uint256 tokenId_) public  onlyOwner returns(uint256) {... */\n    tag_24:\n      tag_58\n      tag_123\n      calldatasize\n      0x04\n      tag_56\n      jump\t// in\n    tag_123:\n      tag_124\n      jump\t// in\n        /* \"v2/contracts/SoulSocietySBT.sol\":3045:3366  function tokenURI(uint256 tokenId_) external view virtual  returns (string memory) {       ... */\n    tag_25:\n      tag_44\n      tag_127\n      calldatasize\n      0x04\n      tag_50\n      jump\t// in\n    tag_127:\n      tag_128\n      jump\t// in\n        /* \"v2/contracts/SoulSocietySBT.sol\":4713:4817  function isProtected(address to_) external view returns (bool) {... */\n    tag_26:\n      tag_38\n      tag_131\n      calldatasize\n      0x04\n      tag_69\n      jump\t// in\n    tag_131:\n      tag_132\n      jump\t// in\n        /* \"v2/contracts/SoulSocietySBT.sol\":3373:3566  function setTokenURI(string memory tokenURI_) external onlyOwner returns(string memory) {... */\n    tag_27:\n      tag_44\n      tag_135\n      calldatasize\n      0x04\n      tag_136\n      jump\t// in\n    tag_135:\n      tag_137\n      jump\t// in\n        /* \"v2/contracts/SoulSocietySBT.sol\":3572:3658  function totalUser() public view  returns (uint256) {... */\n    tag_28:\n        /* \"v2/contracts/SoulSocietySBT.sol\":3641:3651  _totalUser */\n      sload(0x02)\n        /* \"v2/contracts/SoulSocietySBT.sol\":3572:3658  function totalUser() public view  returns (uint256) {... */\n      jump(tag_58)\n        /* \"v2/contracts/SoulSocietySBT.sol\":7186:7329  function isApprovedForAll(address , address ) public pure returns (bool) {... */\n    tag_29:\n      tag_38\n      tag_143\n      calldatasize\n      0x04\n      tag_144\n      jump\t// in\n    tag_143:\n      tag_145\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2074:2272  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_30:\n      tag_54\n      tag_148\n      calldatasize\n      0x04\n      tag_69\n      jump\t// in\n    tag_148:\n      tag_149\n      jump\t// in\n        /* \"v2/contracts/SoulSocietySBT.sol\":2236:2473  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_41:\n        /* \"v2/contracts/SoulSocietySBT.sol\":2338:2342  bool */\n      0x00\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"v2/contracts/SoulSocietySBT.sol\":2374:2414  interfaceId == type(IERC721).interfaceId */\n      dup3\n      and\n      shl(0xe0, 0x80ac58cd)\n      eq\n      dup1\n        /* \"v2/contracts/SoulSocietySBT.sol\":2374:2466  interfaceId == type(IERC721).interfaceId ||... */\n      tag_152\n      jumpi\n      pop\n      shl(0xe0, 0x01ffc9a7)\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":937:977  interfaceId == type(IERC165).interfaceId */\n      dup4\n      and\n      eq\n        /* \"v2/contracts/SoulSocietySBT.sol\":2430:2466  super.supportsInterface(interfaceId) */\n    tag_152:\n        /* \"v2/contracts/SoulSocietySBT.sol\":2354:2466  return ... */\n      swap3\n        /* \"v2/contracts/SoulSocietySBT.sol\":2236:2473  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"v2/contracts/SoulSocietySBT.sol\":7048:7180  function getApproved(uint256 ) external pure returns (address )  {... */\n    tag_51:\n        /* \"v2/contracts/SoulSocietySBT.sol\":7130:7171  SoulSocietySBTNotSupported(\"getApproved\") */\n      mload(0x40)\n      shl(0xe3, 0x13f8dceb)\n      dup2\n      mstore\n        /* \"#utility.yul\":5832:5834   */\n      0x20\n        /* \"v2/contracts/SoulSocietySBT.sol\":7130:7171  SoulSocietySBTNotSupported(\"getApproved\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5814:5835   */\n      mstore\n        /* \"#utility.yul\":5871:5873   */\n      0x0b\n        /* \"#utility.yul\":5851:5869   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5844:5874   */\n      mstore\n      shl(0xaa, 0x19d95d105c1c1c9bdd9959)\n        /* \"#utility.yul\":5890:5908   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5883:5924   */\n      mstore\n        /* \"v2/contracts/SoulSocietySBT.sol\":7102:7109  address */\n      0x00\n      swap1\n        /* \"#utility.yul\":5941:5959   */\n      0x64\n      add\n        /* \"v2/contracts/SoulSocietySBT.sol\":7130:7171  SoulSocietySBTNotSupported(\"getApproved\") */\n    tag_156:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"v2/contracts/SoulSocietySBT.sol\":6796:6907  function approve(address , uint256 ) external pure{... */\n    tag_57:\n        /* \"v2/contracts/SoulSocietySBT.sol\":6863:6900  SoulSocietySBTNotSupported(\"approve\") */\n      mload(0x40)\n      shl(0xe3, 0x13f8dceb)\n      dup2\n      mstore\n        /* \"#utility.yul\":6172:6174   */\n      0x20\n        /* \"v2/contracts/SoulSocietySBT.sol\":6863:6900  SoulSocietySBTNotSupported(\"approve\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6154:6175   */\n      mstore\n        /* \"#utility.yul\":6211:6212   */\n      0x07\n        /* \"#utility.yul\":6191:6209   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6184:6213   */\n      mstore\n      shl(0xc8, 0x617070726f7665)\n        /* \"#utility.yul\":6229:6247   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6222:6259   */\n      mstore\n        /* \"#utility.yul\":6276:6294   */\n      0x64\n      add\n        /* \"v2/contracts/SoulSocietySBT.sol\":6863:6900  SoulSocietySBTNotSupported(\"approve\") */\n      tag_156\n        /* \"#utility.yul\":5970:6300   */\n      jump\n        /* \"v2/contracts/SoulSocietySBT.sol\":4150:4428  function setProtected(bool isProtected_) public  returns (bool) {... */\n    tag_65:\n        /* \"v2/contracts/SoulSocietySBT.sol\":4241:4251  msg.sender */\n      caller\n        /* \"v2/contracts/SoulSocietySBT.sol\":4208:4212  bool */\n      0x00\n        /* \"v2/contracts/SoulSocietySBT.sol\":6250:6267  _balances[owner_] */\n      swap1\n      dup2\n      mstore\n        /* \"v2/contracts/SoulSocietySBT.sol\":6250:6259  _balances */\n      0x07\n        /* \"v2/contracts/SoulSocietySBT.sol\":6250:6267  _balances[owner_] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"v2/contracts/SoulSocietySBT.sol\":4208:4212  bool */\n      dup2\n      lt\n        /* \"v2/contracts/SoulSocietySBT.sol\":4224:4329  if (!(_balanceOf(msg.sender) > 0)) {... */\n      tag_165\n      jumpi\n        /* \"v2/contracts/SoulSocietySBT.sol\":4280:4318  SoulSocietySBTInvalidOwner(msg.sender) */\n      mload(0x40)\n      shl(0xe0, 0x50159299)\n      dup2\n      mstore\n        /* \"v2/contracts/SoulSocietySBT.sol\":4307:4317  msg.sender */\n      caller\n        /* \"v2/contracts/SoulSocietySBT.sol\":4280:4318  SoulSocietySBTInvalidOwner(msg.sender) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1679:1730   */\n      mstore\n        /* \"#utility.yul\":1652:1670   */\n      0x24\n      add\n        /* \"v2/contracts/SoulSocietySBT.sol\":4280:4318  SoulSocietySBTInvalidOwner(msg.sender) */\n      tag_156\n        /* \"#utility.yul\":1533:1736   */\n      jump\n        /* \"v2/contracts/SoulSocietySBT.sol\":4224:4329  if (!(_balanceOf(msg.sender) > 0)) {... */\n    tag_165:\n        /* \"v2/contracts/SoulSocietySBT.sol\":4353:4363  msg.sender */\n      caller\n        /* \"v2/contracts/SoulSocietySBT.sol\":4339:4364  _userProtects[msg.sender] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"v2/contracts/SoulSocietySBT.sol\":4339:4352  _userProtects */\n      0x08\n        /* \"v2/contracts/SoulSocietySBT.sol\":4339:4364  _userProtects[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"v2/contracts/SoulSocietySBT.sol\":4339:4379  _userProtects[msg.sender] = isProtected_ */\n      dup1\n      sload\n      not(0xff)\n      and\n      dup5\n      iszero\n      iszero\n      or\n      swap1\n      sstore\n        /* \"v2/contracts/SoulSocietySBT.sol\":4397:4421  getProtected(msg.sender) */\n      tag_152\n      swap1\n        /* \"v2/contracts/SoulSocietySBT.sol\":4434:4537  function getProtected(address to_) public view returns(bool) {... */\n    tag_70:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"v2/contracts/SoulSocietySBT.sol\":4682:4700  _userProtects[to_] */\n      dup2\n      and\n        /* \"v2/contracts/SoulSocietySBT.sol\":4489:4493  bool */\n      0x00\n        /* \"v2/contracts/SoulSocietySBT.sol\":4682:4700  _userProtects[to_] */\n      swap1\n      dup2\n      mstore\n        /* \"v2/contracts/SoulSocietySBT.sol\":4682:4695  _userProtects */\n      0x08\n        /* \"v2/contracts/SoulSocietySBT.sol\":4682:4700  _userProtects[to_] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n      0xff\n      and\n        /* \"v2/contracts/SoulSocietySBT.sol\":4512:4530  _getProtected(to_) */\n      tag_152\n        /* \"v2/contracts/SoulSocietySBT.sol\":4543:4707  function _getProtected(address to_) internal  view returns(bool) {... */\n      jump\n        /* \"v2/contracts/SoulSocietySBT.sol\":6658:6790  function transferFrom(address , address , uint256 ) external pure {... */\n    tag_75:\n        /* \"v2/contracts/SoulSocietySBT.sol\":6741:6783  SoulSocietySBTNotSupported(\"transferFrom\") */\n      mload(0x40)\n      shl(0xe3, 0x13f8dceb)\n      dup2\n      mstore\n        /* \"#utility.yul\":6507:6509   */\n      0x20\n        /* \"v2/contracts/SoulSocietySBT.sol\":6741:6783  SoulSocietySBTNotSupported(\"transferFrom\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6489:6510   */\n      mstore\n        /* \"#utility.yul\":6546:6548   */\n      0x0c\n        /* \"#utility.yul\":6526:6544   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6519:6549   */\n      mstore\n      shl(0xa0, 0x7472616e7366657246726f6d)\n        /* \"#utility.yul\":6565:6583   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6558:6600   */\n      mstore\n        /* \"#utility.yul\":6617:6635   */\n      0x64\n      add\n        /* \"v2/contracts/SoulSocietySBT.sol\":6741:6783  SoulSocietySBTNotSupported(\"transferFrom\") */\n      tag_156\n        /* \"#utility.yul\":6305:6641   */\n      jump\n        /* \"v2/contracts/SoulSocietySBT.sol\":11044:11502  function tokenOfOwnerByIndex(address owner_, uint256 index_) public view returns (uint256) {... */\n    tag_78:\n        /* \"v2/contracts/SoulSocietySBT.sol\":11126:11133  uint256 */\n      0x00\n        /* \"v2/contracts/SoulSocietySBT.sol\":11220:11240  _isProtected(owner_) */\n      tag_175\n        /* \"v2/contracts/SoulSocietySBT.sol\":11233:11239  owner_ */\n      dup4\n        /* \"v2/contracts/SoulSocietySBT.sol\":11220:11232  _isProtected */\n      tag_176\n        /* \"v2/contracts/SoulSocietySBT.sol\":11220:11240  _isProtected(owner_) */\n      jump\t// in\n    tag_175:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"v2/contracts/SoulSocietySBT.sol\":6250:6267  _balances[owner_] */\n      dup4\n      and\n        /* \"v2/contracts/SoulSocietySBT.sol\":6224:6231  uint256 */\n      0x00\n        /* \"v2/contracts/SoulSocietySBT.sol\":6250:6267  _balances[owner_] */\n      swap1\n      dup2\n      mstore\n        /* \"v2/contracts/SoulSocietySBT.sol\":6250:6259  _balances */\n      0x07\n        /* \"v2/contracts/SoulSocietySBT.sol\":6250:6267  _balances[owner_] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"v2/contracts/SoulSocietySBT.sol\":11259:11265  index_ */\n      dup3\n        /* \"v2/contracts/SoulSocietySBT.sol\":11259:11286  index_ < _balanceOf(owner_) */\n      lt\n        /* \"v2/contracts/SoulSocietySBT.sol\":11251:11303  require(index_ < _balanceOf(owner_), \"Out of Index\") */\n      tag_178\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6848:6850   */\n      0x20\n        /* \"v2/contracts/SoulSocietySBT.sol\":11251:11303  require(index_ < _balanceOf(owner_), \"Out of Index\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6830:6851   */\n      mstore\n        /* \"#utility.yul\":6887:6889   */\n      0x0c\n        /* \"#utility.yul\":6867:6885   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6860:6890   */\n      mstore\n      shl(0xa3, 0x09eeae840decc4092dcc8caf)\n        /* \"#utility.yul\":6906:6924   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6899:6941   */\n      mstore\n        /* \"#utility.yul\":6958:6976   */\n      0x64\n      add\n        /* \"v2/contracts/SoulSocietySBT.sol\":11251:11303  require(index_ < _balanceOf(owner_), \"Out of Index\") */\n      tag_156\n        /* \"#utility.yul\":6646:6982   */\n      jump\n        /* \"v2/contracts/SoulSocietySBT.sol\":11251:11303  require(index_ < _balanceOf(owner_), \"Out of Index\") */\n    tag_178:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"v2/contracts/SoulSocietySBT.sol\":11318:11338  owner_ == address(0) */\n      dup4\n      and\n        /* \"v2/contracts/SoulSocietySBT.sol\":11314:11413  if (owner_ == address(0)) {... */\n      tag_181\n      jumpi\n        /* \"v2/contracts/SoulSocietySBT.sol\":11361:11402  SoulSocietySBTInvalidReceiver(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0x74f5e87d)\n      dup2\n      mstore\n        /* \"v2/contracts/SoulSocietySBT.sol\":11399:11400  0 */\n      0x00\n        /* \"v2/contracts/SoulSocietySBT.sol\":11361:11402  SoulSocietySBTInvalidReceiver(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1679:1730   */\n      mstore\n        /* \"#utility.yul\":1652:1670   */\n      0x24\n      add\n        /* \"v2/contracts/SoulSocietySBT.sol\":11361:11402  SoulSocietySBTInvalidReceiver(address(0)) */\n      tag_156\n        /* \"#utility.yul\":1533:1736   */\n      jump\n        /* \"v2/contracts/SoulSocietySBT.sol\":11314:11413  if (owner_ == address(0)) {... */\n    tag_181:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"v2/contracts/SoulSocietySBT.sol\":11441:11461  _ownedTokens[owner_] */\n      swap2\n      swap1\n      swap2\n      and\n        /* \"v2/contracts/SoulSocietySBT.sol\":11423:11438  uint256 tokenId */\n      0x00\n        /* \"v2/contracts/SoulSocietySBT.sol\":11441:11461  _ownedTokens[owner_] */\n      swap1\n      dup2\n      mstore\n        /* \"v2/contracts/SoulSocietySBT.sol\":11441:11453  _ownedTokens */\n      0x09\n        /* \"v2/contracts/SoulSocietySBT.sol\":11441:11461  _ownedTokens[owner_] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"v2/contracts/SoulSocietySBT.sol\":11441:11469  _ownedTokens[owner_][index_] */\n      swap4\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"v2/contracts/SoulSocietySBT.sol\":11044:11502  function tokenOfOwnerByIndex(address owner_, uint256 index_) public view returns (uint256) {... */\n      jump\t// out\n        /* \"v2/contracts/SoulSocietySBT.sol\":7524:7663  function mint(address to_, uint256 tokenType_) public virtual onlyOwner returns(uint256) {... */\n    tag_82:\n        /* \"v2/contracts/SoulSocietySBT.sol\":7604:7611  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_184\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_185\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_184:\n        /* \"v2/contracts/SoulSocietySBT.sol\":7630:7656  _safeMint(to_, tokenType_) */\n      tag_187\n        /* \"v2/contracts/SoulSocietySBT.sol\":7640:7643  to_ */\n      dup4\n        /* \"v2/contracts/SoulSocietySBT.sol\":7645:7655  tokenType_ */\n      dup4\n        /* \"v2/contracts/SoulSocietySBT.sol\":7630:7639  _safeMint */\n      tag_188\n        /* \"v2/contracts/SoulSocietySBT.sol\":7630:7656  _safeMint(to_, tokenType_) */\n      jump\t// in\n    tag_187:\n        /* \"v2/contracts/SoulSocietySBT.sol\":7623:7656  return _safeMint(to_, tokenType_) */\n      swap4\n        /* \"v2/contracts/SoulSocietySBT.sol\":7524:7663  function mint(address to_, uint256 tokenType_) public virtual onlyOwner returns(uint256) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"v2/contracts/SoulSocietySBT.sol\":6512:6652  function safeTransferFrom(address , address , uint256 ) external pure {... */\n    tag_86:\n        /* \"v2/contracts/SoulSocietySBT.sol\":6599:6645  SoulSocietySBTNotSupported(\"safeTransferFrom\") */\n      mload(0x40)\n      shl(0xe3, 0x13f8dceb)\n      dup2\n      mstore\n        /* \"#utility.yul\":7189:7191   */\n      0x20\n        /* \"v2/contracts/SoulSocietySBT.sol\":6599:6645  SoulSocietySBTNotSupported(\"safeTransferFrom\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7171:7192   */\n      mstore\n        /* \"#utility.yul\":7228:7230   */\n      0x10\n        /* \"#utility.yul\":7208:7226   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7201:7231   */\n      mstore\n      shl(0x80, 0x736166655472616e7366657246726f6d)\n        /* \"#utility.yul\":7247:7265   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7240:7286   */\n      mstore\n        /* \"#utility.yul\":7303:7321   */\n      0x64\n      add\n        /* \"v2/contracts/SoulSocietySBT.sol\":6599:6645  SoulSocietySBTNotSupported(\"safeTransferFrom\") */\n      tag_156\n        /* \"#utility.yul\":6987:7327   */\n      jump\n        /* \"v2/contracts/SoulSocietySBT.sol\":9353:9584  function getGrowth(uint256 tokenId_) public view  returns (uint256) {... */\n    tag_89:\n        /* \"v2/contracts/SoulSocietySBT.sol\":9412:9419  uint256 */\n      0x00\n        /* \"v2/contracts/SoulSocietySBT.sol\":9507:9536  _isProtectedTokenId(tokenId_) */\n      tag_193\n        /* \"v2/contracts/SoulSocietySBT.sol\":9527:9535  tokenId_ */\n      dup3\n        /* \"v2/contracts/SoulSocietySBT.sol\":9507:9526  _isProtectedTokenId */\n      tag_194\n        /* \"v2/contracts/SoulSocietySBT.sol\":9507:9536  _isProtectedTokenId(tokenId_) */\n      jump\t// in\n    tag_193:\n      pop\n        /* \"v2/contracts/SoulSocietySBT.sol\":9554:9577  _tokenGrowths[tokenId_] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"v2/contracts/SoulSocietySBT.sol\":9554:9567  _tokenGrowths */\n      0x06\n        /* \"v2/contracts/SoulSocietySBT.sol\":9554:9577  _tokenGrowths[tokenId_] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"v2/contracts/SoulSocietySBT.sol\":9353:9584  function getGrowth(uint256 tokenId_) public view  returns (uint256) {... */\n      jump\t// out\n        /* \"v2/contracts/SoulSocietySBT.sol\":5470:5707  function ownerOf(uint256 tokenId_) external  view  override  returns (address) {... */\n    tag_93:\n        /* \"v2/contracts/SoulSocietySBT.sol\":5540:5547  address */\n      0x00\n        /* \"v2/contracts/SoulSocietySBT.sol\":5636:5665  _isProtectedTokenId(tokenId_) */\n      tag_196\n        /* \"v2/contracts/SoulSocietySBT.sol\":5656:5664  tokenId_ */\n      dup3\n        /* \"v2/contracts/SoulSocietySBT.sol\":5636:5655  _isProtectedTokenId */\n      tag_194\n        /* \"v2/contracts/SoulSocietySBT.sol\":5636:5665  _isProtectedTokenId(tokenId_) */\n      jump\t// in\n    tag_196:\n      pop\n        /* \"v2/contracts/SoulSocietySBT.sol\":5683:5700  _owners[tokenId_] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"v2/contracts/SoulSocietySBT.sol\":5683:5690  _owners */\n      0x04\n        /* \"v2/contracts/SoulSocietySBT.sol\":5683:5700  _owners[tokenId_] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"v2/contracts/SoulSocietySBT.sol\":5470:5707  function ownerOf(uint256 tokenId_) external  view  override  returns (address) {... */\n      jump\t// out\n        /* \"v2/contracts/SoulSocietySBT.sol\":5932:6159  function balanceOf(address owner_) external  view  returns (uint256) {... */\n    tag_97:\n        /* \"v2/contracts/SoulSocietySBT.sol\":5992:5999  uint256 */\n      0x00\n        /* \"v2/contracts/SoulSocietySBT.sol\":6088:6108  _isProtected(owner_) */\n      tag_198\n        /* \"v2/contracts/SoulSocietySBT.sol\":6101:6107  owner_ */\n      dup3\n        /* \"v2/contracts/SoulSocietySBT.sol\":6088:6100  _isProtected */\n      tag_176\n        /* \"v2/contracts/SoulSocietySBT.sol\":6088:6108  _isProtected(owner_) */\n      jump\t// in\n    tag_198:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"v2/contracts/SoulSocietySBT.sol\":6250:6267  _balances[owner_] */\n      dup3\n      and\n        /* \"v2/contracts/SoulSocietySBT.sol\":6224:6231  uint256 */\n      0x00\n        /* \"v2/contracts/SoulSocietySBT.sol\":6250:6267  _balances[owner_] */\n      swap1\n      dup2\n      mstore\n        /* \"v2/contracts/SoulSocietySBT.sol\":6250:6259  _balances */\n      0x07\n        /* \"v2/contracts/SoulSocietySBT.sol\":6250:6267  _balances[owner_] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"v2/contracts/SoulSocietySBT.sol\":6134:6152  _balanceOf(owner_) */\n      tag_152\n        /* \"v2/contracts/SoulSocietySBT.sol\":6165:6274  function _balanceOf(address owner_) internal view returns (uint256) {... */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1824:1925  function renounceOwnership() public virtual onlyOwner {... */\n    tag_100:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_201\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_185\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_201:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1888:1918  _transferOwnership(address(0)) */\n      tag_203\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1915:1916  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1888:1906  _transferOwnership */\n      tag_204\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1888:1918  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_203:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1824:1925  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"v2/contracts/SoulSocietySBT.sol\":3760:3916  function getTokenType(uint256 tokenId_) public view returns (uint256) {... */\n    tag_103:\n        /* \"v2/contracts/SoulSocietySBT.sol\":3821:3828  uint256 */\n      0x00\n        /* \"v2/contracts/SoulSocietySBT.sol\":3841:3870  _isProtectedTokenId(tokenId_) */\n      tag_206\n        /* \"v2/contracts/SoulSocietySBT.sol\":3861:3869  tokenId_ */\n      dup3\n        /* \"v2/contracts/SoulSocietySBT.sol\":3841:3860  _isProtectedTokenId */\n      tag_194\n        /* \"v2/contracts/SoulSocietySBT.sol\":3841:3870  _isProtectedTokenId(tokenId_) */\n      jump\t// in\n    tag_206:\n      pop\n        /* \"v2/contracts/SoulSocietySBT.sol\":3888:3909  _tokenTypes[tokenId_] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"v2/contracts/SoulSocietySBT.sol\":3888:3899  _tokenTypes */\n      0x05\n        /* \"v2/contracts/SoulSocietySBT.sol\":3888:3909  _tokenTypes[tokenId_] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"v2/contracts/SoulSocietySBT.sol\":3760:3916  function getTokenType(uint256 tokenId_) public view returns (uint256) {... */\n      jump\t// out\n        /* \"v2/contracts/SoulSocietySBT.sol\":8706:8903  function reset(address to_, uint256 tokenId_) public  {... */\n    tag_113:\n        /* \"v2/contracts/SoulSocietySBT.sol\":8774:8784  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"v2/contracts/SoulSocietySBT.sol\":8774:8791  msg.sender != to_ */\n      dup4\n      and\n      eq\n        /* \"v2/contracts/SoulSocietySBT.sol\":8770:8856  if (msg.sender != to_) {... */\n      tag_210\n      jumpi\n        /* \"v2/contracts/SoulSocietySBT.sol\":8814:8845  SoulSocietySBTInvalidOwner(to_) */\n      mload(0x40)\n      shl(0xe0, 0x50159299)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1697:1729   */\n      dup4\n      and\n        /* \"v2/contracts/SoulSocietySBT.sol\":8814:8845  SoulSocietySBTInvalidOwner(to_) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1679:1730   */\n      mstore\n        /* \"#utility.yul\":1652:1670   */\n      0x24\n      add\n        /* \"v2/contracts/SoulSocietySBT.sol\":8814:8845  SoulSocietySBTInvalidOwner(to_) */\n      tag_156\n        /* \"#utility.yul\":1533:1736   */\n      jump\n        /* \"v2/contracts/SoulSocietySBT.sol\":8770:8856  if (msg.sender != to_) {... */\n    tag_210:\n        /* \"v2/contracts/SoulSocietySBT.sol\":8865:8896  _setGrowthToZero(to_, tokenId_) */\n      tag_212\n        /* \"v2/contracts/SoulSocietySBT.sol\":8882:8885  to_ */\n      dup3\n        /* \"v2/contracts/SoulSocietySBT.sol\":8887:8895  tokenId_ */\n      dup3\n        /* \"v2/contracts/SoulSocietySBT.sol\":8865:8881  _setGrowthToZero */\n      tag_213\n        /* \"v2/contracts/SoulSocietySBT.sol\":8865:8896  _setGrowthToZero(to_, tokenId_) */\n      jump\t// in\n    tag_212:\n        /* \"v2/contracts/SoulSocietySBT.sol\":8706:8903  function reset(address to_, uint256 tokenId_) public  {... */\n      pop\n      pop\n      jump\t// out\n        /* \"v2/contracts/SoulSocietySBT.sol\":6913:7042  function setApprovalForAll(address , bool ) external pure {... */\n    tag_117:\n        /* \"v2/contracts/SoulSocietySBT.sol\":6988:7035  SoulSocietySBTNotSupported(\"setApprovalForAll\") */\n      mload(0x40)\n      shl(0xe3, 0x13f8dceb)\n      dup2\n      mstore\n        /* \"#utility.yul\":7534:7536   */\n      0x20\n        /* \"v2/contracts/SoulSocietySBT.sol\":6988:7035  SoulSocietySBTNotSupported(\"setApprovalForAll\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7516:7537   */\n      mstore\n        /* \"#utility.yul\":7573:7575   */\n      0x11\n        /* \"#utility.yul\":7553:7571   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7546:7576   */\n      mstore\n      shl(0x7a, 0x1cd95d105c1c1c9bdd985b119bdc905b1b)\n        /* \"#utility.yul\":7592:7610   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7585:7632   */\n      mstore\n        /* \"#utility.yul\":7649:7667   */\n      0x64\n      add\n        /* \"v2/contracts/SoulSocietySBT.sol\":6988:7035  SoulSocietySBTNotSupported(\"setApprovalForAll\") */\n      tag_156\n        /* \"#utility.yul\":7332:7673   */\n      jump\n        /* \"v2/contracts/SoulSocietySBT.sol\":10380:10508  function growUp(address to_, uint256 tokenId_) public  onlyOwner returns(uint256) {... */\n    tag_124:\n        /* \"v2/contracts/SoulSocietySBT.sol\":10453:10460  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_220\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_185\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_220:\n        /* \"v2/contracts/SoulSocietySBT.sol\":10479:10501  _growUp(to_, tokenId_) */\n      tag_187\n        /* \"v2/contracts/SoulSocietySBT.sol\":10487:10490  to_ */\n      dup4\n        /* \"v2/contracts/SoulSocietySBT.sol\":10492:10500  tokenId_ */\n      dup4\n        /* \"v2/contracts/SoulSocietySBT.sol\":10479:10486  _growUp */\n      tag_223\n        /* \"v2/contracts/SoulSocietySBT.sol\":10479:10501  _growUp(to_, tokenId_) */\n      jump\t// in\n        /* \"v2/contracts/SoulSocietySBT.sol\":3045:3366  function tokenURI(uint256 tokenId_) external view virtual  returns (string memory) {       ... */\n    tag_128:\n        /* \"v2/contracts/SoulSocietySBT.sol\":3113:3126  string memory */\n      0x60\n        /* \"v2/contracts/SoulSocietySBT.sol\":3180:3209  _isProtectedTokenId(tokenId_) */\n      tag_225\n        /* \"v2/contracts/SoulSocietySBT.sol\":3200:3208  tokenId_ */\n      dup3\n        /* \"v2/contracts/SoulSocietySBT.sol\":3180:3199  _isProtectedTokenId */\n      tag_194\n        /* \"v2/contracts/SoulSocietySBT.sol\":3180:3209  _isProtectedTokenId(tokenId_) */\n      jump\t// in\n    tag_225:\n        /* \"v2/contracts/SoulSocietySBT.sol\":3252:3253  0 */\n      0x00\n        /* \"v2/contracts/SoulSocietySBT.sol\":3237:3241  _uri */\n      0x01\n        /* \"v2/contracts/SoulSocietySBT.sol\":3231:3249  bytes(_uri).length */\n      dup1\n      sload\n      tag_226\n      swap1\n      tag_227\n      jump\t// in\n    tag_226:\n      swap1\n      pop\n        /* \"v2/contracts/SoulSocietySBT.sol\":3231:3253  bytes(_uri).length > 0 */\n      gt\n        /* \"v2/contracts/SoulSocietySBT.sol\":3231:3359  bytes(_uri).length > 0 ? string(abi.encodePacked(_uri,tokenId_.toString(),\"?tokenType=\", _tokenTypes[tokenId_].toString())) : \"\" */\n      tag_228\n      jumpi\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      jump(tag_152)\n    tag_228:\n        /* \"v2/contracts/SoulSocietySBT.sol\":3280:3284  _uri */\n      0x01\n        /* \"v2/contracts/SoulSocietySBT.sol\":3285:3304  tokenId_.toString() */\n      tag_230\n        /* \"v2/contracts/SoulSocietySBT.sol\":3285:3293  tokenId_ */\n      dup4\n        /* \"v2/contracts/SoulSocietySBT.sol\":3285:3302  tokenId_.toString */\n      tag_231\n        /* \"v2/contracts/SoulSocietySBT.sol\":3285:3304  tokenId_.toString() */\n      jump\t// in\n    tag_230:\n        /* \"v2/contracts/SoulSocietySBT.sol\":3320:3341  _tokenTypes[tokenId_] */\n      0x00\n      dup5\n      dup2\n      mstore\n        /* \"v2/contracts/SoulSocietySBT.sol\":3320:3331  _tokenTypes */\n      0x05\n        /* \"v2/contracts/SoulSocietySBT.sol\":3320:3341  _tokenTypes[tokenId_] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"v2/contracts/SoulSocietySBT.sol\":3320:3352  _tokenTypes[tokenId_].toString() */\n      tag_232\n      swap1\n        /* \"v2/contracts/SoulSocietySBT.sol\":3320:3350  _tokenTypes[tokenId_].toString */\n      tag_231\n        /* \"v2/contracts/SoulSocietySBT.sol\":3320:3352  _tokenTypes[tokenId_].toString() */\n      jump\t// in\n    tag_232:\n        /* \"v2/contracts/SoulSocietySBT.sol\":3263:3353  abi.encodePacked(_uri,tokenId_.toString(),\"?tokenType=\", _tokenTypes[tokenId_].toString()) */\n      add(0x20, mload(0x40))\n      tag_233\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_234\n      jump\t// in\n    tag_233:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"v2/contracts/SoulSocietySBT.sol\":3224:3359  return bytes(_uri).length > 0 ? string(abi.encodePacked(_uri,tokenId_.toString(),\"?tokenType=\", _tokenTypes[tokenId_].toString())) : \"\" */\n      swap3\n        /* \"v2/contracts/SoulSocietySBT.sol\":3045:3366  function tokenURI(uint256 tokenId_) external view virtual  returns (string memory) {       ... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"v2/contracts/SoulSocietySBT.sol\":4713:4817  function isProtected(address to_) external view returns (bool) {... */\n    tag_132:\n        /* \"v2/contracts/SoulSocietySBT.sol\":4770:4774  bool */\n      0x00\n        /* \"v2/contracts/SoulSocietySBT.sol\":4793:4810  _isProtected(to_) */\n      tag_152\n        /* \"v2/contracts/SoulSocietySBT.sol\":4806:4809  to_ */\n      dup3\n        /* \"v2/contracts/SoulSocietySBT.sol\":4793:4805  _isProtected */\n      tag_176\n        /* \"v2/contracts/SoulSocietySBT.sol\":4793:4810  _isProtected(to_) */\n      jump\t// in\n        /* \"v2/contracts/SoulSocietySBT.sol\":3373:3566  function setTokenURI(string memory tokenURI_) external onlyOwner returns(string memory) {... */\n    tag_137:\n        /* \"v2/contracts/SoulSocietySBT.sol\":3446:3459  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_238\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_185\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_238:\n        /* \"v2/contracts/SoulSocietySBT.sol\":3471:3475  _uri */\n      0x01\n        /* \"v2/contracts/SoulSocietySBT.sol\":3471:3487  _uri = tokenURI_ */\n      tag_240\n        /* \"v2/contracts/SoulSocietySBT.sol\":3478:3487  tokenURI_ */\n      dup4\n        /* \"v2/contracts/SoulSocietySBT.sol\":3471:3475  _uri */\n      dup3\n        /* \"v2/contracts/SoulSocietySBT.sol\":3471:3487  _uri = tokenURI_ */\n      tag_241\n      jump\t// in\n    tag_240:\n      pop\n        /* \"v2/contracts/SoulSocietySBT.sol\":3515:3525  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"v2/contracts/SoulSocietySBT.sol\":3503:3537  SetTokenURI(msg.sender, tokenURI_) */\n      and\n      0x70e6a9dc20d331ce8e747d7de8444f26f544d9003beb11d8c46e802ab8d36fc9\n        /* \"v2/contracts/SoulSocietySBT.sol\":3527:3536  tokenURI_ */\n      dup4\n        /* \"v2/contracts/SoulSocietySBT.sol\":3503:3537  SetTokenURI(msg.sender, tokenURI_) */\n      mload(0x40)\n      tag_242\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_242:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"v2/contracts/SoulSocietySBT.sol\":3555:3559  _uri */\n      0x01\n        /* \"v2/contracts/SoulSocietySBT.sol\":3548:3559  return _uri */\n      dup1\n      sload\n      tag_243\n      swap1\n      tag_227\n      jump\t// in\n    tag_243:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_244\n      swap1\n      tag_227\n      jump\t// in\n    tag_244:\n      dup1\n      iszero\n      tag_245\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_246\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_245)\n    tag_246:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_247:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_247\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_245:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1117:1118  _ */\n    tag_239:\n        /* \"v2/contracts/SoulSocietySBT.sol\":3373:3566  function setTokenURI(string memory tokenURI_) external onlyOwner returns(string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"v2/contracts/SoulSocietySBT.sol\":7186:7329  function isApprovedForAll(address , address ) public pure returns (bool) {... */\n    tag_145:\n        /* \"v2/contracts/SoulSocietySBT.sol\":7276:7322  SoulSocietySBTNotSupported(\"isApprovedForAll\") */\n      mload(0x40)\n      shl(0xe3, 0x13f8dceb)\n      dup2\n      mstore\n        /* \"#utility.yul\":11857:11859   */\n      0x20\n        /* \"v2/contracts/SoulSocietySBT.sol\":7276:7322  SoulSocietySBTNotSupported(\"isApprovedForAll\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11839:11860   */\n      mstore\n        /* \"#utility.yul\":11896:11898   */\n      0x10\n        /* \"#utility.yul\":11876:11894   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11869:11899   */\n      mstore\n      shl(0x82, 0x1a5cd05c1c1c9bdd9959119bdc905b1b)\n        /* \"#utility.yul\":11915:11933   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11908:11954   */\n      mstore\n        /* \"v2/contracts/SoulSocietySBT.sol\":7253:7257  bool */\n      0x00\n      swap1\n        /* \"#utility.yul\":11971:11989   */\n      0x64\n      add\n        /* \"v2/contracts/SoulSocietySBT.sol\":7276:7322  SoulSocietySBTNotSupported(\"isApprovedForAll\") */\n      tag_156\n        /* \"#utility.yul\":11655:11995   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2074:2272  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_149:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_253\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_185\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_253:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2162:2184  newOwner != address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2154:2227  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_255\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":12202:12204   */\n      0x20\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2154:2227  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12184:12205   */\n      mstore\n        /* \"#utility.yul\":12241:12243   */\n      0x26\n        /* \"#utility.yul\":12221:12239   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12214:12244   */\n      mstore\n        /* \"#utility.yul\":12280:12314   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":12260:12278   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12253:12315   */\n      mstore\n      shl(0xd0, 0x646472657373)\n        /* \"#utility.yul\":12331:12349   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":12324:12360   */\n      mstore\n        /* \"#utility.yul\":12377:12396   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2154:2227  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_156\n        /* \"#utility.yul\":12000:12402   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2154:2227  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n    tag_255:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2237:2265  _transferOwnership(newOwner) */\n      tag_258\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2256:2264  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2237:2255  _transferOwnership */\n      tag_204\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2237:2265  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_258:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2074:2272  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"v2/contracts/SoulSocietySBT.sol\":4823:5027  function _isProtected(address to_) internal view returns (bool) {        ... */\n    tag_176:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"v2/contracts/SoulSocietySBT.sol\":4909:4927  _userProtects[to_] */\n      dup2\n      and\n        /* \"v2/contracts/SoulSocietySBT.sol\":4881:4885  bool */\n      0x00\n        /* \"v2/contracts/SoulSocietySBT.sol\":4909:4927  _userProtects[to_] */\n      swap1\n      dup2\n      mstore\n        /* \"v2/contracts/SoulSocietySBT.sol\":4909:4922  _userProtects */\n      0x08\n        /* \"v2/contracts/SoulSocietySBT.sol\":4909:4927  _userProtects[to_] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n      0xff\n      and\n        /* \"v2/contracts/SoulSocietySBT.sol\":4909:4935  _userProtects[to_] == true */\n      iszero\n      iszero\n        /* \"v2/contracts/SoulSocietySBT.sol\":4909:4927  _userProtects[to_] */\n      0x01\n        /* \"v2/contracts/SoulSocietySBT.sol\":4909:4935  _userProtects[to_] == true */\n      sub\n        /* \"v2/contracts/SoulSocietySBT.sol\":4905:4989  if (_userProtects[to_] == true)... */\n      tag_263\n      jumpi\n        /* \"v2/contracts/SoulSocietySBT.sol\":4956:4989  SoulSocietySBTProtectedOwner(to_) */\n      mload(0x40)\n      shl(0xe0, 0x904e928b)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1697:1729   */\n      dup4\n      and\n        /* \"v2/contracts/SoulSocietySBT.sol\":4956:4989  SoulSocietySBTProtectedOwner(to_) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1679:1730   */\n      mstore\n        /* \"#utility.yul\":1652:1670   */\n      0x24\n      add\n        /* \"v2/contracts/SoulSocietySBT.sol\":4956:4989  SoulSocietySBTProtectedOwner(to_) */\n      tag_156\n        /* \"#utility.yul\":1533:1736   */\n      jump\n        /* \"v2/contracts/SoulSocietySBT.sol\":4905:4989  if (_userProtects[to_] == true)... */\n    tag_263:\n      pop\n        /* \"v2/contracts/SoulSocietySBT.sol\":5015:5020  false */\n      0x00\n      swap2\n        /* \"v2/contracts/SoulSocietySBT.sol\":4823:5027  function _isProtected(address to_) internal view returns (bool) {        ... */\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1359:1489  function _checkOwner() internal view virtual {... */\n    tag_185:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1247:1254  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1279  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1445  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_203\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":12609:12611   */\n      0x20\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12591:12612   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":12628:12646   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12621:12651   */\n      mstore\n        /* \"#utility.yul\":12687:12721   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":12667:12685   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12660:12722   */\n      mstore\n        /* \"#utility.yul\":12739:12757   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_156\n        /* \"#utility.yul\":12407:12763   */\n      jump\n        /* \"v2/contracts/SoulSocietySBT.sol\":7669:8700  function _safeMint(address to_, uint256 tokenType_) internal virtual returns(uint256) {... */\n    tag_188:\n        /* \"v2/contracts/SoulSocietySBT.sol\":7746:7753  uint256 */\n      0x00\n        /* \"v2/contracts/SoulSocietySBT.sol\":7766:7781  uint256 tokenId */\n      dup1\n        /* \"v2/contracts/SoulSocietySBT.sol\":7784:7795  _totalCount */\n      sload(0x03)\n        /* \"v2/contracts/SoulSocietySBT.sol\":7798:7799  1 */\n      0x01\n        /* \"v2/contracts/SoulSocietySBT.sol\":7784:7799  _totalCount + 1 */\n      tag_273\n      swap2\n      swap1\n      tag_274\n      jump\t// in\n    tag_273:\n        /* \"v2/contracts/SoulSocietySBT.sol\":7766:7799  uint256 tokenId = _totalCount + 1 */\n      swap1\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"v2/contracts/SoulSocietySBT.sol\":7819:7836  to_ == address(0) */\n      dup5\n      and\n        /* \"v2/contracts/SoulSocietySBT.sol\":7815:7911  if (to_ == address(0)) {... */\n      tag_275\n      jumpi\n        /* \"v2/contracts/SoulSocietySBT.sol\":7859:7900  SoulSocietySBTInvalidReceiver(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0x74f5e87d)\n      dup2\n      mstore\n        /* \"v2/contracts/SoulSocietySBT.sol\":7897:7898  0 */\n      0x00\n        /* \"v2/contracts/SoulSocietySBT.sol\":7859:7900  SoulSocietySBTInvalidReceiver(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1679:1730   */\n      mstore\n        /* \"#utility.yul\":1652:1670   */\n      0x24\n      add\n        /* \"v2/contracts/SoulSocietySBT.sol\":7859:7900  SoulSocietySBTInvalidReceiver(address(0)) */\n      tag_156\n        /* \"#utility.yul\":1533:1736   */\n      jump\n        /* \"v2/contracts/SoulSocietySBT.sol\":7815:7911  if (to_ == address(0)) {... */\n    tag_275:\n        /* \"v2/contracts/SoulSocietySBT.sol\":9953:9957  bool */\n      0x00\n        /* \"v2/contracts/SoulSocietySBT.sol\":5902:5919  _owners[tokenId_] */\n      dup2\n      dup2\n      mstore\n        /* \"v2/contracts/SoulSocietySBT.sol\":5902:5909  _owners */\n      0x04\n        /* \"v2/contracts/SoulSocietySBT.sol\":5902:5919  _owners[tokenId_] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"v2/contracts/SoulSocietySBT.sol\":9976:10007  _ownerOf(tokenId) != address(0) */\n      iszero\n        /* \"v2/contracts/SoulSocietySBT.sol\":7921:8008  if (_exists(tokenId)) {... */\n      tag_279\n      jumpi\n        /* \"v2/contracts/SoulSocietySBT.sol\":7964:7997  SoulSocietySBTExistToken(tokenId) */\n      mload(0x40)\n      shl(0xe1, 0x79a15ee1)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":2324:2349   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":2297:2315   */\n      0x24\n      add\n        /* \"v2/contracts/SoulSocietySBT.sol\":7964:7997  SoulSocietySBTExistToken(tokenId) */\n      tag_156\n        /* \"#utility.yul\":2178:2355   */\n      jump\n        /* \"v2/contracts/SoulSocietySBT.sol\":7921:8008  if (_exists(tokenId)) {... */\n    tag_279:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"v2/contracts/SoulSocietySBT.sol\":10108:10121  _balances[to] */\n      dup5\n      and\n        /* \"v2/contracts/SoulSocietySBT.sol\":10085:10089  bool */\n      0x00\n        /* \"v2/contracts/SoulSocietySBT.sol\":10108:10121  _balances[to] */\n      swap1\n      dup2\n      mstore\n        /* \"v2/contracts/SoulSocietySBT.sol\":10108:10117  _balances */\n      0x07\n        /* \"v2/contracts/SoulSocietySBT.sol\":10108:10121  _balances[to] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"v2/contracts/SoulSocietySBT.sol\":8069:8132  if(!_existsOwner(to_)) {... */\n      tag_283\n      jumpi\n        /* \"v2/contracts/SoulSocietySBT.sol\":8120:8121  1 */\n      0x01\n        /* \"v2/contracts/SoulSocietySBT.sol\":8106:8116  _totalUser */\n      0x02\n      0x00\n        /* \"v2/contracts/SoulSocietySBT.sol\":8106:8121  _totalUser += 1 */\n      dup3\n      dup3\n      sload\n      tag_284\n      swap2\n      swap1\n      tag_274\n      jump\t// in\n    tag_284:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"v2/contracts/SoulSocietySBT.sol\":8069:8132  if(!_existsOwner(to_)) {... */\n    tag_283:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"v2/contracts/SoulSocietySBT.sol\":8166:8180  _balances[to_] */\n      dup5\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"v2/contracts/SoulSocietySBT.sol\":8166:8175  _balances */\n      0x07\n        /* \"v2/contracts/SoulSocietySBT.sol\":8166:8180  _balances[to_] */\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n        /* \"v2/contracts/SoulSocietySBT.sol\":8166:8185  _balances[to_] += 1 */\n      dup1\n      sload\n        /* \"v2/contracts/SoulSocietySBT.sol\":8184:8185  1 */\n      0x01\n        /* \"v2/contracts/SoulSocietySBT.sol\":8166:8185  _balances[to_] += 1 */\n      swap1\n      dup2\n      add\n      dup3\n      sstore\n        /* \"v2/contracts/SoulSocietySBT.sol\":8199:8210  _totalCount */\n      0x03\n        /* \"v2/contracts/SoulSocietySBT.sol\":8199:8215  _totalCount += 1 */\n      dup1\n      sload\n      dup3\n      add\n      swap1\n      sstore\n        /* \"v2/contracts/SoulSocietySBT.sol\":8239:8255  _owners[tokenId] */\n      dup8\n      dup7\n      mstore\n        /* \"v2/contracts/SoulSocietySBT.sol\":8239:8246  _owners */\n      0x04\n        /* \"v2/contracts/SoulSocietySBT.sol\":8239:8255  _owners[tokenId] */\n      dup5\n      mstore\n      dup3\n      dup7\n      keccak256\n        /* \"v2/contracts/SoulSocietySBT.sol\":8239:8261  _owners[tokenId] = to_ */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      dup9\n      or\n      swap1\n      sstore\n        /* \"v2/contracts/SoulSocietySBT.sol\":8271:8282  _tokenTypes */\n      0x05\n        /* \"v2/contracts/SoulSocietySBT.sol\":8271:8291  _tokenTypes[tokenId] */\n      dup5\n      mstore\n      dup3\n      dup7\n      keccak256\n        /* \"v2/contracts/SoulSocietySBT.sol\":8271:8304  _tokenTypes[tokenId] = tokenType_ */\n      dup11\n      swap1\n      sstore\n        /* \"v2/contracts/SoulSocietySBT.sol\":8314:8327  _tokenGrowths */\n      0x06\n        /* \"v2/contracts/SoulSocietySBT.sol\":8314:8336  _tokenGrowths[tokenId] */\n      dup5\n      mstore\n      dup3\n      dup7\n      keccak256\n        /* \"v2/contracts/SoulSocietySBT.sol\":8314:8340  _tokenGrowths[tokenId] = 1 */\n      dup2\n      swap1\n      sstore\n        /* \"v2/contracts/SoulSocietySBT.sol\":8389:8406  _ownedTokens[to_] */\n      swap6\n      dup6\n      mstore\n        /* \"v2/contracts/SoulSocietySBT.sol\":8389:8401  _ownedTokens */\n      0x09\n        /* \"v2/contracts/SoulSocietySBT.sol\":8389:8406  _ownedTokens[to_] */\n      dup4\n      mstore\n      swap1\n      dup5\n      keccak256\n        /* \"v2/contracts/SoulSocietySBT.sol\":8407:8421  _balances[to_] */\n      swap3\n      swap1\n      swap2\n      mstore\n      sload\n        /* \"v2/contracts/SoulSocietySBT.sol\":8247:8254  tokenId */\n      dup5\n      swap4\n        /* \"v2/contracts/SoulSocietySBT.sol\":8389:8406  _ownedTokens[to_] */\n      swap2\n      swap3\n        /* \"v2/contracts/SoulSocietySBT.sol\":8166:8180  _balances[to_] */\n      swap2\n        /* \"v2/contracts/SoulSocietySBT.sol\":8407:8423  _balances[to_]-1 */\n      tag_285\n      swap2\n      tag_286\n      jump\t// in\n    tag_285:\n        /* \"v2/contracts/SoulSocietySBT.sol\":8389:8424  _ownedTokens[to_][_balances[to_]-1] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"v2/contracts/SoulSocietySBT.sol\":8389:8434  _ownedTokens[to_][_balances[to_]-1] = tokenId */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"v2/contracts/SoulSocietySBT.sol\":8497:8507  tokenType_ */\n      dup3\n        /* \"v2/contracts/SoulSocietySBT.sol\":8488:8495  tokenId */\n      dup2\n        /* \"v2/contracts/SoulSocietySBT.sol\":8483:8486  to_ */\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"v2/contracts/SoulSocietySBT.sol\":8466:8508  Mint(address(0), to_, tokenId, tokenType_) */\n      and\n      0x2f00e3cdd69a77be7ed215ec7b2a36784dd158f921fca79ac29deffa353fe6ee\n        /* \"v2/contracts/SoulSocietySBT.sol\":8479:8480  0 */\n      0x00\n        /* \"v2/contracts/SoulSocietySBT.sol\":8466:8508  Mint(address(0), to_, tokenId, tokenType_) */\n      mload(0x40)\n      tag_287\n      swap2\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1697:1729   */\n      swap2\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1679:1730   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1667:1669   */\n      0x20\n        /* \"#utility.yul\":1652:1670   */\n      add\n      swap1\n        /* \"#utility.yul\":1533:1736   */\n      jump\n        /* \"v2/contracts/SoulSocietySBT.sol\":8466:8508  Mint(address(0), to_, tokenId, tokenType_) */\n    tag_287:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"v2/contracts/SoulSocietySBT.sol\":8540:8592  _checkOnERC721Received(address(0), to_, tokenId, \"\") */\n      tag_288\n        /* \"v2/contracts/SoulSocietySBT.sol\":8571:8572  0 */\n      0x00\n        /* \"v2/contracts/SoulSocietySBT.sol\":8575:8578  to_ */\n      dup6\n        /* \"v2/contracts/SoulSocietySBT.sol\":8580:8587  tokenId */\n      dup4\n        /* \"v2/contracts/SoulSocietySBT.sol\":8540:8592  _checkOnERC721Received(address(0), to_, tokenId, \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"v2/contracts/SoulSocietySBT.sol\":8540:8562  _checkOnERC721Received */\n      tag_289\n        /* \"v2/contracts/SoulSocietySBT.sol\":8540:8592  _checkOnERC721Received(address(0), to_, tokenId, \"\") */\n      jump\t// in\n    tag_288:\n        /* \"v2/contracts/SoulSocietySBT.sol\":8519:8668  require(... */\n      tag_187\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":13365:13367   */\n      0x20\n        /* \"v2/contracts/SoulSocietySBT.sol\":8519:8668  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13347:13368   */\n      mstore\n        /* \"#utility.yul\":13404:13406   */\n      0x32\n        /* \"#utility.yul\":13384:13402   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":13377:13407   */\n      mstore\n        /* \"#utility.yul\":13443:13477   */\n      0x4552433732313a207472616e7366657220746f206e6f6e204552433732315265\n        /* \"#utility.yul\":13423:13441   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13416:13478   */\n      mstore\n      shl(0x71, 0x31b2b4bb32b91034b6b83632b6b2b73a32b9)\n        /* \"#utility.yul\":13494:13512   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":13487:13535   */\n      mstore\n        /* \"#utility.yul\":13552:13571   */\n      0x84\n      add\n        /* \"v2/contracts/SoulSocietySBT.sol\":8519:8668  require(... */\n      tag_156\n        /* \"#utility.yul\":13163:13577   */\n      jump\n        /* \"v2/contracts/SoulSocietySBT.sol\":5033:5335  function _isProtectedTokenId(uint256 tokenId_) internal view {... */\n    tag_194:\n        /* \"v2/contracts/SoulSocietySBT.sol\":9953:9957  bool */\n      0x00\n        /* \"v2/contracts/SoulSocietySBT.sol\":5902:5919  _owners[tokenId_] */\n      dup2\n      dup2\n      mstore\n        /* \"v2/contracts/SoulSocietySBT.sol\":5902:5909  _owners */\n      0x04\n        /* \"v2/contracts/SoulSocietySBT.sol\":5902:5919  _owners[tokenId_] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"v2/contracts/SoulSocietySBT.sol\":5191:5287  if (!_exists(tokenId_)) {... */\n      tag_295\n      jumpi\n        /* \"v2/contracts/SoulSocietySBT.sol\":5236:5276  SoulSocietySBTNonexistentToken(tokenId_) */\n      mload(0x40)\n      shl(0xe0, 0x24476a3f)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":2324:2349   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":2297:2315   */\n      0x24\n      add\n        /* \"v2/contracts/SoulSocietySBT.sol\":5236:5276  SoulSocietySBTNonexistentToken(tokenId_) */\n      tag_156\n        /* \"#utility.yul\":2178:2355   */\n      jump\n        /* \"v2/contracts/SoulSocietySBT.sol\":5191:5287  if (!_exists(tokenId_)) {... */\n    tag_295:\n        /* \"v2/contracts/SoulSocietySBT.sol\":5310:5327  _owners[tokenId_] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"v2/contracts/SoulSocietySBT.sol\":5310:5317  _owners */\n      0x04\n        /* \"v2/contracts/SoulSocietySBT.sol\":5310:5327  _owners[tokenId_] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"v2/contracts/SoulSocietySBT.sol\":5297:5328  _isProtected(_owners[tokenId_]) */\n      tag_212\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"v2/contracts/SoulSocietySBT.sol\":5310:5327  _owners[tokenId_] */\n      and\n        /* \"v2/contracts/SoulSocietySBT.sol\":5297:5309  _isProtected */\n      tag_176\n        /* \"v2/contracts/SoulSocietySBT.sol\":5297:5328  _isProtected(_owners[tokenId_]) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2426:2613  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_204:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2499:2515  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2518:2524  _owner */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2534:2551  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      dup5\n      sstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2566:2606  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2518:2524  _owner */\n      swap2\n      swap1\n      swap3\n      and\n      swap3\n      dup4\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2566:2606  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2499:2515  address oldOwner */\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2566:2606  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2489:2613  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2426:2613  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"v2/contracts/SoulSocietySBT.sol\":8909:9138  function _setGrowthToZero(address to_, uint tokenId_) internal {... */\n    tag_213:\n        /* \"v2/contracts/SoulSocietySBT.sol\":9026:9057  _requireMintedOf(to_, tokenId_) */\n      tag_300\n        /* \"v2/contracts/SoulSocietySBT.sol\":9043:9046  to_ */\n      dup3\n        /* \"v2/contracts/SoulSocietySBT.sol\":9048:9056  tokenId_ */\n      dup3\n        /* \"v2/contracts/SoulSocietySBT.sol\":9026:9042  _requireMintedOf */\n      tag_301\n        /* \"v2/contracts/SoulSocietySBT.sol\":9026:9057  _requireMintedOf(to_, tokenId_) */\n      jump\t// in\n    tag_300:\n        /* \"v2/contracts/SoulSocietySBT.sol\":9094:9095  0 */\n      0x00\n        /* \"v2/contracts/SoulSocietySBT.sol\":9068:9091  _tokenGrowths[tokenId_] */\n      dup2\n      dup2\n      mstore\n        /* \"v2/contracts/SoulSocietySBT.sol\":9068:9081  _tokenGrowths */\n      0x06\n        /* \"v2/contracts/SoulSocietySBT.sol\":9068:9091  _tokenGrowths[tokenId_] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"v2/contracts/SoulSocietySBT.sol\":9068:9095  _tokenGrowths[tokenId_] = 0 */\n      dup3\n      swap1\n      sstore\n        /* \"v2/contracts/SoulSocietySBT.sol\":9111:9131  Reset(to_, tokenId_) */\n      mload\n        /* \"v2/contracts/SoulSocietySBT.sol\":9082:9090  tokenId_ */\n      dup3\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"v2/contracts/SoulSocietySBT.sol\":9111:9131  Reset(to_, tokenId_) */\n      dup6\n      and\n      swap2\n      0x154fa90f2d3692df165afacdcd7755b2e9d98a892a80cc1dda63f3a9cc1e64a4\n      swap2\n        /* \"v2/contracts/SoulSocietySBT.sol\":9094:9095  0 */\n      swap1\n        /* \"v2/contracts/SoulSocietySBT.sol\":9111:9131  Reset(to_, tokenId_) */\n      log3\n        /* \"v2/contracts/SoulSocietySBT.sol\":8909:9138  function _setGrowthToZero(address to_, uint tokenId_) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"v2/contracts/SoulSocietySBT.sol\":10518:10860  function _growUp(address to_, uint256 tokenId_) internal returns(uint256) {... */\n    tag_223:\n        /* \"v2/contracts/SoulSocietySBT.sol\":10583:10590  uint256 */\n      0x00\n        /* \"v2/contracts/SoulSocietySBT.sol\":10647:10678  _requireMintedOf(to_, tokenId_) */\n      tag_303\n        /* \"v2/contracts/SoulSocietySBT.sol\":10664:10667  to_ */\n      dup4\n        /* \"v2/contracts/SoulSocietySBT.sol\":10669:10677  tokenId_ */\n      dup4\n        /* \"v2/contracts/SoulSocietySBT.sol\":10647:10663  _requireMintedOf */\n      tag_301\n        /* \"v2/contracts/SoulSocietySBT.sol\":10647:10678  _requireMintedOf(to_, tokenId_) */\n      jump\t// in\n    tag_303:\n        /* \"v2/contracts/SoulSocietySBT.sol\":10689:10712  _tokenGrowths[tokenId_] */\n      0x00\n      dup3\n      dup2\n      mstore\n        /* \"v2/contracts/SoulSocietySBT.sol\":10689:10702  _tokenGrowths */\n      0x06\n        /* \"v2/contracts/SoulSocietySBT.sol\":10689:10712  _tokenGrowths[tokenId_] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"v2/contracts/SoulSocietySBT.sol\":10689:10717  _tokenGrowths[tokenId_] += 1 */\n      dup1\n      sload\n        /* \"v2/contracts/SoulSocietySBT.sol\":10716:10717  1 */\n      0x01\n      swap3\n        /* \"v2/contracts/SoulSocietySBT.sol\":10689:10712  _tokenGrowths[tokenId_] */\n      swap1\n        /* \"v2/contracts/SoulSocietySBT.sol\":10689:10717  _tokenGrowths[tokenId_] += 1 */\n      tag_304\n      swap1\n        /* \"v2/contracts/SoulSocietySBT.sol\":10716:10717  1 */\n      dup5\n      swap1\n        /* \"v2/contracts/SoulSocietySBT.sol\":10689:10717  _tokenGrowths[tokenId_] += 1 */\n      tag_274\n      jump\t// in\n    tag_304:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"v2/contracts/SoulSocietySBT.sol\":10728:10747  uint256 tokenGrowth */\n      0x00\n        /* \"v2/contracts/SoulSocietySBT.sol\":10751:10774  _tokenGrowths[tokenId_] */\n      dup3\n      dup2\n      mstore\n        /* \"v2/contracts/SoulSocietySBT.sol\":10751:10764  _tokenGrowths */\n      0x06\n        /* \"v2/contracts/SoulSocietySBT.sol\":10751:10774  _tokenGrowths[tokenId_] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n      sload\n        /* \"v2/contracts/SoulSocietySBT.sol\":10790:10824  GrowUp(to_, tokenId_, tokenGrowth) */\n      swap2\n      mload\n        /* \"#utility.yul\":2324:2349   */\n      dup5\n      dup2\n      mstore\n        /* \"v2/contracts/SoulSocietySBT.sol\":10751:10774  _tokenGrowths[tokenId_] */\n      dup3\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"v2/contracts/SoulSocietySBT.sol\":10790:10824  GrowUp(to_, tokenId_, tokenGrowth) */\n      dup8\n      and\n      swap2\n      0x48ffd7fdb1c1a0561a2d410317f6bb839aab64898de6fc73ee703a9c0dc0a36c\n      swap2\n        /* \"#utility.yul\":2297:2315   */\n      add\n        /* \"v2/contracts/SoulSocietySBT.sol\":10790:10824  GrowUp(to_, tokenId_, tokenGrowth) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"v2/contracts/SoulSocietySBT.sol\":10842:10853  tokenGrowth */\n      swap4\n        /* \"v2/contracts/SoulSocietySBT.sol\":10518:10860  function _growUp(address to_, uint256 tokenId_) internal returns(uint256) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":447:1143  function toString(uint256 value) internal pure returns (string memory) {... */\n    tag_231:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":503:516  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":552:566  uint256 length */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":569:586  Math.log10(value) */\n      tag_307\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":580:585  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":569:579  Math.log10 */\n      tag_308\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":569:586  Math.log10(value) */\n      jump\t// in\n    tag_307:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":589:590  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":569:590  Math.log10(value) + 1 */\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":552:590  uint256 length = Math.log10(value) + 1 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":604:624  string memory buffer */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":638:644  length */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":627:645  new string(length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_310\n      jumpi\n      tag_310\n      tag_311\n      jump\t// in\n    tag_310:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_312\n      jumpi\n      0x20\n      dup3\n      add\n      dup2\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_312:\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":604:645  string memory buffer = new string(length) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":765:793  add(buffer, add(32, length)) */\n      dup2\n      dup2\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":781:783  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":765:793  add(buffer, add(32, length)) */\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":820:1100  while (true) {... */\n    tag_313:\n      not(0x00)\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":851:856  ptr-- */\n      add\n      shl(0x81, 0x181899199a1a9b1b9c1cb0b131b232b3)\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":985:987  10 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":974:988  mod(value, 10) */\n      dup7\n      mod\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":969:999  byte(mod(value, 10), _SYMBOLS) */\n      byte\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":851:856  ptr-- */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":956:1000  mstore8(ptr, byte(mod(value, 10), _SYMBOLS)) */\n      mstore8\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1044:1046  10 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1035:1046  value /= 10 */\n      dup6\n      div\n      swap5\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1064:1085  if (value == 0) break */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":820:1100  while (true) {... */\n      tag_313\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1064:1085  if (value == 0) break */\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1120:1126  buffer */\n      swap4\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":447:1143  function toString(uint256 value) internal pure returns (string memory) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"v2/contracts/SoulSocietySBT.sol\":12090:12426  function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory _data) internal returns (bool) {... */\n    tag_289:\n        /* \"v2/contracts/SoulSocietySBT.sol\":12203:12207  bool */\n      0x00\n        /* \"v2/contracts/SoulSocietySBT.sol\":12549:12569  extcodesize(account) */\n      dup4\n      extcodesize\n        /* \"v2/contracts/SoulSocietySBT.sol\":12219:12276  if (!isContract(to)) {... */\n      tag_327\n      jumpi\n      pop\n        /* \"v2/contracts/SoulSocietySBT.sol\":12261:12265  true */\n      0x01\n        /* \"v2/contracts/SoulSocietySBT.sol\":12254:12265  return true */\n      jump(tag_324)\n        /* \"v2/contracts/SoulSocietySBT.sol\":12219:12276  if (!isContract(to)) {... */\n    tag_327:\n        /* \"v2/contracts/SoulSocietySBT.sol\":12302:12374  IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, _data) */\n      mload(0x40)\n      shl(0xe1, 0x0a85bd01)\n      dup2\n      mstore\n        /* \"v2/contracts/SoulSocietySBT.sol\":12286:12299  bytes4 retval */\n      0x00\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"v2/contracts/SoulSocietySBT.sol\":12302:12338  IERC721Receiver(to).onERC721Received */\n      dup7\n      and\n      swap1\n      0x150b7a02\n      swap1\n        /* \"v2/contracts/SoulSocietySBT.sol\":12302:12374  IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, _data) */\n      tag_329\n      swap1\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n      swap1\n        /* \"v2/contracts/SoulSocietySBT.sol\":12353:12357  from */\n      dup11\n      swap1\n        /* \"v2/contracts/SoulSocietySBT.sol\":12359:12366  tokenId */\n      dup10\n      swap1\n        /* \"v2/contracts/SoulSocietySBT.sol\":12368:12373  _data */\n      dup10\n      swap1\n        /* \"v2/contracts/SoulSocietySBT.sol\":12302:12374  IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, _data) */\n      0x04\n      add\n      tag_330\n      jump\t// in\n    tag_329:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_332\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_332:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_333\n      swap2\n      swap1\n      tag_334\n      jump\t// in\n    tag_333:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"v2/contracts/SoulSocietySBT.sol\":12392:12418  retval == _ERC721_RECEIVED */\n      and\n      shl(0xe1, 0x0a85bd01)\n      eq\n      swap2\n      pop\n      pop\n        /* \"v2/contracts/SoulSocietySBT.sol\":12090:12426  function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory _data) internal returns (bool) {... */\n    tag_324:\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"v2/contracts/SoulSocietySBT.sol\":11901:12084  function _requireMintedOf(address to, uint256 tokenId) internal view virtual {... */\n    tag_301:\n        /* \"v2/contracts/SoulSocietySBT.sol\":5876:5883  address */\n      0x00\n        /* \"v2/contracts/SoulSocietySBT.sol\":5902:5919  _owners[tokenId_] */\n      dup2\n      dup2\n      mstore\n        /* \"v2/contracts/SoulSocietySBT.sol\":5902:5909  _owners */\n      0x04\n        /* \"v2/contracts/SoulSocietySBT.sol\":5902:5919  _owners[tokenId_] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"v2/contracts/SoulSocietySBT.sol\":11991:12014  _ownerOf(tokenId) != to */\n      dup4\n      dup2\n      and\n        /* \"v2/contracts/SoulSocietySBT.sol\":5902:5919  _owners[tokenId_] */\n      swap2\n      and\n        /* \"v2/contracts/SoulSocietySBT.sol\":11991:12014  _ownerOf(tokenId) != to */\n      eq\n        /* \"v2/contracts/SoulSocietySBT.sol\":11988:12078  if(_ownerOf(tokenId) != to) {... */\n      tag_212\n      jumpi\n        /* \"v2/contracts/SoulSocietySBT.sol\":12037:12067  SoulSocietySBTInvalidOwner(to) */\n      mload(0x40)\n      shl(0xe0, 0x50159299)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1697:1729   */\n      dup4\n      and\n        /* \"v2/contracts/SoulSocietySBT.sol\":12037:12067  SoulSocietySBTInvalidOwner(to) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1679:1730   */\n      mstore\n        /* \"#utility.yul\":1652:1670   */\n      0x24\n      add\n        /* \"v2/contracts/SoulSocietySBT.sol\":12037:12067  SoulSocietySBTInvalidOwner(to) */\n      tag_156\n        /* \"#utility.yul\":1533:1736   */\n      jump\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10139:11055  function log10(uint256 value) internal pure returns (uint256) {... */\n    tag_308:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10192:10199  uint256 */\n      0x00\n      dup1\n      shl(0x40, 0x184f03e93ff9f4daa797ed6e38ed64bf6a1f01)\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10267:10284  value >= 10 ** 64 */\n      dup4\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10263:10366  if (value >= 10 ** 64) {... */\n      tag_340\n      jumpi\n      shl(0x40, 0x184f03e93ff9f4daa797ed6e38ed64bf6a1f01)\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10304:10321  value /= 10 ** 64 */\n      dup4\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10349:10351  64 */\n      0x40\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10339:10351  result += 64 */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10263:10366  if (value >= 10 ** 64) {... */\n    tag_340:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10392:10400  10 ** 32 */\n      0x04ee2d6d415b85acef8100000000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10383:10388  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10383:10400  value >= 10 ** 32 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10379:10482  if (value >= 10 ** 32) {... */\n      tag_343\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10429:10437  10 ** 32 */\n      0x04ee2d6d415b85acef8100000000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10420:10437  value /= 10 ** 32 */\n      dup4\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10465:10467  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10455:10467  result += 32 */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10379:10482  if (value >= 10 ** 32) {... */\n    tag_343:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10508:10516  10 ** 16 */\n      0x2386f26fc10000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10499:10504  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10499:10516  value >= 10 ** 16 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10495:10598  if (value >= 10 ** 16) {... */\n      tag_346\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10545:10553  10 ** 16 */\n      0x2386f26fc10000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10536:10553  value /= 10 ** 16 */\n      dup4\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10581:10583  16 */\n      0x10\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10571:10583  result += 16 */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10495:10598  if (value >= 10 ** 16) {... */\n    tag_346:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10624:10631  10 ** 8 */\n      0x05f5e100\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10615:10620  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10615:10631  value >= 10 ** 8 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10611:10711  if (value >= 10 ** 8) {... */\n      tag_349\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10660:10667  10 ** 8 */\n      0x05f5e100\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10651:10667  value /= 10 ** 8 */\n      dup4\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10695:10696  8 */\n      0x08\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10685:10696  result += 8 */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10611:10711  if (value >= 10 ** 8) {... */\n    tag_349:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10737:10744  10 ** 4 */\n      0x2710\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10728:10733  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10728:10744  value >= 10 ** 4 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10724:10824  if (value >= 10 ** 4) {... */\n      tag_352\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10773:10780  10 ** 4 */\n      0x2710\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10764:10780  value /= 10 ** 4 */\n      dup4\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10808:10809  4 */\n      0x04\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10798:10809  result += 4 */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10724:10824  if (value >= 10 ** 4) {... */\n    tag_352:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10850:10857  10 ** 2 */\n      0x64\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10841:10846  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10841:10857  value >= 10 ** 2 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10837:10937  if (value >= 10 ** 2) {... */\n      tag_355\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10886:10893  10 ** 2 */\n      0x64\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10877:10893  value /= 10 ** 2 */\n      dup4\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10921:10922  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10911:10922  result += 2 */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10837:10937  if (value >= 10 ** 2) {... */\n    tag_355:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10963:10970  10 ** 1 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10954:10959  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10954:10970  value >= 10 ** 1 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10950:11016  if (value >= 10 ** 1) {... */\n      tag_152\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":11000:11001  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10990:11001  result += 1 */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":11042:11048  result */\n      swap3\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10139:11055  function log10(uint256 value) internal pure returns (uint256) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:145   */\n    tag_361:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"#utility.yul\":88:120   */\n      dup2\n      and\n        /* \"#utility.yul\":78:121   */\n      dup2\n      eq\n        /* \"#utility.yul\":68:139   */\n      tag_258\n      jumpi\n        /* \"#utility.yul\":135:136   */\n      0x00\n        /* \"#utility.yul\":132:133   */\n      dup1\n        /* \"#utility.yul\":125:137   */\n      revert\n        /* \"#utility.yul\":150:395   */\n    tag_40:\n        /* \"#utility.yul\":208:214   */\n      0x00\n        /* \"#utility.yul\":261:263   */\n      0x20\n        /* \"#utility.yul\":249:258   */\n      dup3\n        /* \"#utility.yul\":240:247   */\n      dup5\n        /* \"#utility.yul\":236:259   */\n      sub\n        /* \"#utility.yul\":232:264   */\n      slt\n        /* \"#utility.yul\":229:281   */\n      iszero\n      tag_374\n      jumpi\n        /* \"#utility.yul\":277:278   */\n      0x00\n        /* \"#utility.yul\":274:275   */\n      dup1\n        /* \"#utility.yul\":267:279   */\n      revert\n        /* \"#utility.yul\":229:281   */\n    tag_374:\n        /* \"#utility.yul\":316:325   */\n      dup2\n        /* \"#utility.yul\":303:326   */\n      calldataload\n        /* \"#utility.yul\":335:365   */\n      tag_187\n        /* \"#utility.yul\":359:364   */\n      dup2\n        /* \"#utility.yul\":335:365   */\n      tag_361\n      jump\t// in\n        /* \"#utility.yul\":592:842   */\n    tag_362:\n        /* \"#utility.yul\":677:678   */\n      0x00\n        /* \"#utility.yul\":687:800   */\n    tag_378:\n        /* \"#utility.yul\":701:707   */\n      dup4\n        /* \"#utility.yul\":698:699   */\n      dup2\n        /* \"#utility.yul\":695:708   */\n      lt\n        /* \"#utility.yul\":687:800   */\n      iszero\n      tag_380\n      jumpi\n        /* \"#utility.yul\":777:788   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":771:789   */\n      mload\n        /* \"#utility.yul\":758:769   */\n      dup4\n      dup3\n      add\n        /* \"#utility.yul\":751:790   */\n      mstore\n        /* \"#utility.yul\":723:725   */\n      0x20\n        /* \"#utility.yul\":716:726   */\n      add\n        /* \"#utility.yul\":687:800   */\n      jump(tag_378)\n    tag_380:\n      pop\n      pop\n        /* \"#utility.yul\":834:835   */\n      0x00\n        /* \"#utility.yul\":816:832   */\n      swap2\n      add\n        /* \"#utility.yul\":809:836   */\n      mstore\n        /* \"#utility.yul\":592:842   */\n      jump\t// out\n        /* \"#utility.yul\":847:1118   */\n    tag_363:\n        /* \"#utility.yul\":889:892   */\n      0x00\n        /* \"#utility.yul\":927:932   */\n      dup2\n        /* \"#utility.yul\":921:933   */\n      mload\n        /* \"#utility.yul\":954:960   */\n      dup1\n        /* \"#utility.yul\":949:952   */\n      dup5\n        /* \"#utility.yul\":942:961   */\n      mstore\n        /* \"#utility.yul\":970:1046   */\n      tag_382\n        /* \"#utility.yul\":1039:1045   */\n      dup2\n        /* \"#utility.yul\":1032:1036   */\n      0x20\n        /* \"#utility.yul\":1027:1030   */\n      dup7\n        /* \"#utility.yul\":1023:1037   */\n      add\n        /* \"#utility.yul\":1016:1020   */\n      0x20\n        /* \"#utility.yul\":1009:1014   */\n      dup7\n        /* \"#utility.yul\":1005:1021   */\n      add\n        /* \"#utility.yul\":970:1046   */\n      tag_362\n      jump\t// in\n    tag_382:\n        /* \"#utility.yul\":1100:1102   */\n      0x1f\n        /* \"#utility.yul\":1079:1094   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":1075:1104   */\n      and\n        /* \"#utility.yul\":1066:1105   */\n      swap3\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":1107:1111   */\n      0x20\n        /* \"#utility.yul\":1062:1112   */\n      add\n      swap3\n        /* \"#utility.yul\":847:1118   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1123:1343   */\n    tag_47:\n        /* \"#utility.yul\":1272:1274   */\n      0x20\n        /* \"#utility.yul\":1261:1270   */\n      dup2\n        /* \"#utility.yul\":1254:1275   */\n      mstore\n        /* \"#utility.yul\":1235:1239   */\n      0x00\n        /* \"#utility.yul\":1292:1337   */\n      tag_187\n        /* \"#utility.yul\":1333:1335   */\n      0x20\n        /* \"#utility.yul\":1322:1331   */\n      dup4\n        /* \"#utility.yul\":1318:1336   */\n      add\n        /* \"#utility.yul\":1310:1316   */\n      dup5\n        /* \"#utility.yul\":1292:1337   */\n      tag_363\n      jump\t// in\n        /* \"#utility.yul\":1348:1528   */\n    tag_50:\n        /* \"#utility.yul\":1407:1413   */\n      0x00\n        /* \"#utility.yul\":1460:1462   */\n      0x20\n        /* \"#utility.yul\":1448:1457   */\n      dup3\n        /* \"#utility.yul\":1439:1446   */\n      dup5\n        /* \"#utility.yul\":1435:1458   */\n      sub\n        /* \"#utility.yul\":1431:1463   */\n      slt\n        /* \"#utility.yul\":1428:1480   */\n      iszero\n      tag_386\n      jumpi\n        /* \"#utility.yul\":1476:1477   */\n      0x00\n        /* \"#utility.yul\":1473:1474   */\n      dup1\n        /* \"#utility.yul\":1466:1478   */\n      revert\n        /* \"#utility.yul\":1428:1480   */\n    tag_386:\n      pop\n        /* \"#utility.yul\":1499:1522   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":1348:1528   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1741:1914   */\n    tag_364:\n        /* \"#utility.yul\":1809:1829   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1858:1889   */\n      dup2\n      and\n        /* \"#utility.yul\":1848:1890   */\n      dup2\n      eq\n        /* \"#utility.yul\":1838:1908   */\n      tag_239\n      jumpi\n        /* \"#utility.yul\":1904:1905   */\n      0x00\n        /* \"#utility.yul\":1901:1902   */\n      dup1\n        /* \"#utility.yul\":1894:1906   */\n      revert\n        /* \"#utility.yul\":1919:2173   */\n    tag_56:\n        /* \"#utility.yul\":1987:1993   */\n      0x00\n        /* \"#utility.yul\":1995:2001   */\n      dup1\n        /* \"#utility.yul\":2048:2050   */\n      0x40\n        /* \"#utility.yul\":2036:2045   */\n      dup4\n        /* \"#utility.yul\":2027:2034   */\n      dup6\n        /* \"#utility.yul\":2023:2046   */\n      sub\n        /* \"#utility.yul\":2019:2051   */\n      slt\n        /* \"#utility.yul\":2016:2068   */\n      iszero\n      tag_391\n      jumpi\n        /* \"#utility.yul\":2064:2065   */\n      0x00\n        /* \"#utility.yul\":2061:2062   */\n      dup1\n        /* \"#utility.yul\":2054:2066   */\n      revert\n        /* \"#utility.yul\":2016:2068   */\n    tag_391:\n        /* \"#utility.yul\":2087:2116   */\n      tag_392\n        /* \"#utility.yul\":2106:2115   */\n      dup4\n        /* \"#utility.yul\":2087:2116   */\n      tag_364\n      jump\t// in\n    tag_392:\n        /* \"#utility.yul\":2077:2116   */\n      swap5\n        /* \"#utility.yul\":2163:2165   */\n      0x20\n        /* \"#utility.yul\":2148:2166   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":2135:2167   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1919:2173   */\n      jump\t// out\n        /* \"#utility.yul\":2360:2520   */\n    tag_365:\n        /* \"#utility.yul\":2425:2445   */\n      dup1\n      calldataload\n        /* \"#utility.yul\":2481:2494   */\n      dup1\n      iszero\n        /* \"#utility.yul\":2474:2495   */\n      iszero\n        /* \"#utility.yul\":2464:2496   */\n      dup2\n      eq\n        /* \"#utility.yul\":2454:2514   */\n      tag_239\n      jumpi\n        /* \"#utility.yul\":2510:2511   */\n      0x00\n        /* \"#utility.yul\":2507:2508   */\n      dup1\n        /* \"#utility.yul\":2500:2512   */\n      revert\n        /* \"#utility.yul\":2525:2705   */\n    tag_64:\n        /* \"#utility.yul\":2581:2587   */\n      0x00\n        /* \"#utility.yul\":2634:2636   */\n      0x20\n        /* \"#utility.yul\":2622:2631   */\n      dup3\n        /* \"#utility.yul\":2613:2620   */\n      dup5\n        /* \"#utility.yul\":2609:2632   */\n      sub\n        /* \"#utility.yul\":2605:2637   */\n      slt\n        /* \"#utility.yul\":2602:2654   */\n      iszero\n      tag_397\n      jumpi\n        /* \"#utility.yul\":2650:2651   */\n      0x00\n        /* \"#utility.yul\":2647:2648   */\n      dup1\n        /* \"#utility.yul\":2640:2652   */\n      revert\n        /* \"#utility.yul\":2602:2654   */\n    tag_397:\n        /* \"#utility.yul\":2673:2699   */\n      tag_187\n        /* \"#utility.yul\":2689:2698   */\n      dup3\n        /* \"#utility.yul\":2673:2699   */\n      tag_365\n      jump\t// in\n        /* \"#utility.yul\":2710:2896   */\n    tag_69:\n        /* \"#utility.yul\":2769:2775   */\n      0x00\n        /* \"#utility.yul\":2822:2824   */\n      0x20\n        /* \"#utility.yul\":2810:2819   */\n      dup3\n        /* \"#utility.yul\":2801:2808   */\n      dup5\n        /* \"#utility.yul\":2797:2820   */\n      sub\n        /* \"#utility.yul\":2793:2825   */\n      slt\n        /* \"#utility.yul\":2790:2842   */\n      iszero\n      tag_400\n      jumpi\n        /* \"#utility.yul\":2838:2839   */\n      0x00\n        /* \"#utility.yul\":2835:2836   */\n      dup1\n        /* \"#utility.yul\":2828:2840   */\n      revert\n        /* \"#utility.yul\":2790:2842   */\n    tag_400:\n        /* \"#utility.yul\":2861:2890   */\n      tag_187\n        /* \"#utility.yul\":2880:2889   */\n      dup3\n        /* \"#utility.yul\":2861:2890   */\n      tag_364\n      jump\t// in\n        /* \"#utility.yul\":2901:3229   */\n    tag_74:\n        /* \"#utility.yul\":2978:2984   */\n      0x00\n        /* \"#utility.yul\":2986:2992   */\n      dup1\n        /* \"#utility.yul\":2994:3000   */\n      0x00\n        /* \"#utility.yul\":3047:3049   */\n      0x60\n        /* \"#utility.yul\":3035:3044   */\n      dup5\n        /* \"#utility.yul\":3026:3033   */\n      dup7\n        /* \"#utility.yul\":3022:3045   */\n      sub\n        /* \"#utility.yul\":3018:3050   */\n      slt\n        /* \"#utility.yul\":3015:3067   */\n      iszero\n      tag_403\n      jumpi\n        /* \"#utility.yul\":3063:3064   */\n      0x00\n        /* \"#utility.yul\":3060:3061   */\n      dup1\n        /* \"#utility.yul\":3053:3065   */\n      revert\n        /* \"#utility.yul\":3015:3067   */\n    tag_403:\n        /* \"#utility.yul\":3086:3115   */\n      tag_404\n        /* \"#utility.yul\":3105:3114   */\n      dup5\n        /* \"#utility.yul\":3086:3115   */\n      tag_364\n      jump\t// in\n    tag_404:\n        /* \"#utility.yul\":3076:3115   */\n      swap3\n      pop\n        /* \"#utility.yul\":3134:3172   */\n      tag_405\n        /* \"#utility.yul\":3168:3170   */\n      0x20\n        /* \"#utility.yul\":3157:3166   */\n      dup6\n        /* \"#utility.yul\":3153:3171   */\n      add\n        /* \"#utility.yul\":3134:3172   */\n      tag_364\n      jump\t// in\n    tag_405:\n        /* \"#utility.yul\":3124:3172   */\n      swap2\n      pop\n        /* \"#utility.yul\":3219:3221   */\n      0x40\n        /* \"#utility.yul\":3208:3217   */\n      dup5\n        /* \"#utility.yul\":3204:3222   */\n      add\n        /* \"#utility.yul\":3191:3223   */\n      calldataload\n        /* \"#utility.yul\":3181:3223   */\n      swap1\n      pop\n        /* \"#utility.yul\":2901:3229   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":3234:3488   */\n    tag_116:\n        /* \"#utility.yul\":3299:3305   */\n      0x00\n        /* \"#utility.yul\":3307:3313   */\n      dup1\n        /* \"#utility.yul\":3360:3362   */\n      0x40\n        /* \"#utility.yul\":3348:3357   */\n      dup4\n        /* \"#utility.yul\":3339:3346   */\n      dup6\n        /* \"#utility.yul\":3335:3358   */\n      sub\n        /* \"#utility.yul\":3331:3363   */\n      slt\n        /* \"#utility.yul\":3328:3380   */\n      iszero\n      tag_407\n      jumpi\n        /* \"#utility.yul\":3376:3377   */\n      0x00\n        /* \"#utility.yul\":3373:3374   */\n      dup1\n        /* \"#utility.yul\":3366:3378   */\n      revert\n        /* \"#utility.yul\":3328:3380   */\n    tag_407:\n        /* \"#utility.yul\":3399:3428   */\n      tag_408\n        /* \"#utility.yul\":3418:3427   */\n      dup4\n        /* \"#utility.yul\":3399:3428   */\n      tag_364\n      jump\t// in\n    tag_408:\n        /* \"#utility.yul\":3389:3428   */\n      swap2\n      pop\n        /* \"#utility.yul\":3447:3482   */\n      tag_409\n        /* \"#utility.yul\":3478:3480   */\n      0x20\n        /* \"#utility.yul\":3467:3476   */\n      dup5\n        /* \"#utility.yul\":3463:3481   */\n      add\n        /* \"#utility.yul\":3447:3482   */\n      tag_365\n      jump\t// in\n    tag_409:\n        /* \"#utility.yul\":3437:3482   */\n      swap1\n      pop\n        /* \"#utility.yul\":3234:3488   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3493:4301   */\n    tag_120:\n        /* \"#utility.yul\":3590:3596   */\n      0x00\n        /* \"#utility.yul\":3598:3604   */\n      dup1\n        /* \"#utility.yul\":3606:3612   */\n      0x00\n        /* \"#utility.yul\":3614:3620   */\n      dup1\n        /* \"#utility.yul\":3622:3628   */\n      0x00\n        /* \"#utility.yul\":3675:3678   */\n      0x80\n        /* \"#utility.yul\":3663:3672   */\n      dup7\n        /* \"#utility.yul\":3654:3661   */\n      dup9\n        /* \"#utility.yul\":3650:3673   */\n      sub\n        /* \"#utility.yul\":3646:3679   */\n      slt\n        /* \"#utility.yul\":3643:3696   */\n      iszero\n      tag_411\n      jumpi\n        /* \"#utility.yul\":3692:3693   */\n      0x00\n        /* \"#utility.yul\":3689:3690   */\n      dup1\n        /* \"#utility.yul\":3682:3694   */\n      revert\n        /* \"#utility.yul\":3643:3696   */\n    tag_411:\n        /* \"#utility.yul\":3715:3744   */\n      tag_412\n        /* \"#utility.yul\":3734:3743   */\n      dup7\n        /* \"#utility.yul\":3715:3744   */\n      tag_364\n      jump\t// in\n    tag_412:\n        /* \"#utility.yul\":3705:3744   */\n      swap5\n      pop\n        /* \"#utility.yul\":3763:3801   */\n      tag_413\n        /* \"#utility.yul\":3797:3799   */\n      0x20\n        /* \"#utility.yul\":3786:3795   */\n      dup8\n        /* \"#utility.yul\":3782:3800   */\n      add\n        /* \"#utility.yul\":3763:3801   */\n      tag_364\n      jump\t// in\n    tag_413:\n        /* \"#utility.yul\":3753:3801   */\n      swap4\n      pop\n        /* \"#utility.yul\":3848:3850   */\n      0x40\n        /* \"#utility.yul\":3837:3846   */\n      dup7\n        /* \"#utility.yul\":3833:3851   */\n      add\n        /* \"#utility.yul\":3820:3852   */\n      calldataload\n        /* \"#utility.yul\":3810:3852   */\n      swap3\n      pop\n        /* \"#utility.yul\":3903:3905   */\n      0x60\n        /* \"#utility.yul\":3892:3901   */\n      dup7\n        /* \"#utility.yul\":3888:3906   */\n      add\n        /* \"#utility.yul\":3875:3907   */\n      calldataload\n        /* \"#utility.yul\":3926:3944   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3967:3969   */\n      dup1\n        /* \"#utility.yul\":3959:3965   */\n      dup3\n        /* \"#utility.yul\":3956:3970   */\n      gt\n        /* \"#utility.yul\":3953:3987   */\n      iszero\n      tag_414\n      jumpi\n        /* \"#utility.yul\":3983:3984   */\n      0x00\n        /* \"#utility.yul\":3980:3981   */\n      dup1\n        /* \"#utility.yul\":3973:3985   */\n      revert\n        /* \"#utility.yul\":3953:3987   */\n    tag_414:\n        /* \"#utility.yul\":4021:4027   */\n      dup2\n        /* \"#utility.yul\":4010:4019   */\n      dup9\n        /* \"#utility.yul\":4006:4028   */\n      add\n        /* \"#utility.yul\":3996:4028   */\n      swap2\n      pop\n        /* \"#utility.yul\":4066:4073   */\n      dup9\n        /* \"#utility.yul\":4059:4063   */\n      0x1f\n        /* \"#utility.yul\":4055:4057   */\n      dup4\n        /* \"#utility.yul\":4051:4064   */\n      add\n        /* \"#utility.yul\":4047:4074   */\n      slt\n        /* \"#utility.yul\":4037:4092   */\n      tag_415\n      jumpi\n        /* \"#utility.yul\":4088:4089   */\n      0x00\n        /* \"#utility.yul\":4085:4086   */\n      dup1\n        /* \"#utility.yul\":4078:4090   */\n      revert\n        /* \"#utility.yul\":4037:4092   */\n    tag_415:\n        /* \"#utility.yul\":4128:4130   */\n      dup2\n        /* \"#utility.yul\":4115:4131   */\n      calldataload\n        /* \"#utility.yul\":4154:4156   */\n      dup2\n        /* \"#utility.yul\":4146:4152   */\n      dup2\n        /* \"#utility.yul\":4143:4157   */\n      gt\n        /* \"#utility.yul\":4140:4174   */\n      iszero\n      tag_416\n      jumpi\n        /* \"#utility.yul\":4170:4171   */\n      0x00\n        /* \"#utility.yul\":4167:4168   */\n      dup1\n        /* \"#utility.yul\":4160:4172   */\n      revert\n        /* \"#utility.yul\":4140:4174   */\n    tag_416:\n        /* \"#utility.yul\":4215:4222   */\n      dup10\n        /* \"#utility.yul\":4210:4212   */\n      0x20\n        /* \"#utility.yul\":4201:4207   */\n      dup3\n        /* \"#utility.yul\":4197:4199   */\n      dup6\n        /* \"#utility.yul\":4193:4208   */\n      add\n        /* \"#utility.yul\":4189:4213   */\n      add\n        /* \"#utility.yul\":4186:4223   */\n      gt\n        /* \"#utility.yul\":4183:4240   */\n      iszero\n      tag_417\n      jumpi\n        /* \"#utility.yul\":4236:4237   */\n      0x00\n        /* \"#utility.yul\":4233:4234   */\n      dup1\n        /* \"#utility.yul\":4226:4238   */\n      revert\n        /* \"#utility.yul\":4183:4240   */\n    tag_417:\n        /* \"#utility.yul\":3493:4301   */\n      swap7\n      swap10\n      swap6\n      swap9\n      pop\n      swap4\n      swap7\n      pop\n        /* \"#utility.yul\":4267:4269   */\n      0x20\n        /* \"#utility.yul\":4259:4270   */\n      add\n      swap5\n        /* \"#utility.yul\":4289:4295   */\n      swap4\n        /* \"#utility.yul\":3493:4301   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4306:4433   */\n    tag_311:\n        /* \"#utility.yul\":4367:4377   */\n      0x4e487b71\n        /* \"#utility.yul\":4362:4365   */\n      0xe0\n        /* \"#utility.yul\":4358:4378   */\n      shl\n        /* \"#utility.yul\":4355:4356   */\n      0x00\n        /* \"#utility.yul\":4348:4379   */\n      mstore\n        /* \"#utility.yul\":4398:4402   */\n      0x41\n        /* \"#utility.yul\":4395:4396   */\n      0x04\n        /* \"#utility.yul\":4388:4403   */\n      mstore\n        /* \"#utility.yul\":4422:4426   */\n      0x24\n        /* \"#utility.yul\":4419:4420   */\n      0x00\n        /* \"#utility.yul\":4412:4427   */\n      revert\n        /* \"#utility.yul\":4438:5360   */\n    tag_136:\n        /* \"#utility.yul\":4507:4513   */\n      0x00\n        /* \"#utility.yul\":4560:4562   */\n      0x20\n        /* \"#utility.yul\":4548:4557   */\n      dup3\n        /* \"#utility.yul\":4539:4546   */\n      dup5\n        /* \"#utility.yul\":4535:4558   */\n      sub\n        /* \"#utility.yul\":4531:4563   */\n      slt\n        /* \"#utility.yul\":4528:4580   */\n      iszero\n      tag_420\n      jumpi\n        /* \"#utility.yul\":4576:4577   */\n      0x00\n        /* \"#utility.yul\":4573:4574   */\n      dup1\n        /* \"#utility.yul\":4566:4578   */\n      revert\n        /* \"#utility.yul\":4528:4580   */\n    tag_420:\n        /* \"#utility.yul\":4616:4625   */\n      dup2\n        /* \"#utility.yul\":4603:4626   */\n      calldataload\n        /* \"#utility.yul\":4645:4663   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4686:4688   */\n      dup1\n        /* \"#utility.yul\":4678:4684   */\n      dup3\n        /* \"#utility.yul\":4675:4689   */\n      gt\n        /* \"#utility.yul\":4672:4706   */\n      iszero\n      tag_421\n      jumpi\n        /* \"#utility.yul\":4702:4703   */\n      0x00\n        /* \"#utility.yul\":4699:4700   */\n      dup1\n        /* \"#utility.yul\":4692:4704   */\n      revert\n        /* \"#utility.yul\":4672:4706   */\n    tag_421:\n        /* \"#utility.yul\":4740:4746   */\n      dup2\n        /* \"#utility.yul\":4729:4738   */\n      dup5\n        /* \"#utility.yul\":4725:4747   */\n      add\n        /* \"#utility.yul\":4715:4747   */\n      swap2\n      pop\n        /* \"#utility.yul\":4785:4792   */\n      dup5\n        /* \"#utility.yul\":4778:4782   */\n      0x1f\n        /* \"#utility.yul\":4774:4776   */\n      dup4\n        /* \"#utility.yul\":4770:4783   */\n      add\n        /* \"#utility.yul\":4766:4793   */\n      slt\n        /* \"#utility.yul\":4756:4811   */\n      tag_422\n      jumpi\n        /* \"#utility.yul\":4807:4808   */\n      0x00\n        /* \"#utility.yul\":4804:4805   */\n      dup1\n        /* \"#utility.yul\":4797:4809   */\n      revert\n        /* \"#utility.yul\":4756:4811   */\n    tag_422:\n        /* \"#utility.yul\":4843:4845   */\n      dup2\n        /* \"#utility.yul\":4830:4846   */\n      calldataload\n        /* \"#utility.yul\":4865:4867   */\n      dup2\n        /* \"#utility.yul\":4861:4863   */\n      dup2\n        /* \"#utility.yul\":4858:4868   */\n      gt\n        /* \"#utility.yul\":4855:4891   */\n      iszero\n      tag_424\n      jumpi\n        /* \"#utility.yul\":4871:4889   */\n      tag_424\n      tag_311\n      jump\t// in\n    tag_424:\n        /* \"#utility.yul\":4946:4948   */\n      0x40\n        /* \"#utility.yul\":4940:4949   */\n      mload\n        /* \"#utility.yul\":4914:4916   */\n      0x1f\n        /* \"#utility.yul\":5000:5013   */\n      dup3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":4996:5018   */\n      swap1\n      dup2\n      and\n        /* \"#utility.yul\":5020:5022   */\n      0x3f\n        /* \"#utility.yul\":4992:5023   */\n      add\n        /* \"#utility.yul\":4988:5028   */\n      and\n        /* \"#utility.yul\":4976:5029   */\n      dup2\n      add\n      swap1\n        /* \"#utility.yul\":5044:5062   */\n      dup4\n      dup3\n      gt\n        /* \"#utility.yul\":5064:5086   */\n      dup2\n      dup4\n      lt\n        /* \"#utility.yul\":5041:5087   */\n      or\n        /* \"#utility.yul\":5038:5110   */\n      iszero\n      tag_426\n      jumpi\n        /* \"#utility.yul\":5090:5108   */\n      tag_426\n      tag_311\n      jump\t// in\n    tag_426:\n        /* \"#utility.yul\":5130:5140   */\n      dup2\n        /* \"#utility.yul\":5126:5128   */\n      0x40\n        /* \"#utility.yul\":5119:5141   */\n      mstore\n        /* \"#utility.yul\":5165:5167   */\n      dup3\n        /* \"#utility.yul\":5157:5163   */\n      dup2\n        /* \"#utility.yul\":5150:5168   */\n      mstore\n        /* \"#utility.yul\":5205:5212   */\n      dup8\n        /* \"#utility.yul\":5200:5202   */\n      0x20\n        /* \"#utility.yul\":5195:5197   */\n      dup5\n        /* \"#utility.yul\":5191:5193   */\n      dup8\n        /* \"#utility.yul\":5187:5198   */\n      add\n        /* \"#utility.yul\":5183:5203   */\n      add\n        /* \"#utility.yul\":5180:5213   */\n      gt\n        /* \"#utility.yul\":5177:5230   */\n      iszero\n      tag_427\n      jumpi\n        /* \"#utility.yul\":5226:5227   */\n      0x00\n        /* \"#utility.yul\":5223:5224   */\n      dup1\n        /* \"#utility.yul\":5216:5228   */\n      revert\n        /* \"#utility.yul\":5177:5230   */\n    tag_427:\n        /* \"#utility.yul\":5282:5284   */\n      dup3\n        /* \"#utility.yul\":5277:5279   */\n      0x20\n        /* \"#utility.yul\":5273:5275   */\n      dup7\n        /* \"#utility.yul\":5269:5280   */\n      add\n        /* \"#utility.yul\":5264:5266   */\n      0x20\n        /* \"#utility.yul\":5256:5262   */\n      dup4\n        /* \"#utility.yul\":5252:5267   */\n      add\n        /* \"#utility.yul\":5239:5285   */\n      calldatacopy\n        /* \"#utility.yul\":5327:5328   */\n      0x00\n        /* \"#utility.yul\":5305:5320   */\n      swap3\n      dup2\n      add\n        /* \"#utility.yul\":5322:5324   */\n      0x20\n        /* \"#utility.yul\":5301:5325   */\n      add\n        /* \"#utility.yul\":5294:5329   */\n      swap3\n      swap1\n      swap3\n      mstore\n      pop\n        /* \"#utility.yul\":5309:5315   */\n      swap6\n        /* \"#utility.yul\":4438:5360   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5365:5625   */\n    tag_144:\n        /* \"#utility.yul\":5433:5439   */\n      0x00\n        /* \"#utility.yul\":5441:5447   */\n      dup1\n        /* \"#utility.yul\":5494:5496   */\n      0x40\n        /* \"#utility.yul\":5482:5491   */\n      dup4\n        /* \"#utility.yul\":5473:5480   */\n      dup6\n        /* \"#utility.yul\":5469:5492   */\n      sub\n        /* \"#utility.yul\":5465:5497   */\n      slt\n        /* \"#utility.yul\":5462:5514   */\n      iszero\n      tag_429\n      jumpi\n        /* \"#utility.yul\":5510:5511   */\n      0x00\n        /* \"#utility.yul\":5507:5508   */\n      dup1\n        /* \"#utility.yul\":5500:5512   */\n      revert\n        /* \"#utility.yul\":5462:5514   */\n    tag_429:\n        /* \"#utility.yul\":5533:5562   */\n      tag_430\n        /* \"#utility.yul\":5552:5561   */\n      dup4\n        /* \"#utility.yul\":5533:5562   */\n      tag_364\n      jump\t// in\n    tag_430:\n        /* \"#utility.yul\":5523:5562   */\n      swap2\n      pop\n        /* \"#utility.yul\":5581:5619   */\n      tag_409\n        /* \"#utility.yul\":5615:5617   */\n      0x20\n        /* \"#utility.yul\":5604:5613   */\n      dup5\n        /* \"#utility.yul\":5600:5618   */\n      add\n        /* \"#utility.yul\":5581:5619   */\n      tag_364\n      jump\t// in\n        /* \"#utility.yul\":7678:8058   */\n    tag_227:\n        /* \"#utility.yul\":7757:7758   */\n      0x01\n        /* \"#utility.yul\":7753:7765   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":7800:7812   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":7821:7882   */\n      tag_439\n      jumpi\n        /* \"#utility.yul\":7875:7879   */\n      0x7f\n        /* \"#utility.yul\":7867:7873   */\n      dup3\n        /* \"#utility.yul\":7863:7880   */\n      and\n        /* \"#utility.yul\":7853:7880   */\n      swap2\n      pop\n        /* \"#utility.yul\":7821:7882   */\n    tag_439:\n        /* \"#utility.yul\":7928:7930   */\n      0x20\n        /* \"#utility.yul\":7920:7926   */\n      dup3\n        /* \"#utility.yul\":7917:7931   */\n      lt\n        /* \"#utility.yul\":7897:7915   */\n      dup2\n        /* \"#utility.yul\":7894:7932   */\n      sub\n        /* \"#utility.yul\":7891:8052   */\n      tag_440\n      jumpi\n        /* \"#utility.yul\":7974:7984   */\n      0x4e487b71\n        /* \"#utility.yul\":7969:7972   */\n      0xe0\n        /* \"#utility.yul\":7965:7985   */\n      shl\n        /* \"#utility.yul\":7962:7963   */\n      0x00\n        /* \"#utility.yul\":7955:7986   */\n      mstore\n        /* \"#utility.yul\":8009:8013   */\n      0x22\n        /* \"#utility.yul\":8006:8007   */\n      0x04\n        /* \"#utility.yul\":7999:8014   */\n      mstore\n        /* \"#utility.yul\":8037:8041   */\n      0x24\n        /* \"#utility.yul\":8034:8035   */\n      0x00\n        /* \"#utility.yul\":8027:8042   */\n      revert\n        /* \"#utility.yul\":7891:8052   */\n    tag_440:\n      pop\n        /* \"#utility.yul\":7678:8058   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8189:9572   */\n    tag_234:\n        /* \"#utility.yul\":8514:8517   */\n      0x00\n        /* \"#utility.yul\":8543:8544   */\n      dup1\n        /* \"#utility.yul\":8576:8582   */\n      dup6\n        /* \"#utility.yul\":8570:8583   */\n      sload\n        /* \"#utility.yul\":8606:8642   */\n      tag_443\n        /* \"#utility.yul\":8632:8641   */\n      dup2\n        /* \"#utility.yul\":8606:8642   */\n      tag_227\n      jump\t// in\n    tag_443:\n        /* \"#utility.yul\":8661:8662   */\n      0x01\n        /* \"#utility.yul\":8678:8696   */\n      dup3\n      dup2\n      and\n        /* \"#utility.yul\":8705:8838   */\n      dup1\n      iszero\n      tag_445\n      jumpi\n        /* \"#utility.yul\":8852:8853   */\n      0x01\n        /* \"#utility.yul\":8847:9203   */\n      dup2\n      eq\n      tag_446\n      jumpi\n        /* \"#utility.yul\":8671:9203   */\n      jump(tag_444)\n        /* \"#utility.yul\":8705:8838   */\n    tag_445:\n      not(0xff)\n        /* \"#utility.yul\":8738:8762   */\n      dup5\n      and\n        /* \"#utility.yul\":8726:8763   */\n      dup8\n      mstore\n        /* \"#utility.yul\":8811:8825   */\n      dup3\n      iszero\n        /* \"#utility.yul\":8804:8826   */\n      iszero\n        /* \"#utility.yul\":8792:8827   */\n      dup4\n      mul\n        /* \"#utility.yul\":8783:8828   */\n      dup8\n      add\n      swap5\n      pop\n        /* \"#utility.yul\":8705:8838   */\n      jump(tag_444)\n        /* \"#utility.yul\":8847:9203   */\n    tag_446:\n        /* \"#utility.yul\":8878:8884   */\n      dup10\n        /* \"#utility.yul\":8875:8876   */\n      0x00\n        /* \"#utility.yul\":8868:8885   */\n      mstore\n        /* \"#utility.yul\":8908:8912   */\n      0x20\n        /* \"#utility.yul\":8953:8955   */\n      dup1\n        /* \"#utility.yul\":8950:8951   */\n      0x00\n        /* \"#utility.yul\":8940:8956   */\n      keccak256\n        /* \"#utility.yul\":8978:8979   */\n      0x00\n        /* \"#utility.yul\":8992:9157   */\n    tag_447:\n        /* \"#utility.yul\":9006:9012   */\n      dup6\n        /* \"#utility.yul\":9003:9004   */\n      dup2\n        /* \"#utility.yul\":9000:9013   */\n      lt\n        /* \"#utility.yul\":8992:9157   */\n      iszero\n      tag_449\n      jumpi\n        /* \"#utility.yul\":9084:9098   */\n      dup2\n      sload\n        /* \"#utility.yul\":9071:9082   */\n      dup11\n      dup3\n      add\n        /* \"#utility.yul\":9064:9099   */\n      mstore\n        /* \"#utility.yul\":9127:9143   */\n      swap1\n      dup5\n      add\n      swap1\n        /* \"#utility.yul\":9021:9031   */\n      dup3\n      add\n        /* \"#utility.yul\":8992:9157   */\n      jump(tag_447)\n    tag_449:\n        /* \"#utility.yul\":8996:8999   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":9186:9192   */\n      dup3\n        /* \"#utility.yul\":9181:9184   */\n      dup8\n        /* \"#utility.yul\":9177:9193   */\n      add\n        /* \"#utility.yul\":9170:9193   */\n      swap5\n      pop\n        /* \"#utility.yul\":8671:9203   */\n    tag_444:\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":9234:9240   */\n      dup5\n        /* \"#utility.yul\":9228:9241   */\n      mload\n        /* \"#utility.yul\":9250:9318   */\n      tag_450\n        /* \"#utility.yul\":9309:9317   */\n      dup2\n        /* \"#utility.yul\":9304:9307   */\n      dup4\n        /* \"#utility.yul\":9297:9301   */\n      0x20\n        /* \"#utility.yul\":9289:9295   */\n      dup10\n        /* \"#utility.yul\":9285:9302   */\n      add\n        /* \"#utility.yul\":9250:9318   */\n      tag_362\n      jump\t// in\n    tag_450:\n      shl(0xa8, 0x3f746f6b656e547970653d)\n        /* \"#utility.yul\":9340:9358   */\n      swap2\n      add\n        /* \"#utility.yul\":9367:9395   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":9420:9433   */\n      dup4\n      mload\n        /* \"#utility.yul\":9442:9521   */\n      tag_451\n        /* \"#utility.yul\":9420:9433   */\n      dup2\n        /* \"#utility.yul\":9507:9509   */\n      0x0b\n        /* \"#utility.yul\":9496:9510   */\n      dup5\n      add\n        /* \"#utility.yul\":9489:9493   */\n      0x20\n        /* \"#utility.yul\":9477:9494   */\n      dup9\n      add\n        /* \"#utility.yul\":9442:9521   */\n      tag_362\n      jump\t// in\n    tag_451:\n        /* \"#utility.yul\":9541:9561   */\n      add\n        /* \"#utility.yul\":9563:9565   */\n      0x0b\n        /* \"#utility.yul\":9537:9566   */\n      add\n      swap6\n        /* \"#utility.yul\":8189:9572   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9577:10122   */\n    tag_367:\n        /* \"#utility.yul\":9679:9681   */\n      0x1f\n        /* \"#utility.yul\":9674:9677   */\n      dup3\n        /* \"#utility.yul\":9671:9682   */\n      gt\n        /* \"#utility.yul\":9668:10116   */\n      iszero\n      tag_453\n      jumpi\n        /* \"#utility.yul\":9715:9716   */\n      0x00\n        /* \"#utility.yul\":9740:9745   */\n      dup2\n        /* \"#utility.yul\":9736:9738   */\n      dup2\n        /* \"#utility.yul\":9729:9746   */\n      mstore\n        /* \"#utility.yul\":9785:9789   */\n      0x20\n        /* \"#utility.yul\":9781:9783   */\n      dup2\n        /* \"#utility.yul\":9771:9790   */\n      keccak256\n        /* \"#utility.yul\":9855:9857   */\n      0x1f\n        /* \"#utility.yul\":9843:9853   */\n      dup6\n        /* \"#utility.yul\":9839:9858   */\n      add\n        /* \"#utility.yul\":9836:9837   */\n      0x05\n        /* \"#utility.yul\":9832:9859   */\n      shr\n        /* \"#utility.yul\":9826:9830   */\n      dup2\n        /* \"#utility.yul\":9822:9860   */\n      add\n        /* \"#utility.yul\":9891:9895   */\n      0x20\n        /* \"#utility.yul\":9879:9889   */\n      dup7\n        /* \"#utility.yul\":9876:9896   */\n      lt\n        /* \"#utility.yul\":9873:9920   */\n      iszero\n      tag_454\n      jumpi\n      pop\n        /* \"#utility.yul\":9914:9918   */\n      dup1\n        /* \"#utility.yul\":9873:9920   */\n    tag_454:\n        /* \"#utility.yul\":9969:9971   */\n      0x1f\n        /* \"#utility.yul\":9964:9967   */\n      dup6\n        /* \"#utility.yul\":9960:9972   */\n      add\n        /* \"#utility.yul\":9957:9958   */\n      0x05\n        /* \"#utility.yul\":9953:9973   */\n      shr\n        /* \"#utility.yul\":9947:9951   */\n      dup3\n        /* \"#utility.yul\":9943:9974   */\n      add\n        /* \"#utility.yul\":9933:9974   */\n      swap2\n      pop\n        /* \"#utility.yul\":10024:10106   */\n    tag_455:\n        /* \"#utility.yul\":10042:10044   */\n      dup2\n        /* \"#utility.yul\":10035:10040   */\n      dup2\n        /* \"#utility.yul\":10032:10045   */\n      lt\n        /* \"#utility.yul\":10024:10106   */\n      iszero\n      tag_457\n      jumpi\n        /* \"#utility.yul\":10087:10104   */\n      dup3\n      dup2\n      sstore\n        /* \"#utility.yul\":10068:10069   */\n      0x01\n        /* \"#utility.yul\":10057:10070   */\n      add\n        /* \"#utility.yul\":10024:10106   */\n      jump(tag_455)\n    tag_457:\n        /* \"#utility.yul\":10028:10031   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":9668:10116   */\n    tag_453:\n        /* \"#utility.yul\":9577:10122   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10298:11650   */\n    tag_241:\n        /* \"#utility.yul\":10424:10427   */\n      dup2\n        /* \"#utility.yul\":10418:10428   */\n      mload\n        /* \"#utility.yul\":10451:10469   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":10443:10449   */\n      dup2\n        /* \"#utility.yul\":10440:10470   */\n      gt\n        /* \"#utility.yul\":10437:10493   */\n      iszero\n      tag_461\n      jumpi\n        /* \"#utility.yul\":10473:10491   */\n      tag_461\n      tag_311\n      jump\t// in\n    tag_461:\n        /* \"#utility.yul\":10502:10599   */\n      tag_462\n        /* \"#utility.yul\":10592:10598   */\n      dup2\n        /* \"#utility.yul\":10552:10590   */\n      tag_463\n        /* \"#utility.yul\":10584:10588   */\n      dup5\n        /* \"#utility.yul\":10578:10589   */\n      sload\n        /* \"#utility.yul\":10552:10590   */\n      tag_227\n      jump\t// in\n    tag_463:\n        /* \"#utility.yul\":10546:10550   */\n      dup5\n        /* \"#utility.yul\":10502:10599   */\n      tag_367\n      jump\t// in\n    tag_462:\n        /* \"#utility.yul\":10654:10658   */\n      0x20\n      dup1\n        /* \"#utility.yul\":10718:10720   */\n      0x1f\n        /* \"#utility.yul\":10707:10721   */\n      dup4\n      gt\n        /* \"#utility.yul\":10735:10736   */\n      0x01\n        /* \"#utility.yul\":10730:11393   */\n      dup2\n      eq\n      tag_465\n      jumpi\n        /* \"#utility.yul\":11437:11438   */\n      0x00\n        /* \"#utility.yul\":11454:11460   */\n      dup5\n        /* \"#utility.yul\":11451:11540   */\n      iszero\n      tag_466\n      jumpi\n      pop\n        /* \"#utility.yul\":11506:11525   */\n      dup6\n      dup4\n      add\n        /* \"#utility.yul\":11500:11526   */\n      mload\n        /* \"#utility.yul\":11451:11540   */\n    tag_466:\n      not(0x00)\n        /* \"#utility.yul\":10255:10256   */\n      0x03\n        /* \"#utility.yul\":10251:10262   */\n      dup7\n      swap1\n      shl\n        /* \"#utility.yul\":10247:10271   */\n      shr\n        /* \"#utility.yul\":10243:10272   */\n      not\n        /* \"#utility.yul\":10233:10273   */\n      and\n        /* \"#utility.yul\":10279:10280   */\n      0x01\n        /* \"#utility.yul\":10275:10286   */\n      dup6\n      swap1\n      shl\n        /* \"#utility.yul\":10230:10287   */\n      or\n        /* \"#utility.yul\":11553:11634   */\n      dup6\n      sstore\n        /* \"#utility.yul\":10700:11644   */\n      jump(tag_457)\n        /* \"#utility.yul\":10730:11393   */\n    tag_465:\n        /* \"#utility.yul\":8136:8137   */\n      0x00\n        /* \"#utility.yul\":8129:8143   */\n      dup6\n      dup2\n      mstore\n        /* \"#utility.yul\":8173:8177   */\n      0x20\n        /* \"#utility.yul\":8160:8178   */\n      dup2\n      keccak256\n      not(0x1f)\n        /* \"#utility.yul\":10766:10786   */\n      dup7\n      and\n      swap2\n        /* \"#utility.yul\":10884:11120   */\n    tag_469:\n        /* \"#utility.yul\":10898:10905   */\n      dup3\n        /* \"#utility.yul\":10895:10896   */\n      dup2\n        /* \"#utility.yul\":10892:10906   */\n      lt\n        /* \"#utility.yul\":10884:11120   */\n      iszero\n      tag_471\n      jumpi\n        /* \"#utility.yul\":10987:11006   */\n      dup9\n      dup7\n      add\n        /* \"#utility.yul\":10981:11007   */\n      mload\n        /* \"#utility.yul\":10966:11008   */\n      dup3\n      sstore\n        /* \"#utility.yul\":11079:11106   */\n      swap5\n      dup5\n      add\n      swap5\n        /* \"#utility.yul\":11047:11048   */\n      0x01\n        /* \"#utility.yul\":11035:11049   */\n      swap1\n      swap2\n      add\n      swap1\n        /* \"#utility.yul\":10914:10933   */\n      dup5\n      add\n        /* \"#utility.yul\":10884:11120   */\n      jump(tag_469)\n    tag_471:\n        /* \"#utility.yul\":10888:10891   */\n      pop\n        /* \"#utility.yul\":11148:11154   */\n      dup6\n        /* \"#utility.yul\":11139:11146   */\n      dup3\n        /* \"#utility.yul\":11136:11155   */\n      lt\n        /* \"#utility.yul\":11133:11334   */\n      iszero\n      tag_472\n      jumpi\n        /* \"#utility.yul\":11209:11228   */\n      dup8\n      dup6\n      add\n        /* \"#utility.yul\":11203:11229   */\n      mload\n      not(0x00)\n        /* \"#utility.yul\":11292:11293   */\n      0x03\n        /* \"#utility.yul\":11288:11302   */\n      dup9\n      swap1\n      shl\n        /* \"#utility.yul\":11304:11307   */\n      0xf8\n        /* \"#utility.yul\":11284:11308   */\n      and\n        /* \"#utility.yul\":11280:11317   */\n      shr\n        /* \"#utility.yul\":11276:11318   */\n      not\n        /* \"#utility.yul\":11261:11319   */\n      and\n        /* \"#utility.yul\":11246:11320   */\n      dup2\n      sstore\n        /* \"#utility.yul\":11133:11334   */\n    tag_472:\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":11380:11381   */\n      0x01\n        /* \"#utility.yul\":11364:11378   */\n      swap1\n      dup2\n      shl\n        /* \"#utility.yul\":11360:11382   */\n      add\n        /* \"#utility.yul\":11347:11383   */\n      swap1\n      sstore\n      pop\n        /* \"#utility.yul\":10298:11650   */\n      jump\t// out\n        /* \"#utility.yul\":12768:12895   */\n    tag_369:\n        /* \"#utility.yul\":12829:12839   */\n      0x4e487b71\n        /* \"#utility.yul\":12824:12827   */\n      0xe0\n        /* \"#utility.yul\":12820:12840   */\n      shl\n        /* \"#utility.yul\":12817:12818   */\n      0x00\n        /* \"#utility.yul\":12810:12841   */\n      mstore\n        /* \"#utility.yul\":12860:12864   */\n      0x11\n        /* \"#utility.yul\":12857:12858   */\n      0x04\n        /* \"#utility.yul\":12850:12865   */\n      mstore\n        /* \"#utility.yul\":12884:12888   */\n      0x24\n        /* \"#utility.yul\":12881:12882   */\n      0x00\n        /* \"#utility.yul\":12874:12889   */\n      revert\n        /* \"#utility.yul\":12900:13025   */\n    tag_274:\n        /* \"#utility.yul\":12965:12974   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":12986:12996   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":12983:13019   */\n      iszero\n      tag_152\n      jumpi\n        /* \"#utility.yul\":12999:13017   */\n      tag_152\n      tag_369\n      jump\t// in\n        /* \"#utility.yul\":13030:13158   */\n    tag_286:\n        /* \"#utility.yul\":13097:13106   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":13118:13129   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":13115:13152   */\n      iszero\n      tag_152\n      jumpi\n        /* \"#utility.yul\":13132:13150   */\n      tag_152\n      tag_369\n      jump\t// in\n        /* \"#utility.yul\":13714:14203   */\n    tag_330:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":13983:13998   */\n      dup6\n      dup2\n      and\n        /* \"#utility.yul\":13965:13999   */\n      dup3\n      mstore\n        /* \"#utility.yul\":14035:14050   */\n      dup5\n      and\n        /* \"#utility.yul\":14030:14032   */\n      0x20\n        /* \"#utility.yul\":14015:14033   */\n      dup3\n      add\n        /* \"#utility.yul\":14008:14051   */\n      mstore\n        /* \"#utility.yul\":14082:14084   */\n      0x40\n        /* \"#utility.yul\":14067:14085   */\n      dup2\n      add\n        /* \"#utility.yul\":14060:14094   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":14130:14133   */\n      0x80\n        /* \"#utility.yul\":14125:14127   */\n      0x60\n        /* \"#utility.yul\":14110:14128   */\n      dup3\n      add\n        /* \"#utility.yul\":14103:14134   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":13908:13912   */\n      0x00\n      swap1\n        /* \"#utility.yul\":14151:14197   */\n      tag_486\n      swap1\n        /* \"#utility.yul\":14177:14196   */\n      dup4\n      add\n        /* \"#utility.yul\":14169:14175   */\n      dup5\n        /* \"#utility.yul\":14151:14197   */\n      tag_363\n      jump\t// in\n    tag_486:\n        /* \"#utility.yul\":14143:14197   */\n      swap7\n        /* \"#utility.yul\":13714:14203   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14208:14457   */\n    tag_334:\n        /* \"#utility.yul\":14277:14283   */\n      0x00\n        /* \"#utility.yul\":14330:14332   */\n      0x20\n        /* \"#utility.yul\":14318:14327   */\n      dup3\n        /* \"#utility.yul\":14309:14316   */\n      dup5\n        /* \"#utility.yul\":14305:14328   */\n      sub\n        /* \"#utility.yul\":14301:14333   */\n      slt\n        /* \"#utility.yul\":14298:14350   */\n      iszero\n      tag_488\n      jumpi\n        /* \"#utility.yul\":14346:14347   */\n      0x00\n        /* \"#utility.yul\":14343:14344   */\n      dup1\n        /* \"#utility.yul\":14336:14348   */\n      revert\n        /* \"#utility.yul\":14298:14350   */\n    tag_488:\n        /* \"#utility.yul\":14378:14387   */\n      dup2\n        /* \"#utility.yul\":14372:14388   */\n      mload\n        /* \"#utility.yul\":14397:14427   */\n      tag_187\n        /* \"#utility.yul\":14421:14426   */\n      dup2\n        /* \"#utility.yul\":14397:14427   */\n      tag_361\n      jump\t// in\n\n    auxdata: 0xa26469706673582212206f1c18825d3fab6e9e47f6e6bb10febec3d3a653d85f4372dc448eab8ab495e864736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1597": {
									"entryPoint": null,
									"id": 1597,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_23": {
									"entryPoint": null,
									"id": 23,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_258": {
									"entryPoint": null,
									"id": 258,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_111": {
									"entryPoint": 192,
									"id": 111,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_string_memory_ptr_fromMemory": {
									"entryPoint": 327,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_string": {
									"entryPoint": 846,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_string_memory_ptr_t_string_memory_ptr_t_string_storage__to_t_uint256_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 891,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 564,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 646,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 291,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 506,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 271,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:5499:14",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:14",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "46:95:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "63:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "70:3:14",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "75:10:14",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "66:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "66:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "56:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "56:31:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "56:31:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "103:1:14",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "106:4:14",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "96:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "96:15:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "96:15:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "127:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "130:4:14",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "120:15:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "120:15:14"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "14:127:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "212:184:14",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "222:10:14",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "231:1:14",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "226:1:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "291:63:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "316:3:14"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "321:1:14"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "312:3:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "312:11:14"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "335:3:14"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "340:1:14"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "331:3:14"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "331:11:14"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "325:5:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "325:18:14"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "305:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "305:39:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "305:39:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "252:1:14"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "255:6:14"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "249:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "249:13:14"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "263:19:14",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "265:15:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "274:1:14"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "277:2:14",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "270:3:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "270:10:14"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "265:1:14"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "245:3:14",
																"statements": []
															},
															"src": "241:113:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "374:3:14"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "379:6:14"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "370:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "370:16:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "388:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "363:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "363:27:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "363:27:14"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "190:3:14",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "195:3:14",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "200:6:14",
														"type": ""
													}
												],
												"src": "146:250:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "492:806:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "538:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "547:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "550:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "540:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "540:12:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "540:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "513:7:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "522:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "509:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "509:23:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "534:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "505:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "505:32:14"
															},
															"nodeType": "YulIf",
															"src": "502:52:14"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "563:30:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "583:9:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "577:5:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "577:16:14"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "567:6:14",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "602:28:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "620:2:14",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "624:1:14",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "616:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "616:10:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "628:1:14",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "612:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "612:18:14"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "606:2:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "657:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "666:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "669:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "659:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "659:12:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "659:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "645:6:14"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "653:2:14"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "642:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "642:14:14"
															},
															"nodeType": "YulIf",
															"src": "639:34:14"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "682:32:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "696:9:14"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "707:6:14"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "692:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "692:22:14"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "686:2:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "762:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "771:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "774:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "764:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "764:12:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "764:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "741:2:14"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "745:4:14",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "737:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "737:13:14"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "752:7:14"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "733:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "733:27:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "726:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "726:35:14"
															},
															"nodeType": "YulIf",
															"src": "723:55:14"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "787:19:14",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "803:2:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "797:5:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "797:9:14"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "791:2:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "829:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "831:16:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "831:18:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "831:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "821:2:14"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "825:2:14"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "818:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "818:10:14"
															},
															"nodeType": "YulIf",
															"src": "815:36:14"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "860:17:14",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "874:2:14",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "870:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "870:7:14"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "864:2:14",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "886:23:14",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "906:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "900:5:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "900:9:14"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "890:6:14",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "918:71:14",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "940:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_3",
																										"nodeType": "YulIdentifier",
																										"src": "964:2:14"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "968:4:14",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "960:3:14"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "960:13:14"
																							},
																							{
																								"name": "_4",
																								"nodeType": "YulIdentifier",
																								"src": "975:2:14"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "956:3:14"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "956:22:14"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "980:2:14",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "952:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "952:31:14"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "985:2:14"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "948:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "948:40:14"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "936:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "936:53:14"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "922:10:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1048:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1050:16:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1050:18:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1050:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1007:10:14"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "1019:2:14"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1004:2:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1004:18:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1027:10:14"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1039:6:14"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1024:2:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1024:22:14"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "1001:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1001:46:14"
															},
															"nodeType": "YulIf",
															"src": "998:72:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1086:2:14",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "1090:10:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1079:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1079:22:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1079:22:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1117:6:14"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "1125:2:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1110:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1110:18:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1110:18:14"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1174:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1183:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1186:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1176:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1176:12:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1176:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "1151:2:14"
																					},
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "1155:2:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1147:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1147:11:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1160:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1143:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1143:20:14"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1165:7:14"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1140:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1140:33:14"
															},
															"nodeType": "YulIf",
															"src": "1137:53:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "1238:2:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1242:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1234:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1234:11:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1251:6:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1259:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1247:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1247:15:14"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "1264:2:14"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "1199:34:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1199:68:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1199:68:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1276:16:14",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "1286:6:14"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1276:6:14"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "458:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "469:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "481:6:14",
														"type": ""
													}
												],
												"src": "401:897:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1358:325:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1368:22:14",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1382:1:14",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1385:4:14"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "1378:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1378:12:14"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1368:6:14"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1399:38:14",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1429:4:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1435:1:14",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1425:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1425:12:14"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "1403:18:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1476:31:14",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1478:27:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "1492:6:14"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1500:4:14",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "1488:3:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1488:17:14"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1478:6:14"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1456:18:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1449:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1449:26:14"
															},
															"nodeType": "YulIf",
															"src": "1446:61:14"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1566:111:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1587:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1594:3:14",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1599:10:14",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "1590:3:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1590:20:14"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1580:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1580:31:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1580:31:14"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1631:1:14",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1634:4:14",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1624:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1624:15:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1624:15:14"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1659:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1662:4:14",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1652:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1652:15:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1652:15:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1522:18:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1545:6:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1553:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1542:2:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1542:14:14"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "1519:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1519:38:14"
															},
															"nodeType": "YulIf",
															"src": "1516:161:14"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1338:4:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1347:6:14",
														"type": ""
													}
												],
												"src": "1303:380:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1744:65:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1761:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "1764:3:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1754:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1754:14:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1754:14:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1777:26:14",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1795:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1798:4:14",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "1785:9:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1785:18:14"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "1777:4:14"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "1727:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1735:4:14",
														"type": ""
													}
												],
												"src": "1688:121:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1895:464:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1928:425:14",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "1942:11:14",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "1952:1:14",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nodeType": "YulTypedName",
																				"src": "1946:2:14",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "1973:2:14"
																				},
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "1977:5:14"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1966:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1966:17:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1966:17:14"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "1996:31:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "2018:2:14"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2022:4:14",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nodeType": "YulIdentifier",
																				"src": "2008:9:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2008:19:14"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nodeType": "YulTypedName",
																				"src": "2000:4:14",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2040:57:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nodeType": "YulIdentifier",
																					"src": "2063:4:14"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2073:1:14",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nodeType": "YulIdentifier",
																									"src": "2080:10:14"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "2092:2:14",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2076:3:14"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2076:19:14"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nodeType": "YulIdentifier",
																						"src": "2069:3:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2069:27:14"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2059:3:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2059:38:14"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nodeType": "YulTypedName",
																				"src": "2044:11:14",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "2134:23:14",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "2136:19:14",
																					"value": {
																						"name": "data",
																						"nodeType": "YulIdentifier",
																						"src": "2151:4:14"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nodeType": "YulIdentifier",
																							"src": "2136:11:14"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nodeType": "YulIdentifier",
																					"src": "2116:10:14"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2128:4:14",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "2113:2:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2113:20:14"
																		},
																		"nodeType": "YulIf",
																		"src": "2110:47:14"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2170:41:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nodeType": "YulIdentifier",
																					"src": "2184:4:14"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2194:1:14",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nodeType": "YulIdentifier",
																									"src": "2201:3:14"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "2206:2:14",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2197:3:14"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2197:12:14"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nodeType": "YulIdentifier",
																						"src": "2190:3:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2190:20:14"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2180:3:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2180:31:14"
																		},
																		"variables": [
																			{
																				"name": "_2",
																				"nodeType": "YulTypedName",
																				"src": "2174:2:14",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2224:24:14",
																		"value": {
																			"name": "deleteStart",
																			"nodeType": "YulIdentifier",
																			"src": "2237:11:14"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nodeType": "YulTypedName",
																				"src": "2228:5:14",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "2322:21:14",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nodeType": "YulIdentifier",
																								"src": "2331:5:14"
																							},
																							{
																								"name": "_1",
																								"nodeType": "YulIdentifier",
																								"src": "2338:2:14"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nodeType": "YulIdentifier",
																							"src": "2324:6:14"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2324:17:14"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "2324:17:14"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "2272:5:14"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "2279:2:14"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "2269:2:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2269:13:14"
																		},
																		"nodeType": "YulForLoop",
																		"post": {
																			"nodeType": "YulBlock",
																			"src": "2283:26:14",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "2285:22:14",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nodeType": "YulIdentifier",
																								"src": "2298:5:14"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2305:1:14",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "2294:3:14"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2294:13:14"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nodeType": "YulIdentifier",
																							"src": "2285:5:14"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nodeType": "YulBlock",
																			"src": "2265:3:14",
																			"statements": []
																		},
																		"src": "2261:82:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "1911:3:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1916:2:14",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1908:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1908:11:14"
															},
															"nodeType": "YulIf",
															"src": "1905:448:14"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "1867:5:14",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "1874:3:14",
														"type": ""
													},
													{
														"name": "startIndex",
														"nodeType": "YulTypedName",
														"src": "1879:10:14",
														"type": ""
													}
												],
												"src": "1814:545:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2449:81:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2459:65:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nodeType": "YulIdentifier",
																				"src": "2474:4:14"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "2492:1:14",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nodeType": "YulIdentifier",
																										"src": "2495:3:14"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "2488:3:14"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2488:11:14"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "2505:1:14",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nodeType": "YulIdentifier",
																									"src": "2501:3:14"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2501:6:14"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nodeType": "YulIdentifier",
																							"src": "2484:3:14"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2484:24:14"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "2480:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2480:29:14"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2470:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2470:40:14"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2516:1:14",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nodeType": "YulIdentifier",
																				"src": "2519:3:14"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "2512:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2512:11:14"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "2467:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2467:57:14"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nodeType": "YulIdentifier",
																	"src": "2459:4:14"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "2426:4:14",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "2432:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nodeType": "YulTypedName",
														"src": "2440:4:14",
														"type": ""
													}
												],
												"src": "2364:166:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2631:1256:14",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2641:24:14",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "2661:3:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2655:5:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2655:10:14"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nodeType": "YulTypedName",
																	"src": "2645:6:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2708:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "2710:16:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2710:18:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2710:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "2680:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2696:2:14",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2700:1:14",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "2692:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2692:10:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2704:1:14",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2688:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2688:18:14"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2677:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2677:30:14"
															},
															"nodeType": "YulIf",
															"src": "2674:56:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "2783:4:14"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nodeType": "YulIdentifier",
																						"src": "2821:4:14"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nodeType": "YulIdentifier",
																					"src": "2815:5:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2815:11:14"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nodeType": "YulIdentifier",
																			"src": "2789:25:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2789:38:14"
																	},
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "2829:6:14"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nodeType": "YulIdentifier",
																	"src": "2739:43:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2739:97:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2739:97:14"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2845:18:14",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2862:1:14",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulTypedName",
																	"src": "2849:9:14",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2872:23:14",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2891:4:14",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "srcOffset_1",
																	"nodeType": "YulTypedName",
																	"src": "2876:11:14",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2904:24:14",
															"value": {
																"name": "srcOffset_1",
																"nodeType": "YulIdentifier",
																"src": "2917:11:14"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulIdentifier",
																	"src": "2904:9:14"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "2974:656:14",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "2988:35:14",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "3007:6:14"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "3019:2:14",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "3015:3:14"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3015:7:14"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "3003:3:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3003:20:14"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nodeType": "YulTypedName",
																						"src": "2992:7:14",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "3036:49:14",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "3080:4:14"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nodeType": "YulIdentifier",
																						"src": "3050:29:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3050:35:14"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nodeType": "YulTypedName",
																						"src": "3040:6:14",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "3098:10:14",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3107:1:14",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "3102:1:14",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "3185:172:14",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "3210:6:14"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nodeType": "YulIdentifier",
																														"src": "3228:3:14"
																													},
																													{
																														"name": "srcOffset",
																														"nodeType": "YulIdentifier",
																														"src": "3233:9:14"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nodeType": "YulIdentifier",
																													"src": "3224:3:14"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "3224:19:14"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "3218:5:14"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "3218:26:14"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "3203:6:14"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3203:42:14"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "3203:42:14"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "3262:24:14",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "3276:6:14"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "3284:1:14",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "3272:3:14"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3272:14:14"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nodeType": "YulIdentifier",
																									"src": "3262:6:14"
																								}
																							]
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "3303:40:14",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nodeType": "YulIdentifier",
																										"src": "3320:9:14"
																									},
																									{
																										"name": "srcOffset_1",
																										"nodeType": "YulIdentifier",
																										"src": "3331:11:14"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "3316:3:14"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3316:27:14"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nodeType": "YulIdentifier",
																									"src": "3303:9:14"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "3132:1:14"
																						},
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "3135:7:14"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "3129:2:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3129:14:14"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "3144:28:14",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "3146:24:14",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "3155:1:14"
																									},
																									{
																										"name": "srcOffset_1",
																										"nodeType": "YulIdentifier",
																										"src": "3158:11:14"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "3151:3:14"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3151:19:14"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "3146:1:14"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "3125:3:14",
																					"statements": []
																				},
																				"src": "3121:236:14"
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "3405:166:14",
																					"statements": [
																						{
																							"nodeType": "YulVariableDeclaration",
																							"src": "3423:43:14",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "3450:3:14"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "3455:9:14"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "3446:3:14"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "3446:19:14"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "3440:5:14"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3440:26:14"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nodeType": "YulTypedName",
																									"src": "3427:9:14",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "3490:6:14"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nodeType": "YulIdentifier",
																												"src": "3502:9:14"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nodeType": "YulLiteral",
																																				"src": "3529:1:14",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nodeType": "YulIdentifier",
																																				"src": "3532:6:14"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nodeType": "YulIdentifier",
																																			"src": "3525:3:14"
																																		},
																																		"nodeType": "YulFunctionCall",
																																		"src": "3525:14:14"
																																	},
																																	{
																																		"kind": "number",
																																		"nodeType": "YulLiteral",
																																		"src": "3541:3:14",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nodeType": "YulIdentifier",
																																	"src": "3521:3:14"
																																},
																																"nodeType": "YulFunctionCall",
																																"src": "3521:24:14"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nodeType": "YulLiteral",
																																		"src": "3551:1:14",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nodeType": "YulIdentifier",
																																	"src": "3547:3:14"
																																},
																																"nodeType": "YulFunctionCall",
																																"src": "3547:6:14"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nodeType": "YulIdentifier",
																															"src": "3517:3:14"
																														},
																														"nodeType": "YulFunctionCall",
																														"src": "3517:37:14"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nodeType": "YulIdentifier",
																													"src": "3513:3:14"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "3513:42:14"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nodeType": "YulIdentifier",
																											"src": "3498:3:14"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "3498:58:14"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "3483:6:14"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3483:74:14"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "3483:74:14"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "3376:7:14"
																						},
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "3385:6:14"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "3373:2:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3373:19:14"
																				},
																				"nodeType": "YulIf",
																				"src": "3370:201:14"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "3591:4:14"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "3605:1:14",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nodeType": "YulIdentifier",
																											"src": "3608:6:14"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nodeType": "YulIdentifier",
																										"src": "3601:3:14"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "3601:14:14"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "3617:1:14",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "3597:3:14"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3597:22:14"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "3584:6:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3584:36:14"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "3584:36:14"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "2967:663:14",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2972:1:14",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3647:234:14",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "3661:14:14",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3674:1:14",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nodeType": "YulTypedName",
																						"src": "3665:5:14",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "3710:67:14",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "3728:35:14",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "3747:3:14"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "3752:9:14"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "3743:3:14"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "3743:19:14"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "3737:5:14"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3737:26:14"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "3728:5:14"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nodeType": "YulIdentifier",
																					"src": "3691:6:14"
																				},
																				"nodeType": "YulIf",
																				"src": "3688:89:14"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "3797:4:14"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "3856:5:14"
																								},
																								{
																									"name": "newLen",
																									"nodeType": "YulIdentifier",
																									"src": "3863:6:14"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nodeType": "YulIdentifier",
																								"src": "3803:52:14"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3803:67:14"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "3790:6:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3790:81:14"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "3790:81:14"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "3639:242:14",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "2947:6:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2955:2:14",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2944:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2944:14:14"
															},
															"nodeType": "YulSwitch",
															"src": "2937:944:14"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "2616:4:14",
														"type": ""
													},
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "2622:3:14",
														"type": ""
													}
												],
												"src": "2535:1352:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3942:221:14",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3952:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3972:5:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3966:5:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "3966:12:14"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "3956:6:14",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3994:3:14"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3999:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3987:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "3987:19:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3987:19:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4054:5:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4061:4:14",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4050:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4050:16:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "4072:3:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4077:4:14",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4068:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4068:14:14"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4084:6:14"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "4015:34:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4015:76:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4015:76:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4100:57:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "4115:3:14"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "4128:6:14"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4136:2:14",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "4124:3:14"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4124:15:14"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4145:2:14",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "4141:3:14"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4141:7:14"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "4120:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4120:29:14"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4111:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4111:39:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4152:4:14",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4107:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4107:50:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4100:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_string",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3919:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3926:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3934:3:14",
														"type": ""
													}
												],
												"src": "3892:271:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4410:1087:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4427:9:14"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4438:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4420:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4420:25:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4420:25:14"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4454:12:14",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4464:2:14",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "4458:2:14",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4486:9:14"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "4497:2:14"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4482:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4482:18:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4502:3:14",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4475:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4475:31:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4475:31:14"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4515:60:14",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "4547:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4559:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4570:3:14",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4555:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4555:19:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nodeType": "YulIdentifier",
																	"src": "4529:17:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4529:46:14"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nodeType": "YulTypedName",
																	"src": "4519:6:14",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4595:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4606:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4591:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4591:18:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail_1",
																				"nodeType": "YulIdentifier",
																				"src": "4615:6:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4623:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4611:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4611:22:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4584:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4584:50:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4584:50:14"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4643:47:14",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "4675:6:14"
																	},
																	{
																		"name": "tail_1",
																		"nodeType": "YulIdentifier",
																		"src": "4683:6:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nodeType": "YulIdentifier",
																	"src": "4657:17:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4657:33:14"
															},
															"variables": [
																{
																	"name": "tail_2",
																	"nodeType": "YulTypedName",
																	"src": "4647:6:14",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4710:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4721:2:14",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4706:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4706:18:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail_2",
																				"nodeType": "YulIdentifier",
																				"src": "4730:6:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4738:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4726:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4726:22:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4699:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4699:50:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4699:50:14"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4758:12:14",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4769:1:14",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "ret",
																	"nodeType": "YulTypedName",
																	"src": "4762:3:14",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4779:30:14",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "4802:6:14"
																	}
																],
																"functionName": {
																	"name": "sload",
																	"nodeType": "YulIdentifier",
																	"src": "4796:5:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4796:13:14"
															},
															"variables": [
																{
																	"name": "slotValue",
																	"nodeType": "YulTypedName",
																	"src": "4783:9:14",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4818:50:14",
															"value": {
																"arguments": [
																	{
																		"name": "slotValue",
																		"nodeType": "YulIdentifier",
																		"src": "4858:9:14"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nodeType": "YulIdentifier",
																	"src": "4832:25:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4832:36:14"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "4822:6:14",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "tail_2",
																		"nodeType": "YulIdentifier",
																		"src": "4884:6:14"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4892:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4877:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4877:22:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4877:22:14"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4908:11:14",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4918:1:14",
																"type": "",
																"value": "1"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "4912:2:14",
																	"type": ""
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "4969:145:14",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "tail_2",
																									"nodeType": "YulIdentifier",
																									"src": "4994:6:14"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "5002:2:14"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "4990:3:14"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "4990:15:14"
																						},
																						{
																							"arguments": [
																								{
																									"name": "slotValue",
																									"nodeType": "YulIdentifier",
																									"src": "5011:9:14"
																								},
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "5026:3:14",
																											"type": "",
																											"value": "255"
																										}
																									],
																									"functionName": {
																										"name": "not",
																										"nodeType": "YulIdentifier",
																										"src": "5022:3:14"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "5022:8:14"
																								}
																							],
																							"functionName": {
																								"name": "and",
																								"nodeType": "YulIdentifier",
																								"src": "5007:3:14"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "5007:24:14"
																						}
																					],
																					"functionName": {
																						"name": "mstore",
																						"nodeType": "YulIdentifier",
																						"src": "4983:6:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4983:49:14"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "4983:49:14"
																			},
																			{
																				"nodeType": "YulAssignment",
																				"src": "5045:59:14",
																				"value": {
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "tail_2",
																									"nodeType": "YulIdentifier",
																									"src": "5060:6:14"
																								},
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "5072:1:14",
																											"type": "",
																											"value": "5"
																										},
																										{
																											"arguments": [
																												{
																													"arguments": [
																														{
																															"name": "length",
																															"nodeType": "YulIdentifier",
																															"src": "5089:6:14"
																														}
																													],
																													"functionName": {
																														"name": "iszero",
																														"nodeType": "YulIdentifier",
																														"src": "5082:6:14"
																													},
																													"nodeType": "YulFunctionCall",
																													"src": "5082:14:14"
																												}
																											],
																											"functionName": {
																												"name": "iszero",
																												"nodeType": "YulIdentifier",
																												"src": "5075:6:14"
																											},
																											"nodeType": "YulFunctionCall",
																											"src": "5075:22:14"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nodeType": "YulIdentifier",
																										"src": "5068:3:14"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "5068:30:14"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "5056:3:14"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "5056:43:14"
																						},
																						{
																							"name": "_1",
																							"nodeType": "YulIdentifier",
																							"src": "5101:2:14"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "5052:3:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5052:52:14"
																				},
																				"variableNames": [
																					{
																						"name": "ret",
																						"nodeType": "YulIdentifier",
																						"src": "5045:3:14"
																					}
																				]
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "4962:152:14",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4967:1:14",
																		"type": "",
																		"value": "0"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "5130:341:14",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5151:1:14",
																							"type": "",
																							"value": "0"
																						},
																						{
																							"name": "value3",
																							"nodeType": "YulIdentifier",
																							"src": "5154:6:14"
																						}
																					],
																					"functionName": {
																						"name": "mstore",
																						"nodeType": "YulIdentifier",
																						"src": "5144:6:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5144:17:14"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "5144:17:14"
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "5174:31:14",
																				"value": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5199:1:14",
																							"type": "",
																							"value": "0"
																						},
																						{
																							"name": "_1",
																							"nodeType": "YulIdentifier",
																							"src": "5202:2:14"
																						}
																					],
																					"functionName": {
																						"name": "keccak256",
																						"nodeType": "YulIdentifier",
																						"src": "5189:9:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5189:16:14"
																				},
																				"variables": [
																					{
																						"name": "dataPos",
																						"nodeType": "YulTypedName",
																						"src": "5178:7:14",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "5218:10:14",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5227:1:14",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "5222:1:14",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "5295:123:14",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "tail_2",
																														"nodeType": "YulIdentifier",
																														"src": "5328:6:14"
																													},
																													{
																														"name": "i",
																														"nodeType": "YulIdentifier",
																														"src": "5336:1:14"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nodeType": "YulIdentifier",
																													"src": "5324:3:14"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "5324:14:14"
																											},
																											{
																												"name": "_1",
																												"nodeType": "YulIdentifier",
																												"src": "5340:2:14"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "5320:3:14"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "5320:23:14"
																									},
																									{
																										"arguments": [
																											{
																												"name": "dataPos",
																												"nodeType": "YulIdentifier",
																												"src": "5351:7:14"
																											}
																										],
																										"functionName": {
																											"name": "sload",
																											"nodeType": "YulIdentifier",
																											"src": "5345:5:14"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "5345:14:14"
																									}
																								],
																								"functionName": {
																									"name": "mstore",
																									"nodeType": "YulIdentifier",
																									"src": "5313:6:14"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "5313:47:14"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "5313:47:14"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "5377:27:14",
																							"value": {
																								"arguments": [
																									{
																										"name": "dataPos",
																										"nodeType": "YulIdentifier",
																										"src": "5392:7:14"
																									},
																									{
																										"name": "_2",
																										"nodeType": "YulIdentifier",
																										"src": "5401:2:14"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "5388:3:14"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "5388:16:14"
																							},
																							"variableNames": [
																								{
																									"name": "dataPos",
																									"nodeType": "YulIdentifier",
																									"src": "5377:7:14"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "5252:1:14"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "5255:6:14"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "5249:2:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5249:13:14"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "5263:19:14",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "5265:15:14",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "5274:1:14"
																									},
																									{
																										"name": "_1",
																										"nodeType": "YulIdentifier",
																										"src": "5277:2:14"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "5270:3:14"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "5270:10:14"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "5265:1:14"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "5245:3:14",
																					"statements": []
																				},
																				"src": "5241:177:14"
																			},
																			{
																				"nodeType": "YulAssignment",
																				"src": "5431:30:14",
																				"value": {
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "tail_2",
																									"nodeType": "YulIdentifier",
																									"src": "5446:6:14"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "5454:1:14"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "5442:3:14"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "5442:14:14"
																						},
																						{
																							"name": "_1",
																							"nodeType": "YulIdentifier",
																							"src": "5458:2:14"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "5438:3:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5438:23:14"
																				},
																				"variableNames": [
																					{
																						"name": "ret",
																						"nodeType": "YulIdentifier",
																						"src": "5431:3:14"
																					}
																				]
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "5123:348:14",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5128:1:14",
																		"type": "",
																		"value": "1"
																	}
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "slotValue",
																		"nodeType": "YulIdentifier",
																		"src": "4939:9:14"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "4950:2:14"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4935:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4935:18:14"
															},
															"nodeType": "YulSwitch",
															"src": "4928:543:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5480:11:14",
															"value": {
																"name": "ret",
																"nodeType": "YulIdentifier",
																"src": "5488:3:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5480:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_string_memory_ptr_t_string_memory_ptr_t_string_storage__to_t_uint256_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4355:9:14",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "4366:6:14",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "4374:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4382:6:14",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4390:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4401:4:14",
														"type": ""
													}
												],
												"src": "4168:1329:14"
											}
										]
									},
									"contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_decode_tuple_t_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := mload(_2)\n        if gt(_3, _1) { panic_error_0x41() }\n        let _4 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_3, 0x1f), _4), 63), _4))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _3)\n        if gt(add(add(_2, _3), 32), dataEnd) { revert(0, 0) }\n        copy_memory_to_memory_with_cleanup(add(_2, 32), add(memPtr, 32), _3)\n        value0 := memPtr\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), add(pos, 0x20), length)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_uint256_t_string_memory_ptr_t_string_memory_ptr_t_string_storage__to_t_uint256_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, value0)\n        let _1 := 32\n        mstore(add(headStart, _1), 128)\n        let tail_1 := abi_encode_string(value1, add(headStart, 128))\n        mstore(add(headStart, 64), sub(tail_1, headStart))\n        let tail_2 := abi_encode_string(value2, tail_1)\n        mstore(add(headStart, 96), sub(tail_2, headStart))\n        let ret := 0\n        let slotValue := sload(value3)\n        let length := extract_byte_array_length(slotValue)\n        mstore(tail_2, length)\n        let _2 := 1\n        switch and(slotValue, _2)\n        case 0 {\n            mstore(add(tail_2, _1), and(slotValue, not(255)))\n            ret := add(add(tail_2, shl(5, iszero(iszero(length)))), _1)\n        }\n        case 1 {\n            mstore(0, value3)\n            let dataPos := keccak256(0, _1)\n            let i := 0\n            for { } lt(i, length) { i := add(i, _1) }\n            {\n                mstore(add(add(tail_2, i), _1), sload(dataPos))\n                dataPos := add(dataPos, _2)\n            }\n            ret := add(add(tail_2, i), _1)\n        }\n        tail := ret\n    }\n}",
									"id": 14,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801562000010575f80fd5b5060405162001a0738038062001a07833981016040819052620000339162000147565b6200003e33620000c0565b60016200004c828262000286565b506040805180820182526006808252651213d394d09560d21b602080840182905284518086018652928352820152915133927fddb33c9627985605622b2c4e8b308152b557aeae8ba59e2f05038c9d8ed6ae8492620000b1924292906001906200037b565b60405180910390a25062000439565b5f80546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b634e487b7160e01b5f52604160045260245ffd5b5f5b838110156200013f57818101518382015260200162000125565b50505f910152565b5f6020828403121562000158575f80fd5b81516001600160401b03808211156200016f575f80fd5b818401915084601f83011262000183575f80fd5b8151818111156200019857620001986200010f565b604051601f8201601f19908116603f01168101908382118183101715620001c357620001c36200010f565b81604052828152876020848701011115620001dc575f80fd5b620001ef83602083016020880162000123565b979650505050505050565b600181811c908216806200020f57607f821691505b6020821081036200022e57634e487b7160e01b5f52602260045260245ffd5b50919050565b601f82111562000281575f81815260208120601f850160051c810160208610156200025c5750805b601f850160051c820191505b818110156200027d5782815560010162000268565b5050505b505050565b81516001600160401b03811115620002a257620002a26200010f565b620002ba81620002b38454620001fa565b8462000234565b602080601f831160018114620002f0575f8415620002d85750858301515b5f19600386901b1c1916600185901b1785556200027d565b5f85815260208120601f198616915b828110156200032057888601518255948401946001909101908401620002ff565b50858210156200033e57878501515f19600388901b60f8161c191681555b5050505050600190811b01905550565b5f81518084526200036781602086016020860162000123565b601f01601f19169290920160200192915050565b8481525f60206080818401526200039660808401876200034e565b8381036040850152620003aa81876200034e565b905083810360608501525f8554620003c281620001fa565b80845260018281168015620003e05760018114620003fb5762000428565b60ff1984168688015282151560051b86018701945062000428565b895f52865f205f5b84811015620004205781548882018a015290830190880162000403565b870188019550505b50929b9a5050505050505050505050565b6115c080620004475f395ff3fe608060405234801561000f575f80fd5b50600436106101bb575f3560e01c8063715018a6116100f3578063be37e90711610093578063e0df5b6f1161006e578063e0df5b6f146103a7578063e1604b70146103ba578063e985e9c5146103c2578063f2fde38b146103d5575f80fd5b8063be37e9071461036e578063c87b56dd14610381578063ce35de9514610394575f80fd5b806395d89b41116100ce57806395d89b41146101e75780639b2528521461033a578063a22cb4651461034d578063b88d4fde14610360575f80fd5b8063715018a61461030f57806376aed2e1146103175780638da5cb5b1461032a575f80fd5b806323b872dd1161015e57806342842e0e1161013957806342842e0e146102c357806351c18e0c146102d65780636352211e146102e957806370a08231146102fc575f80fd5b806323b872dd1461028a5780632f745c591461029d57806340c10f19146102b0575f80fd5b8063095ea7b311610199578063095ea7b31461023d57806318160ddd146102525780631c02bc31146102645780631f8eb67714610277575f80fd5b806301ffc9a7146101bf57806306fdde03146101e7578063081812fc14610212575b5f80fd5b6101d26101cd366004611015565b6103e8565b60405190151581526020015b60405180910390f35b6040805180820190915260068152651213d394d09560d21b60208201525b6040516101de919061107d565b61022561022036600461108f565b61041e565b6040516001600160a01b0390911681526020016101de565b61025061024b3660046110bc565b61045c565b005b6003545b6040519081526020016101de565b6101d26102723660046110f3565b61048f565b6101d261028536600461110c565b6104de565b610250610298366004611125565b6104fe565b6102566102ab3660046110bc565b610536565b6102566102be3660046110bc565b6105e7565b6102506102d1366004611125565b610601565b6102566102e436600461108f565b61063d565b6102256102f736600461108f565b610659565b61025661030a36600461110c565b61067e565b6102506106a6565b61025661032536600461108f565b6106b9565b5f546001600160a01b0316610225565b6102506103483660046110bc565b6106d5565b61025061035b36600461115e565b610717565b6102506102d136600461118f565b61025661037c3660046110bc565b610754565b61020561038f36600461108f565b610767565b6101d26103a236600461110c565b6107e4565b6102056103b5366004611236565b6107ee565b600254610256565b6101d26103d03660046112e1565b6108d7565b6102506103e336600461110c565b610915565b5f6001600160e01b031982166380ac58cd60e01b148061041857506301ffc9a760e01b6001600160e01b03198316145b92915050565b6040516313f8dceb60e31b815260206004820152600b60248201526a19d95d105c1c1c9bdd995960aa1b60448201525f906064015b60405180910390fd5b6040516313f8dceb60e31b8152602060048201526007602482015266617070726f766560c81b6044820152606401610453565b335f9081526007602052604081205481106104bf57604051635015929960e01b8152336004820152602401610453565b335f818152600860205260409020805460ff1916841515179055610418905b6001600160a01b0381165f9081526008602052604081205460ff16610418565b6040516313f8dceb60e31b815260206004820152600c60248201526b7472616e7366657246726f6d60a01b6044820152606401610453565b5f6105408361098e565b506001600160a01b0383165f9081526007602052604090205482106105965760405162461bcd60e51b815260206004820152600c60248201526b09eeae840decc4092dcc8caf60a31b6044820152606401610453565b6001600160a01b0383166105bf576040516374f5e87d60e01b81525f6004820152602401610453565b506001600160a01b03919091165f908152600960209081526040808320938352929052205490565b5f6105f06109dd565b6105fa8383610a36565b9392505050565b6040516313f8dceb60e31b815260206004820152601060248201526f736166655472616e7366657246726f6d60801b6044820152606401610453565b5f61064782610c38565b505f9081526006602052604090205490565b5f61066382610c38565b505f908152600460205260409020546001600160a01b031690565b5f6106888261098e565b506001600160a01b0382165f90815260076020526040902054610418565b6106ae6109dd565b6106b75f610c8f565b565b5f6106c382610c38565b505f9081526005602052604090205490565b336001600160a01b0383161461070957604051635015929960e01b81526001600160a01b0383166004820152602401610453565b6107138282610cde565b5050565b6040516313f8dceb60e31b81526020600482015260116024820152701cd95d105c1c1c9bdd985b119bdc905b1b607a1b6044820152606401610453565b5f61075d6109dd565b6105fa8383610d2f565b606061077282610c38565b5f6001805461078090611309565b90501161079b5760405180602001604052805f815250610418565b60016107a683610db3565b5f848152600560205260409020546107bd90610db3565b6040516020016107cf93929190611341565b60405160208183030381529060405292915050565b5f6104188261098e565b60606107f86109dd565b6001610804838261143d565b50336001600160a01b03167f70e6a9dc20d331ce8e747d7de8444f26f544d9003beb11d8c46e802ab8d36fc98360405161083e919061107d565b60405180910390a26001805461085390611309565b80601f016020809104026020016040519081016040528092919081815260200182805461087f90611309565b80156108ca5780601f106108a1576101008083540402835291602001916108ca565b820191905f5260205f20905b8154815290600101906020018083116108ad57829003601f168201915b505050505090505b919050565b6040516313f8dceb60e31b815260206004820152601060248201526f1a5cd05c1c1c9bdd9959119bdc905b1b60821b60448201525f90606401610453565b61091d6109dd565b6001600160a01b0381166109825760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610453565b61098b81610c8f565b50565b6001600160a01b0381165f9081526008602052604081205460ff1615156001036109d65760405163904e928b60e01b81526001600160a01b0383166004820152602401610453565b505f919050565b5f546001600160a01b031633146106b75760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610453565b5f806003546001610a47919061150d565b90506001600160a01b038416610a72576040516374f5e87d60e01b81525f6004820152602401610453565b5f818152600460205260409020546001600160a01b031615610aaa576040516379a15ee160e11b815260048101829052602401610453565b6001600160a01b0384165f90815260076020526040902054610ade57600160025f828254610ad8919061150d565b90915550505b6001600160a01b0384165f81815260076020818152604080842080546001908101825560038054820190558786526004845282862080546001600160a01b03191688179055600584528286208a9055600684528286208190559585526009835290842092909152548493919291610b5491611520565b81526020019081526020015f20819055508281856001600160a01b03167f2f00e3cdd69a77be7ed215ec7b2a36784dd158f921fca79ac29deffa353fe6ee5f604051610baf91906001600160a01b0391909116815260200190565b60405180910390a4610bd15f858360405180602001604052805f815250610e43565b6105fa5760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b6064820152608401610453565b5f818152600460205260409020546001600160a01b0316610c6f576040516324476a3f60e01b815260048101829052602401610453565b5f81815260046020526040902054610713906001600160a01b031661098e565b5f80546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b610ce88282610ee5565b5f818152600660205260408082208290555182916001600160a01b038516917f154fa90f2d3692df165afacdcd7755b2e9d98a892a80cc1dda63f3a9cc1e64a49190a35050565b5f610d3a8383610ee5565b5f828152600660205260408120805460019290610d5890849061150d565b90915550505f8281526006602090815260409182902054915184815282916001600160a01b038716917f48ffd7fdb1c1a0561a2d410317f6bb839aab64898de6fc73ee703a9c0dc0a36c910160405180910390a39392505050565b60605f610dbf83610f29565b60010190505f8167ffffffffffffffff811115610dde57610dde611222565b6040519080825280601f01601f191660200182016040528015610e08576020820181803683370190505b5090508181016020015b5f19016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a8504945084610e1257509392505050565b5f833b610e5257506001610edd565b604051630a85bd0160e11b81525f906001600160a01b0386169063150b7a0290610e869033908a9089908990600401611533565b6020604051808303815f875af1158015610ea2573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610ec6919061156f565b6001600160e01b031916630a85bd0160e11b149150505b949350505050565b5f818152600460205260409020546001600160a01b0383811691161461071357604051635015929960e01b81526001600160a01b0383166004820152602401610453565b5f8072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b8310610f675772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef81000000008310610f93576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc100008310610fb157662386f26fc10000830492506010015b6305f5e1008310610fc9576305f5e100830492506008015b6127108310610fdd57612710830492506004015b60648310610fef576064830492506002015b600a83106104185760010192915050565b6001600160e01b03198116811461098b575f80fd5b5f60208284031215611025575f80fd5b81356105fa81611000565b5f5b8381101561104a578181015183820152602001611032565b50505f910152565b5f8151808452611069816020860160208601611030565b601f01601f19169290920160200192915050565b602081525f6105fa6020830184611052565b5f6020828403121561109f575f80fd5b5035919050565b80356001600160a01b03811681146108d2575f80fd5b5f80604083850312156110cd575f80fd5b6110d6836110a6565b946020939093013593505050565b803580151581146108d2575f80fd5b5f60208284031215611103575f80fd5b6105fa826110e4565b5f6020828403121561111c575f80fd5b6105fa826110a6565b5f805f60608486031215611137575f80fd5b611140846110a6565b925061114e602085016110a6565b9150604084013590509250925092565b5f806040838503121561116f575f80fd5b611178836110a6565b9150611186602084016110e4565b90509250929050565b5f805f805f608086880312156111a3575f80fd5b6111ac866110a6565b94506111ba602087016110a6565b935060408601359250606086013567ffffffffffffffff808211156111dd575f80fd5b818801915088601f8301126111f0575f80fd5b8135818111156111fe575f80fd5b89602082850101111561120f575f80fd5b9699959850939650602001949392505050565b634e487b7160e01b5f52604160045260245ffd5b5f60208284031215611246575f80fd5b813567ffffffffffffffff8082111561125d575f80fd5b818401915084601f830112611270575f80fd5b81358181111561128257611282611222565b604051601f8201601f19908116603f011681019083821181831017156112aa576112aa611222565b816040528281528760208487010111156112c2575f80fd5b826020860160208301375f928101602001929092525095945050505050565b5f80604083850312156112f2575f80fd5b6112fb836110a6565b9150611186602084016110a6565b600181811c9082168061131d57607f821691505b60208210810361133b57634e487b7160e01b5f52602260045260245ffd5b50919050565b5f80855461134e81611309565b60018281168015611366576001811461137b576113a7565b60ff19841687528215158302870194506113a7565b895f526020805f205f5b8581101561139e5781548a820152908401908201611385565b50505082870194505b5050505084516113bb818360208901611030565b6a3f746f6b656e547970653d60a81b910190815283516113e281600b840160208801611030565b01600b0195945050505050565b601f821115611438575f81815260208120601f850160051c810160208610156114155750805b601f850160051c820191505b8181101561143457828155600101611421565b5050505b505050565b815167ffffffffffffffff81111561145757611457611222565b61146b816114658454611309565b846113ef565b602080601f83116001811461149e575f84156114875750858301515b5f19600386901b1c1916600185901b178555611434565b5f85815260208120601f198616915b828110156114cc578886015182559484019460019091019084016114ad565b50858210156114e957878501515f19600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b5f52601160045260245ffd5b80820180821115610418576104186114f9565b81810381811115610418576104186114f9565b6001600160a01b03858116825284166020820152604081018390526080606082018190525f9061156590830184611052565b9695505050505050565b5f6020828403121561157f575f80fd5b81516105fa8161100056fea26469706673582212206f1c18825d3fab6e9e47f6e6bb10febec3d3a653d85f4372dc448eab8ab495e864736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x10 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1A07 CODESIZE SUB DUP1 PUSH3 0x1A07 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x33 SWAP2 PUSH3 0x147 JUMP JUMPDEST PUSH3 0x3E CALLER PUSH3 0xC0 JUMP JUMPDEST PUSH1 0x1 PUSH3 0x4C DUP3 DUP3 PUSH3 0x286 JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH1 0x6 DUP1 DUP3 MSTORE PUSH6 0x1213D394D095 PUSH1 0xD2 SHL PUSH1 0x20 DUP1 DUP5 ADD DUP3 SWAP1 MSTORE DUP5 MLOAD DUP1 DUP7 ADD DUP7 MSTORE SWAP3 DUP4 MSTORE DUP3 ADD MSTORE SWAP2 MLOAD CALLER SWAP3 PUSH32 0xDDB33C9627985605622B2C4E8B308152B557AEAE8BA59E2F05038C9D8ED6AE84 SWAP3 PUSH3 0xB1 SWAP3 TIMESTAMP SWAP3 SWAP1 PUSH1 0x1 SWAP1 PUSH3 0x37B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH3 0x439 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x13F JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH3 0x125 JUMP JUMPDEST POP POP PUSH0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x158 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x16F JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 DUP5 ADD SWAP2 POP DUP5 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x183 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH3 0x198 JUMPI PUSH3 0x198 PUSH3 0x10F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0x1C3 JUMPI PUSH3 0x1C3 PUSH3 0x10F JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP8 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH3 0x1DC JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH3 0x1EF DUP4 PUSH1 0x20 DUP4 ADD PUSH1 0x20 DUP9 ADD PUSH3 0x123 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x20F JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x22E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x281 JUMPI PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH3 0x25C JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x27D JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x268 JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x2A2 JUMPI PUSH3 0x2A2 PUSH3 0x10F JUMP JUMPDEST PUSH3 0x2BA DUP2 PUSH3 0x2B3 DUP5 SLOAD PUSH3 0x1FA JUMP JUMPDEST DUP5 PUSH3 0x234 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x2F0 JUMPI PUSH0 DUP5 ISZERO PUSH3 0x2D8 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH3 0x27D JUMP JUMPDEST PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x320 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH3 0x2FF JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH3 0x33E JUMPI DUP8 DUP6 ADD MLOAD PUSH0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH3 0x367 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH3 0x123 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP5 DUP2 MSTORE PUSH0 PUSH1 0x20 PUSH1 0x80 DUP2 DUP5 ADD MSTORE PUSH3 0x396 PUSH1 0x80 DUP5 ADD DUP8 PUSH3 0x34E JUMP JUMPDEST DUP4 DUP2 SUB PUSH1 0x40 DUP6 ADD MSTORE PUSH3 0x3AA DUP2 DUP8 PUSH3 0x34E JUMP JUMPDEST SWAP1 POP DUP4 DUP2 SUB PUSH1 0x60 DUP6 ADD MSTORE PUSH0 DUP6 SLOAD PUSH3 0x3C2 DUP2 PUSH3 0x1FA JUMP JUMPDEST DUP1 DUP5 MSTORE PUSH1 0x1 DUP3 DUP2 AND DUP1 ISZERO PUSH3 0x3E0 JUMPI PUSH1 0x1 DUP2 EQ PUSH3 0x3FB JUMPI PUSH3 0x428 JUMP JUMPDEST PUSH1 0xFF NOT DUP5 AND DUP7 DUP9 ADD MSTORE DUP3 ISZERO ISZERO PUSH1 0x5 SHL DUP7 ADD DUP8 ADD SWAP5 POP PUSH3 0x428 JUMP JUMPDEST DUP10 PUSH0 MSTORE DUP7 PUSH0 KECCAK256 PUSH0 JUMPDEST DUP5 DUP2 LT ISZERO PUSH3 0x420 JUMPI DUP2 SLOAD DUP9 DUP3 ADD DUP11 ADD MSTORE SWAP1 DUP4 ADD SWAP1 DUP9 ADD PUSH3 0x403 JUMP JUMPDEST DUP8 ADD DUP9 ADD SWAP6 POP POP JUMPDEST POP SWAP3 SWAP12 SWAP11 POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x15C0 DUP1 PUSH3 0x447 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1BB JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xF3 JUMPI DUP1 PUSH4 0xBE37E907 GT PUSH2 0x93 JUMPI DUP1 PUSH4 0xE0DF5B6F GT PUSH2 0x6E JUMPI DUP1 PUSH4 0xE0DF5B6F EQ PUSH2 0x3A7 JUMPI DUP1 PUSH4 0xE1604B70 EQ PUSH2 0x3BA JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x3C2 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x3D5 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xBE37E907 EQ PUSH2 0x36E JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x381 JUMPI DUP1 PUSH4 0xCE35DE95 EQ PUSH2 0x394 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x95D89B41 GT PUSH2 0xCE JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1E7 JUMPI DUP1 PUSH4 0x9B252852 EQ PUSH2 0x33A JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x34D JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x360 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x30F JUMPI DUP1 PUSH4 0x76AED2E1 EQ PUSH2 0x317 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x32A JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0x15E JUMPI DUP1 PUSH4 0x42842E0E GT PUSH2 0x139 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x2C3 JUMPI DUP1 PUSH4 0x51C18E0C EQ PUSH2 0x2D6 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x2E9 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2FC JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x23B872DD EQ PUSH2 0x28A JUMPI DUP1 PUSH4 0x2F745C59 EQ PUSH2 0x29D JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x2B0 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x95EA7B3 GT PUSH2 0x199 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x23D JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x252 JUMPI DUP1 PUSH4 0x1C02BC31 EQ PUSH2 0x264 JUMPI DUP1 PUSH4 0x1F8EB677 EQ PUSH2 0x277 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x1BF JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1E7 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x212 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1D2 PUSH2 0x1CD CALLDATASIZE PUSH1 0x4 PUSH2 0x1015 JUMP JUMPDEST PUSH2 0x3E8 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x6 DUP2 MSTORE PUSH6 0x1213D394D095 PUSH1 0xD2 SHL PUSH1 0x20 DUP3 ADD MSTORE JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DE SWAP2 SWAP1 PUSH2 0x107D JUMP JUMPDEST PUSH2 0x225 PUSH2 0x220 CALLDATASIZE PUSH1 0x4 PUSH2 0x108F JUMP JUMPDEST PUSH2 0x41E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1DE JUMP JUMPDEST PUSH2 0x250 PUSH2 0x24B CALLDATASIZE PUSH1 0x4 PUSH2 0x10BC JUMP JUMPDEST PUSH2 0x45C JUMP JUMPDEST STOP JUMPDEST PUSH1 0x3 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1DE JUMP JUMPDEST PUSH2 0x1D2 PUSH2 0x272 CALLDATASIZE PUSH1 0x4 PUSH2 0x10F3 JUMP JUMPDEST PUSH2 0x48F JUMP JUMPDEST PUSH2 0x1D2 PUSH2 0x285 CALLDATASIZE PUSH1 0x4 PUSH2 0x110C JUMP JUMPDEST PUSH2 0x4DE JUMP JUMPDEST PUSH2 0x250 PUSH2 0x298 CALLDATASIZE PUSH1 0x4 PUSH2 0x1125 JUMP JUMPDEST PUSH2 0x4FE JUMP JUMPDEST PUSH2 0x256 PUSH2 0x2AB CALLDATASIZE PUSH1 0x4 PUSH2 0x10BC JUMP JUMPDEST PUSH2 0x536 JUMP JUMPDEST PUSH2 0x256 PUSH2 0x2BE CALLDATASIZE PUSH1 0x4 PUSH2 0x10BC JUMP JUMPDEST PUSH2 0x5E7 JUMP JUMPDEST PUSH2 0x250 PUSH2 0x2D1 CALLDATASIZE PUSH1 0x4 PUSH2 0x1125 JUMP JUMPDEST PUSH2 0x601 JUMP JUMPDEST PUSH2 0x256 PUSH2 0x2E4 CALLDATASIZE PUSH1 0x4 PUSH2 0x108F JUMP JUMPDEST PUSH2 0x63D JUMP JUMPDEST PUSH2 0x225 PUSH2 0x2F7 CALLDATASIZE PUSH1 0x4 PUSH2 0x108F JUMP JUMPDEST PUSH2 0x659 JUMP JUMPDEST PUSH2 0x256 PUSH2 0x30A CALLDATASIZE PUSH1 0x4 PUSH2 0x110C JUMP JUMPDEST PUSH2 0x67E JUMP JUMPDEST PUSH2 0x250 PUSH2 0x6A6 JUMP JUMPDEST PUSH2 0x256 PUSH2 0x325 CALLDATASIZE PUSH1 0x4 PUSH2 0x108F JUMP JUMPDEST PUSH2 0x6B9 JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x225 JUMP JUMPDEST PUSH2 0x250 PUSH2 0x348 CALLDATASIZE PUSH1 0x4 PUSH2 0x10BC JUMP JUMPDEST PUSH2 0x6D5 JUMP JUMPDEST PUSH2 0x250 PUSH2 0x35B CALLDATASIZE PUSH1 0x4 PUSH2 0x115E JUMP JUMPDEST PUSH2 0x717 JUMP JUMPDEST PUSH2 0x250 PUSH2 0x2D1 CALLDATASIZE PUSH1 0x4 PUSH2 0x118F JUMP JUMPDEST PUSH2 0x256 PUSH2 0x37C CALLDATASIZE PUSH1 0x4 PUSH2 0x10BC JUMP JUMPDEST PUSH2 0x754 JUMP JUMPDEST PUSH2 0x205 PUSH2 0x38F CALLDATASIZE PUSH1 0x4 PUSH2 0x108F JUMP JUMPDEST PUSH2 0x767 JUMP JUMPDEST PUSH2 0x1D2 PUSH2 0x3A2 CALLDATASIZE PUSH1 0x4 PUSH2 0x110C JUMP JUMPDEST PUSH2 0x7E4 JUMP JUMPDEST PUSH2 0x205 PUSH2 0x3B5 CALLDATASIZE PUSH1 0x4 PUSH2 0x1236 JUMP JUMPDEST PUSH2 0x7EE JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x256 JUMP JUMPDEST PUSH2 0x1D2 PUSH2 0x3D0 CALLDATASIZE PUSH1 0x4 PUSH2 0x12E1 JUMP JUMPDEST PUSH2 0x8D7 JUMP JUMPDEST PUSH2 0x250 PUSH2 0x3E3 CALLDATASIZE PUSH1 0x4 PUSH2 0x110C JUMP JUMPDEST PUSH2 0x915 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x80AC58CD PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x418 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x13F8DCEB PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x19D95D105C1C1C9BDD9959 PUSH1 0xAA SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH0 SWAP1 PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x13F8DCEB PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x7 PUSH1 0x24 DUP3 ADD MSTORE PUSH7 0x617070726F7665 PUSH1 0xC8 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x453 JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP2 LT PUSH2 0x4BF JUMPI PUSH1 0x40 MLOAD PUSH4 0x50159299 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x453 JUMP JUMPDEST CALLER PUSH0 DUP2 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP5 ISZERO ISZERO OR SWAP1 SSTORE PUSH2 0x418 SWAP1 JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x418 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x13F8DCEB PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x7472616E7366657246726F6D PUSH1 0xA0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x453 JUMP JUMPDEST PUSH0 PUSH2 0x540 DUP4 PUSH2 0x98E JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP3 LT PUSH2 0x596 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x9EEAE840DECC4092DCC8CAF PUSH1 0xA3 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x453 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x5BF JUMPI PUSH1 0x40 MLOAD PUSH4 0x74F5E87D PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x453 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x5F0 PUSH2 0x9DD JUMP JUMPDEST PUSH2 0x5FA DUP4 DUP4 PUSH2 0xA36 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x13F8DCEB PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x736166655472616E7366657246726F6D PUSH1 0x80 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x453 JUMP JUMPDEST PUSH0 PUSH2 0x647 DUP3 PUSH2 0xC38 JUMP JUMPDEST POP PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x663 DUP3 PUSH2 0xC38 JUMP JUMPDEST POP PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x688 DUP3 PUSH2 0x98E JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x418 JUMP JUMPDEST PUSH2 0x6AE PUSH2 0x9DD JUMP JUMPDEST PUSH2 0x6B7 PUSH0 PUSH2 0xC8F JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH2 0x6C3 DUP3 PUSH2 0xC38 JUMP JUMPDEST POP PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND EQ PUSH2 0x709 JUMPI PUSH1 0x40 MLOAD PUSH4 0x50159299 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x453 JUMP JUMPDEST PUSH2 0x713 DUP3 DUP3 PUSH2 0xCDE JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x13F8DCEB PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x1CD95D105C1C1C9BDD985B119BDC905B1B PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x453 JUMP JUMPDEST PUSH0 PUSH2 0x75D PUSH2 0x9DD JUMP JUMPDEST PUSH2 0x5FA DUP4 DUP4 PUSH2 0xD2F JUMP JUMPDEST PUSH1 0x60 PUSH2 0x772 DUP3 PUSH2 0xC38 JUMP JUMPDEST PUSH0 PUSH1 0x1 DUP1 SLOAD PUSH2 0x780 SWAP1 PUSH2 0x1309 JUMP JUMPDEST SWAP1 POP GT PUSH2 0x79B JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x418 JUMP JUMPDEST PUSH1 0x1 PUSH2 0x7A6 DUP4 PUSH2 0xDB3 JUMP JUMPDEST PUSH0 DUP5 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x7BD SWAP1 PUSH2 0xDB3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x7CF SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1341 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x418 DUP3 PUSH2 0x98E JUMP JUMPDEST PUSH1 0x60 PUSH2 0x7F8 PUSH2 0x9DD JUMP JUMPDEST PUSH1 0x1 PUSH2 0x804 DUP4 DUP3 PUSH2 0x143D JUMP JUMPDEST POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x70E6A9DC20D331CE8E747D7DE8444F26F544D9003BEB11D8C46E802AB8D36FC9 DUP4 PUSH1 0x40 MLOAD PUSH2 0x83E SWAP2 SWAP1 PUSH2 0x107D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x1 DUP1 SLOAD PUSH2 0x853 SWAP1 PUSH2 0x1309 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x87F SWAP1 PUSH2 0x1309 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x8CA JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x8A1 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x8CA JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x8AD JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x13F8DCEB PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x1A5CD05C1C1C9BDD9959119BDC905B1B PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH0 SWAP1 PUSH1 0x64 ADD PUSH2 0x453 JUMP JUMPDEST PUSH2 0x91D PUSH2 0x9DD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x982 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x453 JUMP JUMPDEST PUSH2 0x98B DUP2 PUSH2 0xC8F JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 SUB PUSH2 0x9D6 JUMPI PUSH1 0x40 MLOAD PUSH4 0x904E928B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x453 JUMP JUMPDEST POP PUSH0 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x6B7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x453 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x3 SLOAD PUSH1 0x1 PUSH2 0xA47 SWAP2 SWAP1 PUSH2 0x150D JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xA72 JUMPI PUSH1 0x40 MLOAD PUSH4 0x74F5E87D PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x453 JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0xAAA JUMPI PUSH1 0x40 MLOAD PUSH4 0x79A15EE1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x453 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xADE JUMPI PUSH1 0x1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xAD8 SWAP2 SWAP1 PUSH2 0x150D JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP1 DUP2 ADD DUP3 SSTORE PUSH1 0x3 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE DUP8 DUP7 MSTORE PUSH1 0x4 DUP5 MSTORE DUP3 DUP7 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP9 OR SWAP1 SSTORE PUSH1 0x5 DUP5 MSTORE DUP3 DUP7 KECCAK256 DUP11 SWAP1 SSTORE PUSH1 0x6 DUP5 MSTORE DUP3 DUP7 KECCAK256 DUP2 SWAP1 SSTORE SWAP6 DUP6 MSTORE PUSH1 0x9 DUP4 MSTORE SWAP1 DUP5 KECCAK256 SWAP3 SWAP1 SWAP2 MSTORE SLOAD DUP5 SWAP4 SWAP2 SWAP3 SWAP2 PUSH2 0xB54 SWAP2 PUSH2 0x1520 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 DUP2 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x2F00E3CDD69A77BE7ED215EC7B2A36784DD158F921FCA79AC29DEFFA353FE6EE PUSH0 PUSH1 0x40 MLOAD PUSH2 0xBAF SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xBD1 PUSH0 DUP6 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0xE43 JUMP JUMPDEST PUSH2 0x5FA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x32 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x44 DUP3 ADD MSTORE PUSH18 0x31B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x71 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x453 JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xC6F JUMPI PUSH1 0x40 MLOAD PUSH4 0x24476A3F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x453 JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x713 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x98E JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0xCE8 DUP3 DUP3 PUSH2 0xEE5 JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP3 SWAP1 SSTORE MLOAD DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP2 PUSH32 0x154FA90F2D3692DF165AFACDCD7755B2E9D98A892A80CC1DDA63F3A9CC1E64A4 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xD3A DUP4 DUP4 PUSH2 0xEE5 JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0xD58 SWAP1 DUP5 SWAP1 PUSH2 0x150D JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SLOAD SWAP2 MLOAD DUP5 DUP2 MSTORE DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP2 PUSH32 0x48FFD7FDB1C1A0561A2D410317F6BB839AAB64898DE6FC73EE703A9C0DC0A36C SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH2 0xDBF DUP4 PUSH2 0xF29 JUMP JUMPDEST PUSH1 0x1 ADD SWAP1 POP PUSH0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xDDE JUMPI PUSH2 0xDDE PUSH2 0x1222 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xE08 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 ADD PUSH1 0x20 ADD JUMPDEST PUSH0 NOT ADD PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DIV SWAP5 POP DUP5 PUSH2 0xE12 JUMPI POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP4 EXTCODESIZE PUSH2 0xE52 JUMPI POP PUSH1 0x1 PUSH2 0xEDD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0xE86 SWAP1 CALLER SWAP1 DUP11 SWAP1 DUP10 SWAP1 DUP10 SWAP1 PUSH1 0x4 ADD PUSH2 0x1533 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xEA2 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xEC6 SWAP2 SWAP1 PUSH2 0x156F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ SWAP2 POP POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP2 AND EQ PUSH2 0x713 JUMPI PUSH1 0x40 MLOAD PUSH4 0x50159299 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x453 JUMP JUMPDEST PUSH0 DUP1 PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 LT PUSH2 0xF67 JUMPI PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 DIV SWAP3 POP PUSH1 0x40 ADD JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0xF93 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DIV SWAP3 POP PUSH1 0x20 ADD JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0xFB1 JUMPI PUSH7 0x2386F26FC10000 DUP4 DIV SWAP3 POP PUSH1 0x10 ADD JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0xFC9 JUMPI PUSH4 0x5F5E100 DUP4 DIV SWAP3 POP PUSH1 0x8 ADD JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0xFDD JUMPI PUSH2 0x2710 DUP4 DIV SWAP3 POP PUSH1 0x4 ADD JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0xFEF JUMPI PUSH1 0x64 DUP4 DIV SWAP3 POP PUSH1 0x2 ADD JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x418 JUMPI PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x98B JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1025 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x5FA DUP2 PUSH2 0x1000 JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x104A JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1032 JUMP JUMPDEST POP POP PUSH0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x1069 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x1030 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 PUSH2 0x5FA PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1052 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x109F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x8D2 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x10CD JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x10D6 DUP4 PUSH2 0x10A6 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x8D2 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1103 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x5FA DUP3 PUSH2 0x10E4 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x111C JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x5FA DUP3 PUSH2 0x10A6 JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1137 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1140 DUP5 PUSH2 0x10A6 JUMP JUMPDEST SWAP3 POP PUSH2 0x114E PUSH1 0x20 DUP6 ADD PUSH2 0x10A6 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x116F JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1178 DUP4 PUSH2 0x10A6 JUMP JUMPDEST SWAP2 POP PUSH2 0x1186 PUSH1 0x20 DUP5 ADD PUSH2 0x10E4 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0x80 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x11A3 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x11AC DUP7 PUSH2 0x10A6 JUMP JUMPDEST SWAP5 POP PUSH2 0x11BA PUSH1 0x20 DUP8 ADD PUSH2 0x10A6 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x11DD JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 DUP9 ADD SWAP2 POP DUP9 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x11F0 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x11FE JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP10 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x120F JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP7 SWAP10 SWAP6 SWAP9 POP SWAP4 SWAP7 POP PUSH1 0x20 ADD SWAP5 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1246 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x125D JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 DUP5 ADD SWAP2 POP DUP5 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1270 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x1282 JUMPI PUSH2 0x1282 PUSH2 0x1222 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x12AA JUMPI PUSH2 0x12AA PUSH2 0x1222 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP8 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x12C2 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH0 SWAP3 DUP2 ADD PUSH1 0x20 ADD SWAP3 SWAP1 SWAP3 MSTORE POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x12F2 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x12FB DUP4 PUSH2 0x10A6 JUMP JUMPDEST SWAP2 POP PUSH2 0x1186 PUSH1 0x20 DUP5 ADD PUSH2 0x10A6 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x131D JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x133B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 DUP6 SLOAD PUSH2 0x134E DUP2 PUSH2 0x1309 JUMP JUMPDEST PUSH1 0x1 DUP3 DUP2 AND DUP1 ISZERO PUSH2 0x1366 JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x137B JUMPI PUSH2 0x13A7 JUMP JUMPDEST PUSH1 0xFF NOT DUP5 AND DUP8 MSTORE DUP3 ISZERO ISZERO DUP4 MUL DUP8 ADD SWAP5 POP PUSH2 0x13A7 JUMP JUMPDEST DUP10 PUSH0 MSTORE PUSH1 0x20 DUP1 PUSH0 KECCAK256 PUSH0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x139E JUMPI DUP2 SLOAD DUP11 DUP3 ADD MSTORE SWAP1 DUP5 ADD SWAP1 DUP3 ADD PUSH2 0x1385 JUMP JUMPDEST POP POP POP DUP3 DUP8 ADD SWAP5 POP JUMPDEST POP POP POP POP DUP5 MLOAD PUSH2 0x13BB DUP2 DUP4 PUSH1 0x20 DUP10 ADD PUSH2 0x1030 JUMP JUMPDEST PUSH11 0x3F746F6B656E547970653D PUSH1 0xA8 SHL SWAP2 ADD SWAP1 DUP2 MSTORE DUP4 MLOAD PUSH2 0x13E2 DUP2 PUSH1 0xB DUP5 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x1030 JUMP JUMPDEST ADD PUSH1 0xB ADD SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x1438 JUMPI PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH2 0x1415 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1434 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1421 JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1457 JUMPI PUSH2 0x1457 PUSH2 0x1222 JUMP JUMPDEST PUSH2 0x146B DUP2 PUSH2 0x1465 DUP5 SLOAD PUSH2 0x1309 JUMP JUMPDEST DUP5 PUSH2 0x13EF JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x149E JUMPI PUSH0 DUP5 ISZERO PUSH2 0x1487 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0x1434 JUMP JUMPDEST PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x14CC JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x14AD JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x14E9 JUMPI DUP8 DUP6 ADD MLOAD PUSH0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x418 JUMPI PUSH2 0x418 PUSH2 0x14F9 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x418 JUMPI PUSH2 0x418 PUSH2 0x14F9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH0 SWAP1 PUSH2 0x1565 SWAP1 DUP4 ADD DUP5 PUSH2 0x1052 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x157F JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x5FA DUP2 PUSH2 0x1000 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH16 0x1C18825D3FAB6E9E47F6E6BB10FEBEC3 0xD3 0xA6 MSTORE8 0xD8 PUSH0 NUMBER PUSH19 0xDC448EAB8AB495E864736F6C63430008140033 ",
							"sourceMap": "791:11813:9:-:0;;;2027:142;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;936:32:0;719:10:3;936:18:0;:32::i;:::-;2069:4:9;:11;2076:4;2069;:11;:::i;:::-;-1:-1:-1;2141:5:9;;;;;;;;;;;;-1:-1:-1;;;2141:5:9;;;;;;;2148:7;;;;;;;;;;;;;2096:66;;2112:10;;2096:66;;;;2124:15;;2148:7;2157:4;;2096:66;:::i;:::-;;;;;;;;2027:142;791:11813;;2426:187:0;2499:16;2518:6;;-1:-1:-1;;;;;2534:17:0;;;-1:-1:-1;;;;;;2534:17:0;;;;;;2566:40;;2518:6;;;;;;;2566:40;;2499:16;2566:40;2489:124;2426:187;:::o;14:127:14:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:250;231:1;241:113;255:6;252:1;249:13;241:113;;;331:11;;;325:18;312:11;;;305:39;277:2;270:10;241:113;;;-1:-1:-1;;388:1:14;370:16;;363:27;146:250::o;401:897::-;481:6;534:2;522:9;513:7;509:23;505:32;502:52;;;550:1;547;540:12;502:52;577:16;;-1:-1:-1;;;;;642:14:14;;;639:34;;;669:1;666;659:12;639:34;707:6;696:9;692:22;682:32;;752:7;745:4;741:2;737:13;733:27;723:55;;774:1;771;764:12;723:55;803:2;797:9;825:2;821;818:10;815:36;;;831:18;;:::i;:::-;906:2;900:9;874:2;960:13;;-1:-1:-1;;956:22:14;;;980:2;952:31;948:40;936:53;;;1004:18;;;1024:22;;;1001:46;998:72;;;1050:18;;:::i;:::-;1090:10;1086:2;1079:22;1125:2;1117:6;1110:18;1165:7;1160:2;1155;1151;1147:11;1143:20;1140:33;1137:53;;;1186:1;1183;1176:12;1137:53;1199:68;1264:2;1259;1251:6;1247:15;1242:2;1238;1234:11;1199:68;:::i;:::-;1286:6;401:897;-1:-1:-1;;;;;;;401:897:14:o;1303:380::-;1382:1;1378:12;;;;1425;;;1446:61;;1500:4;1492:6;1488:17;1478:27;;1446:61;1553:2;1545:6;1542:14;1522:18;1519:38;1516:161;;1599:10;1594:3;1590:20;1587:1;1580:31;1634:4;1631:1;1624:15;1662:4;1659:1;1652:15;1516:161;;1303:380;;;:::o;1814:545::-;1916:2;1911:3;1908:11;1905:448;;;1952:1;1977:5;1973:2;1966:17;2022:4;2018:2;2008:19;2092:2;2080:10;2076:19;2073:1;2069:27;2063:4;2059:38;2128:4;2116:10;2113:20;2110:47;;;-1:-1:-1;2151:4:14;2110:47;2206:2;2201:3;2197:12;2194:1;2190:20;2184:4;2180:31;2170:41;;2261:82;2279:2;2272:5;2269:13;2261:82;;;2324:17;;;2305:1;2294:13;2261:82;;;2265:3;;;1905:448;1814:545;;;:::o;2535:1352::-;2655:10;;-1:-1:-1;;;;;2677:30:14;;2674:56;;;2710:18;;:::i;:::-;2739:97;2829:6;2789:38;2821:4;2815:11;2789:38;:::i;:::-;2783:4;2739:97;:::i;:::-;2891:4;;2955:2;2944:14;;2972:1;2967:663;;;;3674:1;3691:6;3688:89;;;-1:-1:-1;3743:19:14;;;3737:26;3688:89;-1:-1:-1;;2492:1:14;2488:11;;;2484:24;2480:29;2470:40;2516:1;2512:11;;;2467:57;3790:81;;2937:944;;2967:663;1761:1;1754:14;;;1798:4;1785:18;;-1:-1:-1;;3003:20:14;;;3121:236;3135:7;3132:1;3129:14;3121:236;;;3224:19;;;3218:26;3203:42;;3316:27;;;;3284:1;3272:14;;;;3151:19;;3121:236;;;3125:3;3385:6;3376:7;3373:19;3370:201;;;3446:19;;;3440:26;-1:-1:-1;;3529:1:14;3525:14;;;3541:3;3521:24;3517:37;3513:42;3498:58;3483:74;;3370:201;-1:-1:-1;;;;;3617:1:14;3601:14;;;3597:22;3584:36;;-1:-1:-1;2535:1352:14:o;3892:271::-;3934:3;3972:5;3966:12;3999:6;3994:3;3987:19;4015:76;4084:6;4077:4;4072:3;4068:14;4061:4;4054:5;4050:16;4015:76;:::i;:::-;4145:2;4124:15;-1:-1:-1;;4120:29:14;4111:39;;;;4152:4;4107:50;;3892:271;-1:-1:-1;;3892:271:14:o;4168:1329::-;4438:6;4427:9;4420:25;4401:4;4464:2;4502:3;4497:2;4486:9;4482:18;4475:31;4529:46;4570:3;4559:9;4555:19;4547:6;4529:46;:::i;:::-;4623:9;4615:6;4611:22;4606:2;4595:9;4591:18;4584:50;4657:33;4683:6;4675;4657:33;:::i;:::-;4643:47;;4738:9;4730:6;4726:22;4721:2;4710:9;4706:18;4699:50;4769:1;4802:6;4796:13;4832:36;4858:9;4832:36;:::i;:::-;4877:22;;;4918:1;4935:18;;;4962:152;;;;5128:1;5123:348;;;;4928:543;;4962:152;-1:-1:-1;;5007:24:14;;4990:15;;;4983:49;5082:14;;5075:22;5072:1;5068:30;5056:43;;5052:52;;;-1:-1:-1;4962:152:14;;5123:348;5154:6;5151:1;5144:17;5202:2;5199:1;5189:16;5227:1;5241:177;5255:6;5252:1;5249:13;5241:177;;;5345:14;;5324;;;5320:23;;5313:47;5388:16;;;;5270:10;;5241:177;;;5442:14;;5438:23;;;-1:-1:-1;;4928:543:14;-1:-1:-1;5488:3:14;;4168:1329;-1:-1:-1;;;;;;;;;;;4168:1329:14:o;:::-;791:11813:9;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_balanceOf_1902": {
									"entryPoint": null,
									"id": 1902,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_checkOnERC721Received_2386": {
									"entryPoint": 3651,
									"id": 2386,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@_checkOwner_54": {
									"entryPoint": 2525,
									"id": 54,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_existsOwner_2225": {
									"entryPoint": null,
									"id": 2225,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_exists_2211": {
									"entryPoint": null,
									"id": 2211,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_getProtected_1789": {
									"entryPoint": null,
									"id": 1789,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_growUp_2277": {
									"entryPoint": 3375,
									"id": 2277,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_isProtectedTokenId_1843": {
									"entryPoint": 3128,
									"id": 1843,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_isProtected_1821": {
									"entryPoint": 2446,
									"id": 1821,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_msgSender_258": {
									"entryPoint": null,
									"id": 258,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_ownerOf_1874": {
									"entryPoint": null,
									"id": 1874,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_requireMintedOf_2346": {
									"entryPoint": 3813,
									"id": 2346,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_safeMint_2130": {
									"entryPoint": 2614,
									"id": 2130,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_setGrowthToZero_2177": {
									"entryPoint": 3294,
									"id": 2177,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transferOwnership_111": {
									"entryPoint": 3215,
									"id": 111,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@approve_1959": {
									"entryPoint": 1116,
									"id": 1959,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@balanceOf_1890": {
									"entryPoint": 1662,
									"id": 1890,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getApproved_1983": {
									"entryPoint": 1054,
									"id": 1983,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getGrowth_2193": {
									"entryPoint": 1597,
									"id": 2193,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getProtected_1777": {
									"entryPoint": 1246,
									"id": 1777,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getTokenType_1730": {
									"entryPoint": 1721,
									"id": 1730,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@growUp_2242": {
									"entryPoint": 1876,
									"id": 2242,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@isApprovedForAll_1997": {
									"entryPoint": 2263,
									"id": 1997,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@isContract_2402": {
									"entryPoint": null,
									"id": 2402,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isProtected_1801": {
									"entryPoint": 2020,
									"id": 1801,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@log10_1236": {
									"entryPoint": 3881,
									"id": 1236,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@mint_2014": {
									"entryPoint": 1511,
									"id": 2014,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@name_1629": {
									"entryPoint": null,
									"id": 1629,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@ownerOf_1861": {
									"entryPoint": 1625,
									"id": 1861,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@owner_40": {
									"entryPoint": null,
									"id": 40,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_68": {
									"entryPoint": 1702,
									"id": 68,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@reset_2153": {
									"entryPoint": 1749,
									"id": 2153,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@safeTransferFrom_1919": {
									"entryPoint": null,
									"id": 1919,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@safeTransferFrom_1933": {
									"entryPoint": 1537,
									"id": 1933,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@setApprovalForAll_1971": {
									"entryPoint": 1815,
									"id": 1971,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@setProtected_1765": {
									"entryPoint": 1167,
									"id": 1765,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@setTokenURI_1698": {
									"entryPoint": 2030,
									"id": 1698,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_1621": {
									"entryPoint": 1000,
									"id": 1621,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_520": {
									"entryPoint": null,
									"id": 520,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@symbol_1637": {
									"entryPoint": null,
									"id": 1637,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@toString_327": {
									"entryPoint": 3507,
									"id": 327,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@tokenOfOwnerByIndex_2326": {
									"entryPoint": 1334,
									"id": 2326,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@tokenURI_1676": {
									"entryPoint": 1895,
									"id": 1676,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@totalSupply_1714": {
									"entryPoint": null,
									"id": 1714,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalUser_1706": {
									"entryPoint": null,
									"id": 1706,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_1947": {
									"entryPoint": 1278,
									"id": 1947,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@transferOwnership_91": {
									"entryPoint": 2325,
									"id": 91,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_address": {
									"entryPoint": 4262,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_bool": {
									"entryPoint": 4324,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 4364,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 4833,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 4389,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_calldata_ptr": {
									"entryPoint": 4495,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 4446,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 4284,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool": {
									"entryPoint": 4339,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 4117,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 5487,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptr": {
									"entryPoint": 4662,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 4239,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_string": {
									"entryPoint": 4178,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_string_storage_t_string_memory_ptr_t_stringliteral_1b93835a866fd99c0445b12e9173965af6f17da5913478ef85289575b751276a_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 4929,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 5427,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4221,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_08b180e2fe9f14914416216da76338ac0beb980443725c802af615f8431fdb1e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0c41b033f4a31df8067c24d1e9b550a2ce75fd4a29e1147af9752174f0e6cb20__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_5219209e083275171774dab1df80982e9df2096516f06319c5c6d71ae0a8480c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_921cdf9aedfed41bc4485ae779fda471feca12075d9127a0fc70ac6b3b3d9c30__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_bad4c8ea4c8fb9f571d1f6f9b7692fff8e5ceaf73b1df98e7da8c1109b39ae9a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_be78c1e9355992416a0dec4eab01ee588f3bd64dda46cc63c159dc4dddd83f4e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c59d59d013d4aa1a8b1ce4c8299086f070733b453c02d0dc46e735edc04d6444__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 5389,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 5408,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 5103,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 5181,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 4144,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 4873,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 5369,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 4642,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_bytes4": {
									"entryPoint": 4096,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:14459:14",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:14",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "58:87:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "123:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "132:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "135:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "125:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "125:12:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "125:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "81:5:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "92:5:14"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "103:3:14",
																								"type": "",
																								"value": "224"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "108:10:14",
																								"type": "",
																								"value": "0xffffffff"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "99:3:14"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "99:20:14"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "88:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "88:32:14"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "78:2:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "78:43:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "71:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "71:51:14"
															},
															"nodeType": "YulIf",
															"src": "68:71:14"
														}
													]
												},
												"name": "validator_revert_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "47:5:14",
														"type": ""
													}
												],
												"src": "14:131:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "219:176:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "265:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "274:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "277:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "267:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "267:12:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "267:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "240:7:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "249:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "236:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "236:23:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "261:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "232:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "232:32:14"
															},
															"nodeType": "YulIf",
															"src": "229:52:14"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "290:36:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "316:9:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "303:12:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "303:23:14"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "294:5:14",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "359:5:14"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "335:23:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "335:30:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "335:30:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "374:15:14",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "384:5:14"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "374:6:14"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "185:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "196:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "208:6:14",
														"type": ""
													}
												],
												"src": "150:245:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "495:92:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "505:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "517:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "528:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "513:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "513:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "505:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "547:9:14"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "572:6:14"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "565:6:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "565:14:14"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "558:6:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "558:22:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "540:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "540:41:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "540:41:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "464:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "475:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "486:4:14",
														"type": ""
													}
												],
												"src": "400:187:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "658:184:14",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "668:10:14",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "677:1:14",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "672:1:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "737:63:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "762:3:14"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "767:1:14"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "758:3:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "758:11:14"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "781:3:14"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "786:1:14"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "777:3:14"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "777:11:14"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "771:5:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "771:18:14"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "751:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "751:39:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "751:39:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "698:1:14"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "701:6:14"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "695:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "695:13:14"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "709:19:14",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "711:15:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "720:1:14"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "723:2:14",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "716:3:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "716:10:14"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "711:1:14"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "691:3:14",
																"statements": []
															},
															"src": "687:113:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "820:3:14"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "825:6:14"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "816:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "816:16:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "834:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "809:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "809:27:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "809:27:14"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "636:3:14",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "641:3:14",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "646:6:14",
														"type": ""
													}
												],
												"src": "592:250:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "897:221:14",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "907:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "927:5:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "921:5:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "921:12:14"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "911:6:14",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "949:3:14"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "954:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "942:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "942:19:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "942:19:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1009:5:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1016:4:14",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1005:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1005:16:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "1027:3:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1032:4:14",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1023:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1023:14:14"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1039:6:14"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "970:34:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "970:76:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "970:76:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1055:57:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "1070:3:14"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "1083:6:14"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1091:2:14",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "1079:3:14"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1079:15:14"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1100:2:14",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "1096:3:14"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1096:7:14"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "1075:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1075:29:14"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1066:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1066:39:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1107:4:14",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1062:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1062:50:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1055:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_string",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "874:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "881:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "889:3:14",
														"type": ""
													}
												],
												"src": "847:271:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1244:99:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1261:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1272:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1254:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1254:21:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1254:21:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1284:53:14",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1310:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1322:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1333:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1318:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1318:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nodeType": "YulIdentifier",
																	"src": "1292:17:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1292:45:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1284:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1213:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1224:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1235:4:14",
														"type": ""
													}
												],
												"src": "1123:220:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1418:110:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1464:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1473:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1476:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1466:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1466:12:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1466:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1439:7:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1448:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1435:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1435:23:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1460:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1431:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1431:32:14"
															},
															"nodeType": "YulIf",
															"src": "1428:52:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1489:33:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1512:9:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1499:12:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1499:23:14"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1489:6:14"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1384:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1395:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1407:6:14",
														"type": ""
													}
												],
												"src": "1348:180:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1634:102:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1644:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1656:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1667:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1652:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1652:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1644:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1686:9:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1701:6:14"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1717:3:14",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1722:1:14",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "1713:3:14"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1713:11:14"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1726:1:14",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "1709:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1709:19:14"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1697:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1697:32:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1679:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1679:51:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1679:51:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1603:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1614:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1625:4:14",
														"type": ""
													}
												],
												"src": "1533:203:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1790:124:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1800:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1822:6:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1809:12:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1809:20:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1800:5:14"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1892:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1901:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1904:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1894:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1894:12:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1894:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1851:5:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1862:5:14"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1877:3:14",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1882:1:14",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "1873:3:14"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "1873:11:14"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1886:1:14",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "1869:3:14"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1869:19:14"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "1858:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1858:31:14"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1848:2:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1848:42:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1841:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1841:50:14"
															},
															"nodeType": "YulIf",
															"src": "1838:70:14"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1769:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1780:5:14",
														"type": ""
													}
												],
												"src": "1741:173:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2006:167:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2052:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2061:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2064:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2054:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2054:12:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2054:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2027:7:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2036:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2023:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2023:23:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2048:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2019:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2019:32:14"
															},
															"nodeType": "YulIf",
															"src": "2016:52:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2077:39:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2106:9:14"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2087:18:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2087:29:14"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2077:6:14"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2125:42:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2152:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2163:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2148:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2148:18:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2135:12:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2135:32:14"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2125:6:14"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1964:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1975:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1987:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1995:6:14",
														"type": ""
													}
												],
												"src": "1919:254:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2279:76:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2289:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2301:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2312:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2297:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2297:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2289:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2331:9:14"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2342:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2324:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2324:25:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2324:25:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2248:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2259:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2270:4:14",
														"type": ""
													}
												],
												"src": "2178:177:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2406:114:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2416:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2438:6:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2425:12:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2425:20:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2416:5:14"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2498:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2507:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2510:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2500:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2500:12:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2500:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2467:5:14"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "2488:5:14"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "2481:6:14"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2481:13:14"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "2474:6:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2474:21:14"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2464:2:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2464:32:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2457:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2457:40:14"
															},
															"nodeType": "YulIf",
															"src": "2454:60:14"
														}
													]
												},
												"name": "abi_decode_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2385:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2396:5:14",
														"type": ""
													}
												],
												"src": "2360:160:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2592:113:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2638:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2647:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2650:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2640:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2640:12:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2640:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2613:7:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2622:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2609:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2609:23:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2634:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2605:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2605:32:14"
															},
															"nodeType": "YulIf",
															"src": "2602:52:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2663:36:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2689:9:14"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bool",
																	"nodeType": "YulIdentifier",
																	"src": "2673:15:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2673:26:14"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2663:6:14"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2558:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2569:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2581:6:14",
														"type": ""
													}
												],
												"src": "2525:180:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2780:116:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2826:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2835:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2838:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2828:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2828:12:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2828:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2801:7:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2810:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2797:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2797:23:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2822:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2793:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2793:32:14"
															},
															"nodeType": "YulIf",
															"src": "2790:52:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2851:39:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2880:9:14"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2861:18:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2861:29:14"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2851:6:14"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2746:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2757:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2769:6:14",
														"type": ""
													}
												],
												"src": "2710:186:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3005:224:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3051:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3060:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3063:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3053:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3053:12:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3053:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3026:7:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3035:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3022:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3022:23:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3047:2:14",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3018:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "3018:32:14"
															},
															"nodeType": "YulIf",
															"src": "3015:52:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3076:39:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3105:9:14"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "3086:18:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "3086:29:14"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3076:6:14"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3124:48:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3157:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3168:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3153:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3153:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "3134:18:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "3134:38:14"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "3124:6:14"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3181:42:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3208:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3219:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3204:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3204:18:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3191:12:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "3191:32:14"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "3181:6:14"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2955:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2966:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2978:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2986:6:14",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2994:6:14",
														"type": ""
													}
												],
												"src": "2901:328:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3318:170:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3364:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3373:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3376:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3366:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3366:12:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3366:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3339:7:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3348:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3335:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3335:23:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3360:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3331:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "3331:32:14"
															},
															"nodeType": "YulIf",
															"src": "3328:52:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3389:39:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3418:9:14"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "3399:18:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "3399:29:14"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3389:6:14"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3437:45:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3467:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3478:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3463:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3463:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bool",
																	"nodeType": "YulIdentifier",
																	"src": "3447:15:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "3447:35:14"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "3437:6:14"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3276:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3287:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3299:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3307:6:14",
														"type": ""
													}
												],
												"src": "3234:254:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3633:668:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3680:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3689:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3692:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3682:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3682:12:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3682:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3654:7:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3663:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3650:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3650:23:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3675:3:14",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3646:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "3646:33:14"
															},
															"nodeType": "YulIf",
															"src": "3643:53:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3705:39:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3734:9:14"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "3715:18:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "3715:29:14"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3705:6:14"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3753:48:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3786:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3797:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3782:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3782:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "3763:18:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "3763:38:14"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "3753:6:14"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3810:42:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3837:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3848:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3833:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3833:18:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3820:12:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "3820:32:14"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "3810:6:14"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3861:46:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3892:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3903:2:14",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3888:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3888:18:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3875:12:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "3875:32:14"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "3865:6:14",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3916:28:14",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3926:18:14",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "3920:2:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3971:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3980:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3983:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3973:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3973:12:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3973:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3959:6:14"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3967:2:14"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3956:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "3956:14:14"
															},
															"nodeType": "YulIf",
															"src": "3953:34:14"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3996:32:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4010:9:14"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4021:6:14"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4006:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4006:22:14"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "4000:2:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4076:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4085:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4088:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4078:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4078:12:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4078:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "4055:2:14"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4059:4:14",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4051:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4051:13:14"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4066:7:14"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "4047:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4047:27:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4040:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4040:35:14"
															},
															"nodeType": "YulIf",
															"src": "4037:55:14"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4101:30:14",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "4128:2:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4115:12:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4115:16:14"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "4105:6:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4158:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4167:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4170:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4160:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4160:12:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4160:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4146:6:14"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "4154:2:14"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4143:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4143:14:14"
															},
															"nodeType": "YulIf",
															"src": "4140:34:14"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4224:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4233:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4236:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4226:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4226:12:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4226:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "4197:2:14"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "4201:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4193:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4193:15:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4210:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4189:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4189:24:14"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "4215:7:14"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4186:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4186:37:14"
															},
															"nodeType": "YulIf",
															"src": "4183:57:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4249:21:14",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "4263:2:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4267:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4259:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4259:11:14"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "4249:6:14"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4279:16:14",
															"value": {
																"name": "length",
																"nodeType": "YulIdentifier",
																"src": "4289:6:14"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "4279:6:14"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_calldata_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3567:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3578:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3590:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3598:6:14",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3606:6:14",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "3614:6:14",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "3622:6:14",
														"type": ""
													}
												],
												"src": "3493:808:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4338:95:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4355:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4362:3:14",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4367:10:14",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "4358:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4358:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4348:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4348:31:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4348:31:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4395:1:14",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4398:4:14",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4388:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4388:15:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4388:15:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4419:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4422:4:14",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4412:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4412:15:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4412:15:14"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "4306:127:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4518:842:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4564:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4573:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4576:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4566:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4566:12:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4566:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4539:7:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4548:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4535:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4535:23:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4560:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4531:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4531:32:14"
															},
															"nodeType": "YulIf",
															"src": "4528:52:14"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4589:37:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4616:9:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4603:12:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4603:23:14"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "4593:6:14",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4635:28:14",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4645:18:14",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "4639:2:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4690:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4699:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4702:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4692:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4692:12:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4692:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4678:6:14"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "4686:2:14"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4675:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4675:14:14"
															},
															"nodeType": "YulIf",
															"src": "4672:34:14"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4715:32:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4729:9:14"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4740:6:14"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4725:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4725:22:14"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "4719:2:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4795:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4804:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4807:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4797:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4797:12:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4797:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "4774:2:14"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4778:4:14",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4770:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4770:13:14"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4785:7:14"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "4766:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4766:27:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4759:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4759:35:14"
															},
															"nodeType": "YulIf",
															"src": "4756:55:14"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4820:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "4843:2:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4830:12:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4830:16:14"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "4824:2:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4869:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "4871:16:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4871:18:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4871:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "4861:2:14"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "4865:2:14"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4858:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4858:10:14"
															},
															"nodeType": "YulIf",
															"src": "4855:36:14"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4900:17:14",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4914:2:14",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "4910:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4910:7:14"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "4904:2:14",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4926:23:14",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4946:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4940:5:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4940:9:14"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "4930:6:14",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4958:71:14",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "4980:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_3",
																										"nodeType": "YulIdentifier",
																										"src": "5004:2:14"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "5008:4:14",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "5000:3:14"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "5000:13:14"
																							},
																							{
																								"name": "_4",
																								"nodeType": "YulIdentifier",
																								"src": "5015:2:14"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "4996:3:14"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4996:22:14"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5020:2:14",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4992:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4992:31:14"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "5025:2:14"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4988:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4988:40:14"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4976:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4976:53:14"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "4962:10:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5088:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "5090:16:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5090:18:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5090:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "5047:10:14"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "5059:2:14"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "5044:2:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5044:18:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "5067:10:14"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "5079:6:14"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "5064:2:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5064:22:14"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "5041:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "5041:46:14"
															},
															"nodeType": "YulIf",
															"src": "5038:72:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5126:2:14",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "5130:10:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5119:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "5119:22:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5119:22:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "5157:6:14"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "5165:2:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5150:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "5150:18:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5150:18:14"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5214:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5223:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5226:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5216:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5216:12:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5216:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "5191:2:14"
																					},
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "5195:2:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5187:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5187:11:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5200:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5183:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5183:20:14"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "5205:7:14"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5180:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "5180:33:14"
															},
															"nodeType": "YulIf",
															"src": "5177:53:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "5256:6:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5264:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5252:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5252:15:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "5273:2:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5277:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5269:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5269:11:14"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "5282:2:14"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "5239:12:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "5239:46:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5239:46:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nodeType": "YulIdentifier",
																						"src": "5309:6:14"
																					},
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "5317:2:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5305:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5305:15:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5322:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5301:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5301:24:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5327:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5294:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "5294:35:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5294:35:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5338:16:14",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "5348:6:14"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "5338:6:14"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4484:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4495:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4507:6:14",
														"type": ""
													}
												],
												"src": "4438:922:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5452:173:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5498:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5507:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5510:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5500:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5500:12:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5500:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5473:7:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5482:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5469:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5469:23:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5494:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5465:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "5465:32:14"
															},
															"nodeType": "YulIf",
															"src": "5462:52:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5523:39:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5552:9:14"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "5533:18:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "5533:29:14"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "5523:6:14"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5571:48:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5604:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5615:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5600:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5600:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "5581:18:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "5581:38:14"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "5571:6:14"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5410:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5421:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5433:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5441:6:14",
														"type": ""
													}
												],
												"src": "5365:260:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5804:161:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5821:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5832:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5814:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "5814:21:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5814:21:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5855:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5866:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5851:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5851:18:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5871:2:14",
																		"type": "",
																		"value": "11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5844:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "5844:30:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5844:30:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5894:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5905:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5890:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5890:18:14"
																	},
																	{
																		"hexValue": "676574417070726f766564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5910:13:14",
																		"type": "",
																		"value": "getApproved"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5883:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "5883:41:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5883:41:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5933:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5945:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5956:2:14",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5941:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "5941:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5933:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_08b180e2fe9f14914416216da76338ac0beb980443725c802af615f8431fdb1e__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5781:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5795:4:14",
														"type": ""
													}
												],
												"src": "5630:335:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6144:156:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6161:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6172:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6154:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "6154:21:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6154:21:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6195:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6206:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6191:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6191:18:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6211:1:14",
																		"type": "",
																		"value": "7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6184:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "6184:29:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6184:29:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6233:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6244:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6229:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6229:18:14"
																	},
																	{
																		"hexValue": "617070726f7665",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6249:9:14",
																		"type": "",
																		"value": "approve"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6222:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "6222:37:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6222:37:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6268:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6280:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6291:2:14",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6276:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "6276:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6268:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_5219209e083275171774dab1df80982e9df2096516f06319c5c6d71ae0a8480c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6121:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6135:4:14",
														"type": ""
													}
												],
												"src": "5970:330:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6479:162:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6496:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6507:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6489:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "6489:21:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6489:21:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6530:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6541:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6526:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6526:18:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6546:2:14",
																		"type": "",
																		"value": "12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6519:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "6519:30:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6519:30:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6569:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6580:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6565:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6565:18:14"
																	},
																	{
																		"hexValue": "7472616e7366657246726f6d",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6585:14:14",
																		"type": "",
																		"value": "transferFrom"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6558:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "6558:42:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6558:42:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6609:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6621:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6632:2:14",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6617:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "6617:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6609:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0c41b033f4a31df8067c24d1e9b550a2ce75fd4a29e1147af9752174f0e6cb20__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6456:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6470:4:14",
														"type": ""
													}
												],
												"src": "6305:336:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6820:162:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6837:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6848:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6830:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "6830:21:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6830:21:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6871:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6882:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6867:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6867:18:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6887:2:14",
																		"type": "",
																		"value": "12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6860:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "6860:30:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6860:30:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6910:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6921:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6906:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6906:18:14"
																	},
																	{
																		"hexValue": "4f7574206f6620496e646578",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6926:14:14",
																		"type": "",
																		"value": "Out of Index"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6899:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "6899:42:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6899:42:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6950:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6962:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6973:2:14",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6958:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "6958:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6950:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_be78c1e9355992416a0dec4eab01ee588f3bd64dda46cc63c159dc4dddd83f4e__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6797:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6811:4:14",
														"type": ""
													}
												],
												"src": "6646:336:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7161:166:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7178:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7189:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7171:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "7171:21:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7171:21:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7212:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7223:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7208:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7208:18:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7228:2:14",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7201:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "7201:30:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7201:30:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7251:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7262:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7247:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7247:18:14"
																	},
																	{
																		"hexValue": "736166655472616e7366657246726f6d",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7267:18:14",
																		"type": "",
																		"value": "safeTransferFrom"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7240:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "7240:46:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7240:46:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7295:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7307:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7318:2:14",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7303:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "7303:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7295:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c59d59d013d4aa1a8b1ce4c8299086f070733b453c02d0dc46e735edc04d6444__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7138:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7152:4:14",
														"type": ""
													}
												],
												"src": "6987:340:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7506:167:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7523:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7534:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7516:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "7516:21:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7516:21:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7557:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7568:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7553:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7553:18:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7573:2:14",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7546:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "7546:30:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7546:30:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7596:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7607:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7592:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7592:18:14"
																	},
																	{
																		"hexValue": "736574417070726f76616c466f72416c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7612:19:14",
																		"type": "",
																		"value": "setApprovalForAll"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7585:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "7585:47:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7585:47:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7641:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7653:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7664:2:14",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7649:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "7649:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7641:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_bad4c8ea4c8fb9f571d1f6f9b7692fff8e5ceaf73b1df98e7da8c1109b39ae9a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7483:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7497:4:14",
														"type": ""
													}
												],
												"src": "7332:341:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7733:325:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7743:22:14",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7757:1:14",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "7760:4:14"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7753:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "7753:12:14"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "7743:6:14"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7774:38:14",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "7804:4:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7810:1:14",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "7800:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "7800:12:14"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "7778:18:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7851:31:14",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "7853:27:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "7867:6:14"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7875:4:14",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "7863:3:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7863:17:14"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "7853:6:14"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "7831:18:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "7824:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "7824:26:14"
															},
															"nodeType": "YulIf",
															"src": "7821:61:14"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7941:111:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7962:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "7969:3:14",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "7974:10:14",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "7965:3:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7965:20:14"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "7955:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7955:31:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7955:31:14"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8006:1:14",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8009:4:14",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "7999:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7999:15:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7999:15:14"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8034:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8037:4:14",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "8027:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8027:15:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8027:15:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "7897:18:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "7920:6:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7928:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "7917:2:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7917:14:14"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "7894:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "7894:38:14"
															},
															"nodeType": "YulIf",
															"src": "7891:161:14"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "7713:4:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "7722:6:14",
														"type": ""
													}
												],
												"src": "7678:380:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8119:65:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8136:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "8139:3:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8129:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "8129:14:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8129:14:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8152:26:14",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8170:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8173:4:14",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "8160:9:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "8160:18:14"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "8152:4:14"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "8102:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "8110:4:14",
														"type": ""
													}
												],
												"src": "8063:121:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8522:1050:14",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8532:12:14",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "8543:1:14",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "ret",
																	"nodeType": "YulTypedName",
																	"src": "8536:3:14",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8553:30:14",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8576:6:14"
																	}
																],
																"functionName": {
																	"name": "sload",
																	"nodeType": "YulIdentifier",
																	"src": "8570:5:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "8570:13:14"
															},
															"variables": [
																{
																	"name": "slotValue",
																	"nodeType": "YulTypedName",
																	"src": "8557:9:14",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8592:50:14",
															"value": {
																"arguments": [
																	{
																		"name": "slotValue",
																		"nodeType": "YulIdentifier",
																		"src": "8632:9:14"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nodeType": "YulIdentifier",
																	"src": "8606:25:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "8606:36:14"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "8596:6:14",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8651:11:14",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "8661:1:14",
																"type": "",
																"value": "1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "8655:2:14",
																	"type": ""
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "8712:126:14",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "pos",
																							"nodeType": "YulIdentifier",
																							"src": "8733:3:14"
																						},
																						{
																							"arguments": [
																								{
																									"name": "slotValue",
																									"nodeType": "YulIdentifier",
																									"src": "8742:9:14"
																								},
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "8757:3:14",
																											"type": "",
																											"value": "255"
																										}
																									],
																									"functionName": {
																										"name": "not",
																										"nodeType": "YulIdentifier",
																										"src": "8753:3:14"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "8753:8:14"
																								}
																							],
																							"functionName": {
																								"name": "and",
																								"nodeType": "YulIdentifier",
																								"src": "8738:3:14"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "8738:24:14"
																						}
																					],
																					"functionName": {
																						"name": "mstore",
																						"nodeType": "YulIdentifier",
																						"src": "8726:6:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8726:37:14"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "8726:37:14"
																			},
																			{
																				"nodeType": "YulAssignment",
																				"src": "8776:52:14",
																				"value": {
																					"arguments": [
																						{
																							"name": "pos",
																							"nodeType": "YulIdentifier",
																							"src": "8787:3:14"
																						},
																						{
																							"arguments": [
																								{
																									"name": "length",
																									"nodeType": "YulIdentifier",
																									"src": "8796:6:14"
																								},
																								{
																									"arguments": [
																										{
																											"arguments": [
																												{
																													"name": "length",
																													"nodeType": "YulIdentifier",
																													"src": "8818:6:14"
																												}
																											],
																											"functionName": {
																												"name": "iszero",
																												"nodeType": "YulIdentifier",
																												"src": "8811:6:14"
																											},
																											"nodeType": "YulFunctionCall",
																											"src": "8811:14:14"
																										}
																									],
																									"functionName": {
																										"name": "iszero",
																										"nodeType": "YulIdentifier",
																										"src": "8804:6:14"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "8804:22:14"
																								}
																							],
																							"functionName": {
																								"name": "mul",
																								"nodeType": "YulIdentifier",
																								"src": "8792:3:14"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "8792:35:14"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "8783:3:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8783:45:14"
																				},
																				"variableNames": [
																					{
																						"name": "ret",
																						"nodeType": "YulIdentifier",
																						"src": "8776:3:14"
																					}
																				]
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "8705:133:14",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8710:1:14",
																		"type": "",
																		"value": "0"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "8854:349:14",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "8875:1:14",
																							"type": "",
																							"value": "0"
																						},
																						{
																							"name": "value0",
																							"nodeType": "YulIdentifier",
																							"src": "8878:6:14"
																						}
																					],
																					"functionName": {
																						"name": "mstore",
																						"nodeType": "YulIdentifier",
																						"src": "8868:6:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8868:17:14"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "8868:17:14"
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "8898:14:14",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8908:4:14",
																					"type": "",
																					"value": "0x20"
																				},
																				"variables": [
																					{
																						"name": "_2",
																						"nodeType": "YulTypedName",
																						"src": "8902:2:14",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "8925:31:14",
																				"value": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "8950:1:14",
																							"type": "",
																							"value": "0"
																						},
																						{
																							"name": "_2",
																							"nodeType": "YulIdentifier",
																							"src": "8953:2:14"
																						}
																					],
																					"functionName": {
																						"name": "keccak256",
																						"nodeType": "YulIdentifier",
																						"src": "8940:9:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8940:16:14"
																				},
																				"variables": [
																					{
																						"name": "dataPos",
																						"nodeType": "YulTypedName",
																						"src": "8929:7:14",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "8969:10:14",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8978:1:14",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "8973:1:14",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "9046:111:14",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "pos",
																												"nodeType": "YulIdentifier",
																												"src": "9075:3:14"
																											},
																											{
																												"name": "i",
																												"nodeType": "YulIdentifier",
																												"src": "9080:1:14"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "9071:3:14"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "9071:11:14"
																									},
																									{
																										"arguments": [
																											{
																												"name": "dataPos",
																												"nodeType": "YulIdentifier",
																												"src": "9090:7:14"
																											}
																										],
																										"functionName": {
																											"name": "sload",
																											"nodeType": "YulIdentifier",
																											"src": "9084:5:14"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "9084:14:14"
																									}
																								],
																								"functionName": {
																									"name": "mstore",
																									"nodeType": "YulIdentifier",
																									"src": "9064:6:14"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "9064:35:14"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "9064:35:14"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "9116:27:14",
																							"value": {
																								"arguments": [
																									{
																										"name": "dataPos",
																										"nodeType": "YulIdentifier",
																										"src": "9131:7:14"
																									},
																									{
																										"name": "_1",
																										"nodeType": "YulIdentifier",
																										"src": "9140:2:14"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "9127:3:14"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "9127:16:14"
																							},
																							"variableNames": [
																								{
																									"name": "dataPos",
																									"nodeType": "YulIdentifier",
																									"src": "9116:7:14"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "9003:1:14"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "9006:6:14"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "9000:2:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9000:13:14"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "9014:19:14",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "9016:15:14",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "9025:1:14"
																									},
																									{
																										"name": "_2",
																										"nodeType": "YulIdentifier",
																										"src": "9028:2:14"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "9021:3:14"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "9021:10:14"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "9016:1:14"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "8996:3:14",
																					"statements": []
																				},
																				"src": "8992:165:14"
																			},
																			{
																				"nodeType": "YulAssignment",
																				"src": "9170:23:14",
																				"value": {
																					"arguments": [
																						{
																							"name": "pos",
																							"nodeType": "YulIdentifier",
																							"src": "9181:3:14"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "9186:6:14"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "9177:3:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9177:16:14"
																				},
																				"variableNames": [
																					{
																						"name": "ret",
																						"nodeType": "YulIdentifier",
																						"src": "9170:3:14"
																					}
																				]
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "8847:356:14",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8852:1:14",
																		"type": "",
																		"value": "1"
																	}
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "slotValue",
																		"nodeType": "YulIdentifier",
																		"src": "8682:9:14"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "8693:2:14"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "8678:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "8678:18:14"
															},
															"nodeType": "YulSwitch",
															"src": "8671:532:14"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9212:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "9234:6:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "9228:5:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "9228:13:14"
															},
															"variables": [
																{
																	"name": "length_1",
																	"nodeType": "YulTypedName",
																	"src": "9216:8:14",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "9289:6:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9297:4:14",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9285:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9285:17:14"
																	},
																	{
																		"name": "ret",
																		"nodeType": "YulIdentifier",
																		"src": "9304:3:14"
																	},
																	{
																		"name": "length_1",
																		"nodeType": "YulIdentifier",
																		"src": "9309:8:14"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "9250:34:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "9250:68:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9250:68:14"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9327:31:14",
															"value": {
																"arguments": [
																	{
																		"name": "ret",
																		"nodeType": "YulIdentifier",
																		"src": "9344:3:14"
																	},
																	{
																		"name": "length_1",
																		"nodeType": "YulIdentifier",
																		"src": "9349:8:14"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9340:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "9340:18:14"
															},
															"variables": [
																{
																	"name": "end_1",
																	"nodeType": "YulTypedName",
																	"src": "9331:5:14",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "end_1",
																		"nodeType": "YulIdentifier",
																		"src": "9374:5:14"
																	},
																	{
																		"hexValue": "3f746f6b656e547970653d",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9381:13:14",
																		"type": "",
																		"value": "?tokenType="
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9367:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "9367:28:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9367:28:14"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9404:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "9426:6:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "9420:5:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "9420:13:14"
															},
															"variables": [
																{
																	"name": "length_2",
																	"nodeType": "YulTypedName",
																	"src": "9408:8:14",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value2",
																				"nodeType": "YulIdentifier",
																				"src": "9481:6:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9489:4:14",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9477:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9477:17:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "end_1",
																				"nodeType": "YulIdentifier",
																				"src": "9500:5:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9507:2:14",
																				"type": "",
																				"value": "11"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9496:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9496:14:14"
																	},
																	{
																		"name": "length_2",
																		"nodeType": "YulIdentifier",
																		"src": "9512:8:14"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "9442:34:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "9442:79:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9442:79:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9530:36:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "end_1",
																				"nodeType": "YulIdentifier",
																				"src": "9545:5:14"
																			},
																			{
																				"name": "length_2",
																				"nodeType": "YulIdentifier",
																				"src": "9552:8:14"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9541:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9541:20:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9563:2:14",
																		"type": "",
																		"value": "11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9537:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "9537:29:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "9530:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_storage_t_string_memory_ptr_t_stringliteral_1b93835a866fd99c0445b12e9173965af6f17da5913478ef85289575b751276a_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8482:3:14",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "8487:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "8495:6:14",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8503:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8514:3:14",
														"type": ""
													}
												],
												"src": "8189:1383:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9658:464:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9691:425:14",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "9705:11:14",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "9715:1:14",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nodeType": "YulTypedName",
																				"src": "9709:2:14",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "9736:2:14"
																				},
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "9740:5:14"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "9729:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9729:17:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9729:17:14"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "9759:31:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "9781:2:14"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9785:4:14",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nodeType": "YulIdentifier",
																				"src": "9771:9:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9771:19:14"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nodeType": "YulTypedName",
																				"src": "9763:4:14",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "9803:57:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nodeType": "YulIdentifier",
																					"src": "9826:4:14"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "9836:1:14",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nodeType": "YulIdentifier",
																									"src": "9843:10:14"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "9855:2:14",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "9839:3:14"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "9839:19:14"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nodeType": "YulIdentifier",
																						"src": "9832:3:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9832:27:14"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "9822:3:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9822:38:14"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nodeType": "YulTypedName",
																				"src": "9807:11:14",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "9897:23:14",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "9899:19:14",
																					"value": {
																						"name": "data",
																						"nodeType": "YulIdentifier",
																						"src": "9914:4:14"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nodeType": "YulIdentifier",
																							"src": "9899:11:14"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nodeType": "YulIdentifier",
																					"src": "9879:10:14"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9891:4:14",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "9876:2:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9876:20:14"
																		},
																		"nodeType": "YulIf",
																		"src": "9873:47:14"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "9933:41:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nodeType": "YulIdentifier",
																					"src": "9947:4:14"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "9957:1:14",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nodeType": "YulIdentifier",
																									"src": "9964:3:14"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "9969:2:14",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "9960:3:14"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "9960:12:14"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nodeType": "YulIdentifier",
																						"src": "9953:3:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9953:20:14"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "9943:3:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9943:31:14"
																		},
																		"variables": [
																			{
																				"name": "_2",
																				"nodeType": "YulTypedName",
																				"src": "9937:2:14",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "9987:24:14",
																		"value": {
																			"name": "deleteStart",
																			"nodeType": "YulIdentifier",
																			"src": "10000:11:14"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nodeType": "YulTypedName",
																				"src": "9991:5:14",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "10085:21:14",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nodeType": "YulIdentifier",
																								"src": "10094:5:14"
																							},
																							{
																								"name": "_1",
																								"nodeType": "YulIdentifier",
																								"src": "10101:2:14"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nodeType": "YulIdentifier",
																							"src": "10087:6:14"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "10087:17:14"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "10087:17:14"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "10035:5:14"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "10042:2:14"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "10032:2:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10032:13:14"
																		},
																		"nodeType": "YulForLoop",
																		"post": {
																			"nodeType": "YulBlock",
																			"src": "10046:26:14",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "10048:22:14",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nodeType": "YulIdentifier",
																								"src": "10061:5:14"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "10068:1:14",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "10057:3:14"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "10057:13:14"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nodeType": "YulIdentifier",
																							"src": "10048:5:14"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nodeType": "YulBlock",
																			"src": "10028:3:14",
																			"statements": []
																		},
																		"src": "10024:82:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "9674:3:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9679:2:14",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "9671:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "9671:11:14"
															},
															"nodeType": "YulIf",
															"src": "9668:448:14"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "9630:5:14",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "9637:3:14",
														"type": ""
													},
													{
														"name": "startIndex",
														"nodeType": "YulTypedName",
														"src": "9642:10:14",
														"type": ""
													}
												],
												"src": "9577:545:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10212:81:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10222:65:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nodeType": "YulIdentifier",
																				"src": "10237:4:14"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "10255:1:14",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nodeType": "YulIdentifier",
																										"src": "10258:3:14"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "10251:3:14"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "10251:11:14"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "10268:1:14",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nodeType": "YulIdentifier",
																									"src": "10264:3:14"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "10264:6:14"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nodeType": "YulIdentifier",
																							"src": "10247:3:14"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "10247:24:14"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "10243:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10243:29:14"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "10233:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10233:40:14"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10279:1:14",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nodeType": "YulIdentifier",
																				"src": "10282:3:14"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "10275:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10275:11:14"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "10230:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "10230:57:14"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nodeType": "YulIdentifier",
																	"src": "10222:4:14"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "10189:4:14",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "10195:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nodeType": "YulTypedName",
														"src": "10203:4:14",
														"type": ""
													}
												],
												"src": "10127:166:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10394:1256:14",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10404:24:14",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "10424:3:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "10418:5:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "10418:10:14"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nodeType": "YulTypedName",
																	"src": "10408:6:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10471:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "10473:16:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10473:18:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10473:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "10443:6:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10451:18:14",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "10440:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "10440:30:14"
															},
															"nodeType": "YulIf",
															"src": "10437:56:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "10546:4:14"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nodeType": "YulIdentifier",
																						"src": "10584:4:14"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nodeType": "YulIdentifier",
																					"src": "10578:5:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10578:11:14"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nodeType": "YulIdentifier",
																			"src": "10552:25:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10552:38:14"
																	},
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "10592:6:14"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nodeType": "YulIdentifier",
																	"src": "10502:43:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "10502:97:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10502:97:14"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10608:18:14",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "10625:1:14",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulTypedName",
																	"src": "10612:9:14",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10635:23:14",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "10654:4:14",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "srcOffset_1",
																	"nodeType": "YulTypedName",
																	"src": "10639:11:14",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10667:24:14",
															"value": {
																"name": "srcOffset_1",
																"nodeType": "YulIdentifier",
																"src": "10680:11:14"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulIdentifier",
																	"src": "10667:9:14"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "10737:656:14",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "10751:35:14",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "10770:6:14"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "10782:2:14",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "10778:3:14"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "10778:7:14"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "10766:3:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "10766:20:14"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nodeType": "YulTypedName",
																						"src": "10755:7:14",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "10799:49:14",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "10843:4:14"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nodeType": "YulIdentifier",
																						"src": "10813:29:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "10813:35:14"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nodeType": "YulTypedName",
																						"src": "10803:6:14",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "10861:10:14",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10870:1:14",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "10865:1:14",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "10948:172:14",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "10973:6:14"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nodeType": "YulIdentifier",
																														"src": "10991:3:14"
																													},
																													{
																														"name": "srcOffset",
																														"nodeType": "YulIdentifier",
																														"src": "10996:9:14"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nodeType": "YulIdentifier",
																													"src": "10987:3:14"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "10987:19:14"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "10981:5:14"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "10981:26:14"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "10966:6:14"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "10966:42:14"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "10966:42:14"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "11025:24:14",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "11039:6:14"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "11047:1:14",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "11035:3:14"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "11035:14:14"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nodeType": "YulIdentifier",
																									"src": "11025:6:14"
																								}
																							]
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "11066:40:14",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nodeType": "YulIdentifier",
																										"src": "11083:9:14"
																									},
																									{
																										"name": "srcOffset_1",
																										"nodeType": "YulIdentifier",
																										"src": "11094:11:14"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "11079:3:14"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "11079:27:14"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nodeType": "YulIdentifier",
																									"src": "11066:9:14"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "10895:1:14"
																						},
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "10898:7:14"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "10892:2:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "10892:14:14"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "10907:28:14",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "10909:24:14",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "10918:1:14"
																									},
																									{
																										"name": "srcOffset_1",
																										"nodeType": "YulIdentifier",
																										"src": "10921:11:14"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "10914:3:14"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "10914:19:14"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "10909:1:14"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "10888:3:14",
																					"statements": []
																				},
																				"src": "10884:236:14"
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "11168:166:14",
																					"statements": [
																						{
																							"nodeType": "YulVariableDeclaration",
																							"src": "11186:43:14",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "11213:3:14"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "11218:9:14"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "11209:3:14"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "11209:19:14"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "11203:5:14"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "11203:26:14"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nodeType": "YulTypedName",
																									"src": "11190:9:14",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "11253:6:14"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nodeType": "YulIdentifier",
																												"src": "11265:9:14"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nodeType": "YulLiteral",
																																				"src": "11292:1:14",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nodeType": "YulIdentifier",
																																				"src": "11295:6:14"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nodeType": "YulIdentifier",
																																			"src": "11288:3:14"
																																		},
																																		"nodeType": "YulFunctionCall",
																																		"src": "11288:14:14"
																																	},
																																	{
																																		"kind": "number",
																																		"nodeType": "YulLiteral",
																																		"src": "11304:3:14",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nodeType": "YulIdentifier",
																																	"src": "11284:3:14"
																																},
																																"nodeType": "YulFunctionCall",
																																"src": "11284:24:14"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nodeType": "YulLiteral",
																																		"src": "11314:1:14",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nodeType": "YulIdentifier",
																																	"src": "11310:3:14"
																																},
																																"nodeType": "YulFunctionCall",
																																"src": "11310:6:14"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nodeType": "YulIdentifier",
																															"src": "11280:3:14"
																														},
																														"nodeType": "YulFunctionCall",
																														"src": "11280:37:14"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nodeType": "YulIdentifier",
																													"src": "11276:3:14"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "11276:42:14"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nodeType": "YulIdentifier",
																											"src": "11261:3:14"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "11261:58:14"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "11246:6:14"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "11246:74:14"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "11246:74:14"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "11139:7:14"
																						},
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "11148:6:14"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "11136:2:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "11136:19:14"
																				},
																				"nodeType": "YulIf",
																				"src": "11133:201:14"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "11354:4:14"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "11368:1:14",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nodeType": "YulIdentifier",
																											"src": "11371:6:14"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nodeType": "YulIdentifier",
																										"src": "11364:3:14"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "11364:14:14"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "11380:1:14",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "11360:3:14"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "11360:22:14"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "11347:6:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "11347:36:14"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "11347:36:14"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "10730:663:14",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10735:1:14",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "11410:234:14",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "11424:14:14",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11437:1:14",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nodeType": "YulTypedName",
																						"src": "11428:5:14",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "11473:67:14",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "11491:35:14",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "11510:3:14"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "11515:9:14"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "11506:3:14"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "11506:19:14"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "11500:5:14"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "11500:26:14"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "11491:5:14"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nodeType": "YulIdentifier",
																					"src": "11454:6:14"
																				},
																				"nodeType": "YulIf",
																				"src": "11451:89:14"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "11560:4:14"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "11619:5:14"
																								},
																								{
																									"name": "newLen",
																									"nodeType": "YulIdentifier",
																									"src": "11626:6:14"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nodeType": "YulIdentifier",
																								"src": "11566:52:14"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "11566:67:14"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "11553:6:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "11553:81:14"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "11553:81:14"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "11402:242:14",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "10710:6:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10718:2:14",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "10707:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "10707:14:14"
															},
															"nodeType": "YulSwitch",
															"src": "10700:944:14"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "10379:4:14",
														"type": ""
													},
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "10385:3:14",
														"type": ""
													}
												],
												"src": "10298:1352:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11829:166:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11846:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11857:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11839:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "11839:21:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11839:21:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11880:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11891:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11876:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11876:18:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11896:2:14",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11869:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "11869:30:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11869:30:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11919:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11930:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11915:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11915:18:14"
																	},
																	{
																		"hexValue": "6973417070726f766564466f72416c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11935:18:14",
																		"type": "",
																		"value": "isApprovedForAll"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11908:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "11908:46:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11908:46:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11963:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11975:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11986:2:14",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11971:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "11971:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11963:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_921cdf9aedfed41bc4485ae779fda471feca12075d9127a0fc70ac6b3b3d9c30__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11806:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11820:4:14",
														"type": ""
													}
												],
												"src": "11655:340:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12174:228:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12191:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12202:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12184:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "12184:21:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12184:21:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12225:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12236:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12221:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12221:18:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12241:2:14",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12214:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "12214:30:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12214:30:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12264:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12275:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12260:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12260:18:14"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12280:34:14",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12253:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "12253:62:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12253:62:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12335:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12346:2:14",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12331:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12331:18:14"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12351:8:14",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12324:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "12324:36:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12324:36:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12369:27:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12381:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12392:3:14",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12377:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "12377:19:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12369:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12151:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12165:4:14",
														"type": ""
													}
												],
												"src": "12000:402:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12581:182:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12598:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12609:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12591:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "12591:21:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12591:21:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12632:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12643:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12628:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12628:18:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12648:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12621:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "12621:30:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12621:30:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12671:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12682:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12667:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12667:18:14"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12687:34:14",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12660:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "12660:62:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12660:62:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12731:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12743:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12754:2:14",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12739:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "12739:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12731:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12558:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12572:4:14",
														"type": ""
													}
												],
												"src": "12407:356:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12800:95:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12817:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12824:3:14",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12829:10:14",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "12820:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12820:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12810:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "12810:31:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12810:31:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12857:1:14",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12860:4:14",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12850:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "12850:15:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12850:15:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12881:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12884:4:14",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "12874:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "12874:15:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12874:15:14"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "12768:127:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12948:77:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12958:16:14",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12969:1:14"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12972:1:14"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12965:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "12965:9:14"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "12958:3:14"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12997:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "12999:16:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12999:18:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12999:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12989:1:14"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "12992:3:14"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "12986:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "12986:10:14"
															},
															"nodeType": "YulIf",
															"src": "12983:36:14"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "12931:1:14",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "12934:1:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "12940:3:14",
														"type": ""
													}
												],
												"src": "12900:125:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13079:79:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13089:17:14",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "13101:1:14"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "13104:1:14"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "13097:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "13097:9:14"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "13089:4:14"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13130:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "13132:16:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13132:18:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13132:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nodeType": "YulIdentifier",
																		"src": "13121:4:14"
																	},
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "13127:1:14"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "13118:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "13118:11:14"
															},
															"nodeType": "YulIf",
															"src": "13115:37:14"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "13061:1:14",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "13064:1:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "13070:4:14",
														"type": ""
													}
												],
												"src": "13030:128:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13337:240:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13354:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13365:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13347:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "13347:21:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13347:21:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13388:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13399:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13384:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13384:18:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13404:2:14",
																		"type": "",
																		"value": "50"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13377:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "13377:30:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13377:30:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13427:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13438:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13423:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13423:18:14"
																	},
																	{
																		"hexValue": "4552433732313a207472616e7366657220746f206e6f6e204552433732315265",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13443:34:14",
																		"type": "",
																		"value": "ERC721: transfer to non ERC721Re"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13416:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "13416:62:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13416:62:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13498:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13509:2:14",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13494:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13494:18:14"
																	},
																	{
																		"hexValue": "63656976657220696d706c656d656e746572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13514:20:14",
																		"type": "",
																		"value": "ceiver implementer"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13487:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "13487:48:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13487:48:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13544:27:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13556:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13567:3:14",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13552:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "13552:19:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13544:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13314:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13328:4:14",
														"type": ""
													}
												],
												"src": "13163:414:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13614:95:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13631:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13638:3:14",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13643:10:14",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "13634:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13634:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13624:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "13624:31:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13624:31:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13671:1:14",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13674:4:14",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13664:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "13664:15:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13664:15:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13695:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13698:4:14",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "13688:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "13688:15:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13688:15:14"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "13582:127:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13917:286:14",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "13927:29:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13945:3:14",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13950:1:14",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "13941:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13941:11:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13954:1:14",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "13937:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "13937:19:14"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "13931:2:14",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13972:9:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "13987:6:14"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "13995:2:14"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "13983:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13983:15:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13965:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "13965:34:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13965:34:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14019:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14030:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14015:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14015:18:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "14039:6:14"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "14047:2:14"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "14035:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14035:15:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14008:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "14008:43:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14008:43:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14071:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14082:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14067:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14067:18:14"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "14087:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14060:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "14060:34:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14060:34:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14114:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14125:2:14",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14110:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14110:18:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14130:3:14",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14103:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "14103:31:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14103:31:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14143:54:14",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "14169:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14181:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14192:3:14",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14177:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14177:19:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nodeType": "YulIdentifier",
																	"src": "14151:17:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "14151:46:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14143:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13862:9:14",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "13873:6:14",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "13881:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "13889:6:14",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "13897:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13908:4:14",
														"type": ""
													}
												],
												"src": "13714:489:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14288:169:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14334:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14343:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14346:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "14336:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14336:12:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14336:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "14309:7:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14318:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "14305:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14305:23:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14330:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "14301:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "14301:32:14"
															},
															"nodeType": "YulIf",
															"src": "14298:52:14"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14359:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14378:9:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "14372:5:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "14372:16:14"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "14363:5:14",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "14421:5:14"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "14397:23:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "14397:30:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14397:30:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14436:15:14",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "14446:5:14"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "14436:6:14"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14254:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "14265:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "14277:6:14",
														"type": ""
													}
												],
												"src": "14208:249:14"
											}
										]
									},
									"contents": "{\n    { }\n    function validator_revert_bytes4(value)\n    {\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), add(pos, 0x20), length)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string(value0, add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_bool(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bool(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_bool(headStart)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_bool(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        let offset := calldataload(add(headStart, 96))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := calldataload(_2)\n        if gt(length, _1) { revert(0, 0) }\n        if gt(add(add(_2, length), 32), dataEnd) { revert(0, 0) }\n        value3 := add(_2, 32)\n        value4 := length\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_string_memory_ptr(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := calldataload(_2)\n        if gt(_3, _1) { panic_error_0x41() }\n        let _4 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_3, 0x1f), _4), 63), _4))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _3)\n        if gt(add(add(_2, _3), 32), dataEnd) { revert(0, 0) }\n        calldatacopy(add(memPtr, 32), add(_2, 32), _3)\n        mstore(add(add(memPtr, _3), 32), 0)\n        value0 := memPtr\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_stringliteral_08b180e2fe9f14914416216da76338ac0beb980443725c802af615f8431fdb1e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 11)\n        mstore(add(headStart, 64), \"getApproved\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_5219209e083275171774dab1df80982e9df2096516f06319c5c6d71ae0a8480c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 7)\n        mstore(add(headStart, 64), \"approve\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_0c41b033f4a31df8067c24d1e9b550a2ce75fd4a29e1147af9752174f0e6cb20__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 12)\n        mstore(add(headStart, 64), \"transferFrom\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_be78c1e9355992416a0dec4eab01ee588f3bd64dda46cc63c159dc4dddd83f4e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 12)\n        mstore(add(headStart, 64), \"Out of Index\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_c59d59d013d4aa1a8b1ce4c8299086f070733b453c02d0dc46e735edc04d6444__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"safeTransferFrom\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_bad4c8ea4c8fb9f571d1f6f9b7692fff8e5ceaf73b1df98e7da8c1109b39ae9a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 17)\n        mstore(add(headStart, 64), \"setApprovalForAll\")\n        tail := add(headStart, 96)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function abi_encode_tuple_packed_t_string_storage_t_string_memory_ptr_t_stringliteral_1b93835a866fd99c0445b12e9173965af6f17da5913478ef85289575b751276a_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value2, value1, value0) -> end\n    {\n        let ret := 0\n        let slotValue := sload(value0)\n        let length := extract_byte_array_length(slotValue)\n        let _1 := 1\n        switch and(slotValue, _1)\n        case 0 {\n            mstore(pos, and(slotValue, not(255)))\n            ret := add(pos, mul(length, iszero(iszero(length))))\n        }\n        case 1 {\n            mstore(0, value0)\n            let _2 := 0x20\n            let dataPos := keccak256(0, _2)\n            let i := 0\n            for { } lt(i, length) { i := add(i, _2) }\n            {\n                mstore(add(pos, i), sload(dataPos))\n                dataPos := add(dataPos, _1)\n            }\n            ret := add(pos, length)\n        }\n        let length_1 := mload(value1)\n        copy_memory_to_memory_with_cleanup(add(value1, 0x20), ret, length_1)\n        let end_1 := add(ret, length_1)\n        mstore(end_1, \"?tokenType=\")\n        let length_2 := mload(value2)\n        copy_memory_to_memory_with_cleanup(add(value2, 0x20), add(end_1, 11), length_2)\n        end := add(add(end_1, length_2), 11)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_921cdf9aedfed41bc4485ae779fda471feca12075d9127a0fc70ac6b3b3d9c30__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"isApprovedForAll\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 50)\n        mstore(add(headStart, 64), \"ERC721: transfer to non ERC721Re\")\n        mstore(add(headStart, 96), \"ceiver implementer\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x12()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), 128)\n        tail := abi_encode_string(value3, add(headStart, 128))\n    }\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n}",
									"id": 14,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1BB JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xF3 JUMPI DUP1 PUSH4 0xBE37E907 GT PUSH2 0x93 JUMPI DUP1 PUSH4 0xE0DF5B6F GT PUSH2 0x6E JUMPI DUP1 PUSH4 0xE0DF5B6F EQ PUSH2 0x3A7 JUMPI DUP1 PUSH4 0xE1604B70 EQ PUSH2 0x3BA JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x3C2 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x3D5 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xBE37E907 EQ PUSH2 0x36E JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x381 JUMPI DUP1 PUSH4 0xCE35DE95 EQ PUSH2 0x394 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x95D89B41 GT PUSH2 0xCE JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1E7 JUMPI DUP1 PUSH4 0x9B252852 EQ PUSH2 0x33A JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x34D JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x360 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x30F JUMPI DUP1 PUSH4 0x76AED2E1 EQ PUSH2 0x317 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x32A JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0x15E JUMPI DUP1 PUSH4 0x42842E0E GT PUSH2 0x139 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x2C3 JUMPI DUP1 PUSH4 0x51C18E0C EQ PUSH2 0x2D6 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x2E9 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2FC JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x23B872DD EQ PUSH2 0x28A JUMPI DUP1 PUSH4 0x2F745C59 EQ PUSH2 0x29D JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x2B0 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x95EA7B3 GT PUSH2 0x199 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x23D JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x252 JUMPI DUP1 PUSH4 0x1C02BC31 EQ PUSH2 0x264 JUMPI DUP1 PUSH4 0x1F8EB677 EQ PUSH2 0x277 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x1BF JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1E7 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x212 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1D2 PUSH2 0x1CD CALLDATASIZE PUSH1 0x4 PUSH2 0x1015 JUMP JUMPDEST PUSH2 0x3E8 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x6 DUP2 MSTORE PUSH6 0x1213D394D095 PUSH1 0xD2 SHL PUSH1 0x20 DUP3 ADD MSTORE JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DE SWAP2 SWAP1 PUSH2 0x107D JUMP JUMPDEST PUSH2 0x225 PUSH2 0x220 CALLDATASIZE PUSH1 0x4 PUSH2 0x108F JUMP JUMPDEST PUSH2 0x41E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1DE JUMP JUMPDEST PUSH2 0x250 PUSH2 0x24B CALLDATASIZE PUSH1 0x4 PUSH2 0x10BC JUMP JUMPDEST PUSH2 0x45C JUMP JUMPDEST STOP JUMPDEST PUSH1 0x3 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1DE JUMP JUMPDEST PUSH2 0x1D2 PUSH2 0x272 CALLDATASIZE PUSH1 0x4 PUSH2 0x10F3 JUMP JUMPDEST PUSH2 0x48F JUMP JUMPDEST PUSH2 0x1D2 PUSH2 0x285 CALLDATASIZE PUSH1 0x4 PUSH2 0x110C JUMP JUMPDEST PUSH2 0x4DE JUMP JUMPDEST PUSH2 0x250 PUSH2 0x298 CALLDATASIZE PUSH1 0x4 PUSH2 0x1125 JUMP JUMPDEST PUSH2 0x4FE JUMP JUMPDEST PUSH2 0x256 PUSH2 0x2AB CALLDATASIZE PUSH1 0x4 PUSH2 0x10BC JUMP JUMPDEST PUSH2 0x536 JUMP JUMPDEST PUSH2 0x256 PUSH2 0x2BE CALLDATASIZE PUSH1 0x4 PUSH2 0x10BC JUMP JUMPDEST PUSH2 0x5E7 JUMP JUMPDEST PUSH2 0x250 PUSH2 0x2D1 CALLDATASIZE PUSH1 0x4 PUSH2 0x1125 JUMP JUMPDEST PUSH2 0x601 JUMP JUMPDEST PUSH2 0x256 PUSH2 0x2E4 CALLDATASIZE PUSH1 0x4 PUSH2 0x108F JUMP JUMPDEST PUSH2 0x63D JUMP JUMPDEST PUSH2 0x225 PUSH2 0x2F7 CALLDATASIZE PUSH1 0x4 PUSH2 0x108F JUMP JUMPDEST PUSH2 0x659 JUMP JUMPDEST PUSH2 0x256 PUSH2 0x30A CALLDATASIZE PUSH1 0x4 PUSH2 0x110C JUMP JUMPDEST PUSH2 0x67E JUMP JUMPDEST PUSH2 0x250 PUSH2 0x6A6 JUMP JUMPDEST PUSH2 0x256 PUSH2 0x325 CALLDATASIZE PUSH1 0x4 PUSH2 0x108F JUMP JUMPDEST PUSH2 0x6B9 JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x225 JUMP JUMPDEST PUSH2 0x250 PUSH2 0x348 CALLDATASIZE PUSH1 0x4 PUSH2 0x10BC JUMP JUMPDEST PUSH2 0x6D5 JUMP JUMPDEST PUSH2 0x250 PUSH2 0x35B CALLDATASIZE PUSH1 0x4 PUSH2 0x115E JUMP JUMPDEST PUSH2 0x717 JUMP JUMPDEST PUSH2 0x250 PUSH2 0x2D1 CALLDATASIZE PUSH1 0x4 PUSH2 0x118F JUMP JUMPDEST PUSH2 0x256 PUSH2 0x37C CALLDATASIZE PUSH1 0x4 PUSH2 0x10BC JUMP JUMPDEST PUSH2 0x754 JUMP JUMPDEST PUSH2 0x205 PUSH2 0x38F CALLDATASIZE PUSH1 0x4 PUSH2 0x108F JUMP JUMPDEST PUSH2 0x767 JUMP JUMPDEST PUSH2 0x1D2 PUSH2 0x3A2 CALLDATASIZE PUSH1 0x4 PUSH2 0x110C JUMP JUMPDEST PUSH2 0x7E4 JUMP JUMPDEST PUSH2 0x205 PUSH2 0x3B5 CALLDATASIZE PUSH1 0x4 PUSH2 0x1236 JUMP JUMPDEST PUSH2 0x7EE JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x256 JUMP JUMPDEST PUSH2 0x1D2 PUSH2 0x3D0 CALLDATASIZE PUSH1 0x4 PUSH2 0x12E1 JUMP JUMPDEST PUSH2 0x8D7 JUMP JUMPDEST PUSH2 0x250 PUSH2 0x3E3 CALLDATASIZE PUSH1 0x4 PUSH2 0x110C JUMP JUMPDEST PUSH2 0x915 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x80AC58CD PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x418 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x13F8DCEB PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x19D95D105C1C1C9BDD9959 PUSH1 0xAA SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH0 SWAP1 PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x13F8DCEB PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x7 PUSH1 0x24 DUP3 ADD MSTORE PUSH7 0x617070726F7665 PUSH1 0xC8 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x453 JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP2 LT PUSH2 0x4BF JUMPI PUSH1 0x40 MLOAD PUSH4 0x50159299 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x453 JUMP JUMPDEST CALLER PUSH0 DUP2 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP5 ISZERO ISZERO OR SWAP1 SSTORE PUSH2 0x418 SWAP1 JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x418 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x13F8DCEB PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x7472616E7366657246726F6D PUSH1 0xA0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x453 JUMP JUMPDEST PUSH0 PUSH2 0x540 DUP4 PUSH2 0x98E JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP3 LT PUSH2 0x596 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x9EEAE840DECC4092DCC8CAF PUSH1 0xA3 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x453 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x5BF JUMPI PUSH1 0x40 MLOAD PUSH4 0x74F5E87D PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x453 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x5F0 PUSH2 0x9DD JUMP JUMPDEST PUSH2 0x5FA DUP4 DUP4 PUSH2 0xA36 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x13F8DCEB PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x736166655472616E7366657246726F6D PUSH1 0x80 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x453 JUMP JUMPDEST PUSH0 PUSH2 0x647 DUP3 PUSH2 0xC38 JUMP JUMPDEST POP PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x663 DUP3 PUSH2 0xC38 JUMP JUMPDEST POP PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x688 DUP3 PUSH2 0x98E JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x418 JUMP JUMPDEST PUSH2 0x6AE PUSH2 0x9DD JUMP JUMPDEST PUSH2 0x6B7 PUSH0 PUSH2 0xC8F JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH2 0x6C3 DUP3 PUSH2 0xC38 JUMP JUMPDEST POP PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND EQ PUSH2 0x709 JUMPI PUSH1 0x40 MLOAD PUSH4 0x50159299 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x453 JUMP JUMPDEST PUSH2 0x713 DUP3 DUP3 PUSH2 0xCDE JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x13F8DCEB PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x1CD95D105C1C1C9BDD985B119BDC905B1B PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x453 JUMP JUMPDEST PUSH0 PUSH2 0x75D PUSH2 0x9DD JUMP JUMPDEST PUSH2 0x5FA DUP4 DUP4 PUSH2 0xD2F JUMP JUMPDEST PUSH1 0x60 PUSH2 0x772 DUP3 PUSH2 0xC38 JUMP JUMPDEST PUSH0 PUSH1 0x1 DUP1 SLOAD PUSH2 0x780 SWAP1 PUSH2 0x1309 JUMP JUMPDEST SWAP1 POP GT PUSH2 0x79B JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x418 JUMP JUMPDEST PUSH1 0x1 PUSH2 0x7A6 DUP4 PUSH2 0xDB3 JUMP JUMPDEST PUSH0 DUP5 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x7BD SWAP1 PUSH2 0xDB3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x7CF SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1341 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x418 DUP3 PUSH2 0x98E JUMP JUMPDEST PUSH1 0x60 PUSH2 0x7F8 PUSH2 0x9DD JUMP JUMPDEST PUSH1 0x1 PUSH2 0x804 DUP4 DUP3 PUSH2 0x143D JUMP JUMPDEST POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x70E6A9DC20D331CE8E747D7DE8444F26F544D9003BEB11D8C46E802AB8D36FC9 DUP4 PUSH1 0x40 MLOAD PUSH2 0x83E SWAP2 SWAP1 PUSH2 0x107D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x1 DUP1 SLOAD PUSH2 0x853 SWAP1 PUSH2 0x1309 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x87F SWAP1 PUSH2 0x1309 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x8CA JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x8A1 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x8CA JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x8AD JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x13F8DCEB PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x1A5CD05C1C1C9BDD9959119BDC905B1B PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH0 SWAP1 PUSH1 0x64 ADD PUSH2 0x453 JUMP JUMPDEST PUSH2 0x91D PUSH2 0x9DD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x982 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x453 JUMP JUMPDEST PUSH2 0x98B DUP2 PUSH2 0xC8F JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 SUB PUSH2 0x9D6 JUMPI PUSH1 0x40 MLOAD PUSH4 0x904E928B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x453 JUMP JUMPDEST POP PUSH0 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x6B7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x453 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x3 SLOAD PUSH1 0x1 PUSH2 0xA47 SWAP2 SWAP1 PUSH2 0x150D JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xA72 JUMPI PUSH1 0x40 MLOAD PUSH4 0x74F5E87D PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x453 JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0xAAA JUMPI PUSH1 0x40 MLOAD PUSH4 0x79A15EE1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x453 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xADE JUMPI PUSH1 0x1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xAD8 SWAP2 SWAP1 PUSH2 0x150D JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP1 DUP2 ADD DUP3 SSTORE PUSH1 0x3 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE DUP8 DUP7 MSTORE PUSH1 0x4 DUP5 MSTORE DUP3 DUP7 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP9 OR SWAP1 SSTORE PUSH1 0x5 DUP5 MSTORE DUP3 DUP7 KECCAK256 DUP11 SWAP1 SSTORE PUSH1 0x6 DUP5 MSTORE DUP3 DUP7 KECCAK256 DUP2 SWAP1 SSTORE SWAP6 DUP6 MSTORE PUSH1 0x9 DUP4 MSTORE SWAP1 DUP5 KECCAK256 SWAP3 SWAP1 SWAP2 MSTORE SLOAD DUP5 SWAP4 SWAP2 SWAP3 SWAP2 PUSH2 0xB54 SWAP2 PUSH2 0x1520 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 DUP2 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x2F00E3CDD69A77BE7ED215EC7B2A36784DD158F921FCA79AC29DEFFA353FE6EE PUSH0 PUSH1 0x40 MLOAD PUSH2 0xBAF SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xBD1 PUSH0 DUP6 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0xE43 JUMP JUMPDEST PUSH2 0x5FA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x32 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x44 DUP3 ADD MSTORE PUSH18 0x31B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x71 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x453 JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xC6F JUMPI PUSH1 0x40 MLOAD PUSH4 0x24476A3F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x453 JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x713 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x98E JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0xCE8 DUP3 DUP3 PUSH2 0xEE5 JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP3 SWAP1 SSTORE MLOAD DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP2 PUSH32 0x154FA90F2D3692DF165AFACDCD7755B2E9D98A892A80CC1DDA63F3A9CC1E64A4 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xD3A DUP4 DUP4 PUSH2 0xEE5 JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0xD58 SWAP1 DUP5 SWAP1 PUSH2 0x150D JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SLOAD SWAP2 MLOAD DUP5 DUP2 MSTORE DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP2 PUSH32 0x48FFD7FDB1C1A0561A2D410317F6BB839AAB64898DE6FC73EE703A9C0DC0A36C SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH2 0xDBF DUP4 PUSH2 0xF29 JUMP JUMPDEST PUSH1 0x1 ADD SWAP1 POP PUSH0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xDDE JUMPI PUSH2 0xDDE PUSH2 0x1222 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xE08 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 ADD PUSH1 0x20 ADD JUMPDEST PUSH0 NOT ADD PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DIV SWAP5 POP DUP5 PUSH2 0xE12 JUMPI POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP4 EXTCODESIZE PUSH2 0xE52 JUMPI POP PUSH1 0x1 PUSH2 0xEDD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0xE86 SWAP1 CALLER SWAP1 DUP11 SWAP1 DUP10 SWAP1 DUP10 SWAP1 PUSH1 0x4 ADD PUSH2 0x1533 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xEA2 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xEC6 SWAP2 SWAP1 PUSH2 0x156F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ SWAP2 POP POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP2 AND EQ PUSH2 0x713 JUMPI PUSH1 0x40 MLOAD PUSH4 0x50159299 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x453 JUMP JUMPDEST PUSH0 DUP1 PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 LT PUSH2 0xF67 JUMPI PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 DIV SWAP3 POP PUSH1 0x40 ADD JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0xF93 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DIV SWAP3 POP PUSH1 0x20 ADD JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0xFB1 JUMPI PUSH7 0x2386F26FC10000 DUP4 DIV SWAP3 POP PUSH1 0x10 ADD JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0xFC9 JUMPI PUSH4 0x5F5E100 DUP4 DIV SWAP3 POP PUSH1 0x8 ADD JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0xFDD JUMPI PUSH2 0x2710 DUP4 DIV SWAP3 POP PUSH1 0x4 ADD JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0xFEF JUMPI PUSH1 0x64 DUP4 DIV SWAP3 POP PUSH1 0x2 ADD JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x418 JUMPI PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x98B JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1025 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x5FA DUP2 PUSH2 0x1000 JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x104A JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1032 JUMP JUMPDEST POP POP PUSH0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x1069 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x1030 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 PUSH2 0x5FA PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1052 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x109F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x8D2 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x10CD JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x10D6 DUP4 PUSH2 0x10A6 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x8D2 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1103 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x5FA DUP3 PUSH2 0x10E4 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x111C JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x5FA DUP3 PUSH2 0x10A6 JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1137 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1140 DUP5 PUSH2 0x10A6 JUMP JUMPDEST SWAP3 POP PUSH2 0x114E PUSH1 0x20 DUP6 ADD PUSH2 0x10A6 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x116F JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1178 DUP4 PUSH2 0x10A6 JUMP JUMPDEST SWAP2 POP PUSH2 0x1186 PUSH1 0x20 DUP5 ADD PUSH2 0x10E4 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0x80 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x11A3 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x11AC DUP7 PUSH2 0x10A6 JUMP JUMPDEST SWAP5 POP PUSH2 0x11BA PUSH1 0x20 DUP8 ADD PUSH2 0x10A6 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x11DD JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 DUP9 ADD SWAP2 POP DUP9 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x11F0 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x11FE JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP10 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x120F JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP7 SWAP10 SWAP6 SWAP9 POP SWAP4 SWAP7 POP PUSH1 0x20 ADD SWAP5 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1246 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x125D JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 DUP5 ADD SWAP2 POP DUP5 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1270 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x1282 JUMPI PUSH2 0x1282 PUSH2 0x1222 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x12AA JUMPI PUSH2 0x12AA PUSH2 0x1222 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP8 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x12C2 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH0 SWAP3 DUP2 ADD PUSH1 0x20 ADD SWAP3 SWAP1 SWAP3 MSTORE POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x12F2 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x12FB DUP4 PUSH2 0x10A6 JUMP JUMPDEST SWAP2 POP PUSH2 0x1186 PUSH1 0x20 DUP5 ADD PUSH2 0x10A6 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x131D JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x133B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 DUP6 SLOAD PUSH2 0x134E DUP2 PUSH2 0x1309 JUMP JUMPDEST PUSH1 0x1 DUP3 DUP2 AND DUP1 ISZERO PUSH2 0x1366 JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x137B JUMPI PUSH2 0x13A7 JUMP JUMPDEST PUSH1 0xFF NOT DUP5 AND DUP8 MSTORE DUP3 ISZERO ISZERO DUP4 MUL DUP8 ADD SWAP5 POP PUSH2 0x13A7 JUMP JUMPDEST DUP10 PUSH0 MSTORE PUSH1 0x20 DUP1 PUSH0 KECCAK256 PUSH0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x139E JUMPI DUP2 SLOAD DUP11 DUP3 ADD MSTORE SWAP1 DUP5 ADD SWAP1 DUP3 ADD PUSH2 0x1385 JUMP JUMPDEST POP POP POP DUP3 DUP8 ADD SWAP5 POP JUMPDEST POP POP POP POP DUP5 MLOAD PUSH2 0x13BB DUP2 DUP4 PUSH1 0x20 DUP10 ADD PUSH2 0x1030 JUMP JUMPDEST PUSH11 0x3F746F6B656E547970653D PUSH1 0xA8 SHL SWAP2 ADD SWAP1 DUP2 MSTORE DUP4 MLOAD PUSH2 0x13E2 DUP2 PUSH1 0xB DUP5 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x1030 JUMP JUMPDEST ADD PUSH1 0xB ADD SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x1438 JUMPI PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH2 0x1415 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1434 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1421 JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1457 JUMPI PUSH2 0x1457 PUSH2 0x1222 JUMP JUMPDEST PUSH2 0x146B DUP2 PUSH2 0x1465 DUP5 SLOAD PUSH2 0x1309 JUMP JUMPDEST DUP5 PUSH2 0x13EF JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x149E JUMPI PUSH0 DUP5 ISZERO PUSH2 0x1487 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0x1434 JUMP JUMPDEST PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x14CC JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x14AD JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x14E9 JUMPI DUP8 DUP6 ADD MLOAD PUSH0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x418 JUMPI PUSH2 0x418 PUSH2 0x14F9 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x418 JUMPI PUSH2 0x418 PUSH2 0x14F9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH0 SWAP1 PUSH2 0x1565 SWAP1 DUP4 ADD DUP5 PUSH2 0x1052 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x157F JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x5FA DUP2 PUSH2 0x1000 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH16 0x1C18825D3FAB6E9E47F6E6BB10FEBEC3 0xD3 0xA6 MSTORE8 0xD8 PUSH0 NUMBER PUSH19 0xDC448EAB8AB495E864736F6C63430008140033 ",
							"sourceMap": "791:11813:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2236:237;;;;;;:::i;:::-;;:::i;:::-;;;565:14:14;;558:22;540:41;;528:2;513:18;2236:237:9;;;;;;;;2732:91;2811:5;;;;;;;;;;;;-1:-1:-1;;;2811:5:9;;;;2732:91;;;;;;;:::i;7048:132::-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;1697:32:14;;;1679:51;;1667:2;1652:18;7048:132:9;1533:203:14;6796:111:9;;;;;;:::i;:::-;;:::i;:::-;;3664:89;3735:11;;3664:89;;;2324:25:14;;;2312:2;2297:18;3664:89:9;2178:177:14;4150:278:9;;;;;;:::i;:::-;;:::i;4434:103::-;;;;;;:::i;:::-;;:::i;6658:132::-;;;;;;:::i;:::-;;:::i;11044:458::-;;;;;;:::i;:::-;;:::i;7524:139::-;;;;;;:::i;:::-;;:::i;6512:140::-;;;;;;:::i;:::-;;:::i;9353:231::-;;;;;;:::i;:::-;;:::i;5470:237::-;;;;;;:::i;:::-;;:::i;5932:227::-;;;;;;:::i;:::-;;:::i;1824:101:0:-;;;:::i;3760:156:9:-;;;;;;:::i;:::-;;:::i;1201:85:0:-;1247:7;1273:6;-1:-1:-1;;;;;1273:6:0;1201:85;;8706:197:9;;;;;;:::i;:::-;;:::i;6913:129::-;;;;;;:::i;:::-;;:::i;6341:165::-;;;;;;:::i;10380:128::-;;;;;;:::i;:::-;;:::i;3045:321::-;;;;;;:::i;:::-;;:::i;4713:104::-;;;;;;:::i;:::-;;:::i;3373:193::-;;;;;;:::i;:::-;;:::i;3572:86::-;3641:10;;3572:86;;7186:143;;;;;;:::i;:::-;;:::i;2074:198:0:-;;;;;;:::i;:::-;;:::i;2236:237:9:-;2338:4;-1:-1:-1;;;;;;2374:40:9;;-1:-1:-1;;;2374:40:9;;:92;;-1:-1:-1;;;;;;;;;;937:40:5;;;2430:36:9;2354:112;2236:237;-1:-1:-1;;2236:237:9:o;7048:132::-;7130:41;;-1:-1:-1;;;7130:41:9;;5832:2:14;7130:41:9;;;5814:21:14;5871:2;5851:18;;;5844:30;-1:-1:-1;;;5890:18:14;;;5883:41;7102:7:9;;5941:18:14;;7130:41:9;;;;;;;;6796:111;6863:37;;-1:-1:-1;;;6863:37:9;;6172:2:14;6863:37:9;;;6154:21:14;6211:1;6191:18;;;6184:29;-1:-1:-1;;;6229:18:14;;;6222:37;6276:18;;6863:37:9;5970:330:14;4150:278:9;4241:10;4208:4;6250:17;;;:9;:17;;;;;;4208:4;-1:-1:-1;4224:105:9;;4280:38;;-1:-1:-1;;;4280:38:9;;4307:10;4280:38;;;1679:51:14;1652:18;;4280:38:9;1533:203:14;4224:105:9;4353:10;4339:25;;;;:13;:25;;;;;:40;;-1:-1:-1;;4339:40:9;;;;;;;4397:24;;4434:103;-1:-1:-1;;;;;4682:18:9;;4489:4;4682:18;;;:13;:18;;;;;;;;4512;4543:164;6658:132;6741:42;;-1:-1:-1;;;6741:42:9;;6507:2:14;6741:42:9;;;6489:21:14;6546:2;6526:18;;;6519:30;-1:-1:-1;;;6565:18:14;;;6558:42;6617:18;;6741:42:9;6305:336:14;11044:458:9;11126:7;11220:20;11233:6;11220:12;:20::i;:::-;-1:-1:-1;;;;;;6250:17:9;;6224:7;6250:17;;;:9;:17;;;;;;11259:6;:27;11251:52;;;;-1:-1:-1;;;11251:52:9;;6848:2:14;11251:52:9;;;6830:21:14;6887:2;6867:18;;;6860:30;-1:-1:-1;;;6906:18:14;;;6899:42;6958:18;;11251:52:9;6646:336:14;11251:52:9;-1:-1:-1;;;;;11318:20:9;;11314:99;;11361:41;;-1:-1:-1;;;11361:41:9;;11399:1;11361:41;;;1679:51:14;1652:18;;11361:41:9;1533:203:14;11314:99:9;-1:-1:-1;;;;;;11441:20:9;;;;11423:15;11441:20;;;:12;:20;;;;;;;;:28;;;;;;;;;11044:458::o;7524:139::-;7604:7;1094:13:0;:11;:13::i;:::-;7630:26:9::1;7640:3;7645:10;7630:9;:26::i;:::-;7623:33:::0;7524:139;-1:-1:-1;;;7524:139:9:o;6512:140::-;6599:46;;-1:-1:-1;;;6599:46:9;;7189:2:14;6599:46:9;;;7171:21:14;7228:2;7208:18;;;7201:30;-1:-1:-1;;;7247:18:14;;;7240:46;7303:18;;6599:46:9;6987:340:14;9353:231:9;9412:7;9507:29;9527:8;9507:19;:29::i;:::-;-1:-1:-1;9554:23:9;;;;:13;:23;;;;;;;9353:231::o;5470:237::-;5540:7;5636:29;5656:8;5636:19;:29::i;:::-;-1:-1:-1;5683:17:9;;;;:7;:17;;;;;;-1:-1:-1;;;;;5683:17:9;;5470:237::o;5932:227::-;5992:7;6088:20;6101:6;6088:12;:20::i;:::-;-1:-1:-1;;;;;;6250:17:9;;6224:7;6250:17;;;:9;:17;;;;;;6134:18;6165:109;1824:101:0;1094:13;:11;:13::i;:::-;1888:30:::1;1915:1;1888:18;:30::i;:::-;1824:101::o:0;3760:156:9:-;3821:7;3841:29;3861:8;3841:19;:29::i;:::-;-1:-1:-1;3888:21:9;;;;:11;:21;;;;;;;3760:156::o;8706:197::-;8774:10;-1:-1:-1;;;;;8774:17:9;;;8770:86;;8814:31;;-1:-1:-1;;;8814:31:9;;-1:-1:-1;;;;;1697:32:14;;8814:31:9;;;1679:51:14;1652:18;;8814:31:9;1533:203:14;8770:86:9;8865:31;8882:3;8887:8;8865:16;:31::i;:::-;8706:197;;:::o;6913:129::-;6988:47;;-1:-1:-1;;;6988:47:9;;7534:2:14;6988:47:9;;;7516:21:14;7573:2;7553:18;;;7546:30;-1:-1:-1;;;7592:18:14;;;7585:47;7649:18;;6988:47:9;7332:341:14;10380:128:9;10453:7;1094:13:0;:11;:13::i;:::-;10479:22:9::1;10487:3;10492:8;10479:7;:22::i;3045:321::-:0;3113:13;3180:29;3200:8;3180:19;:29::i;:::-;3252:1;3237:4;3231:18;;;;;:::i;:::-;;;:22;:128;;;;;;;;;;;;;;;;;3280:4;3285:19;:8;:17;:19::i;:::-;3320:21;;;;:11;:21;;;;;;:32;;:30;:32::i;:::-;3263:90;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;3224:135;3045:321;-1:-1:-1;;3045:321:9:o;4713:104::-;4770:4;4793:17;4806:3;4793:12;:17::i;3373:193::-;3446:13;1094::0;:11;:13::i;:::-;3471:4:9::1;:16;3478:9:::0;3471:4;:16:::1;:::i;:::-;;3515:10;-1:-1:-1::0;;;;;3503:34:9::1;;3527:9;3503:34;;;;;;:::i;:::-;;;;;;;;3555:4;3548:11;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1117:1:0;3373:193:9::0;;;:::o;7186:143::-;7276:46;;-1:-1:-1;;;7276:46:9;;11857:2:14;7276:46:9;;;11839:21:14;11896:2;11876:18;;;11869:30;-1:-1:-1;;;11915:18:14;;;11908:46;7253:4:9;;11971:18:14;;7276:46:9;11655:340:14;2074:198:0;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2162:22:0;::::1;2154:73;;;::::0;-1:-1:-1;;;2154:73:0;;12202:2:14;2154:73:0::1;::::0;::::1;12184:21:14::0;12241:2;12221:18;;;12214:30;12280:34;12260:18;;;12253:62;-1:-1:-1;;;12331:18:14;;;12324:36;12377:19;;2154:73:0::1;12000:402:14::0;2154:73:0::1;2237:28;2256:8;2237:18;:28::i;:::-;2074:198:::0;:::o;4823:204:9:-;-1:-1:-1;;;;;4909:18:9;;4881:4;4909:18;;;:13;:18;;;;;;;;:26;;:18;:26;4905:84;;4956:33;;-1:-1:-1;;;4956:33:9;;-1:-1:-1;;;;;1697:32:14;;4956:33:9;;;1679:51:14;1652:18;;4956:33:9;1533:203:14;4905:84:9;-1:-1:-1;5015:5:9;;4823:204;-1:-1:-1;4823:204:9:o;1359:130:0:-;1247:7;1273:6;-1:-1:-1;;;;;1273:6:0;719:10:3;1422:23:0;1414:68;;;;-1:-1:-1;;;1414:68:0;;12609:2:14;1414:68:0;;;12591:21:14;;;12628:18;;;12621:30;12687:34;12667:18;;;12660:62;12739:18;;1414:68:0;12407:356:14;7669:1031:9;7746:7;7766:15;7784:11;;7798:1;7784:15;;;;:::i;:::-;7766:33;-1:-1:-1;;;;;;7819:17:9;;7815:96;;7859:41;;-1:-1:-1;;;7859:41:9;;7897:1;7859:41;;;1679:51:14;1652:18;;7859:41:9;1533:203:14;7815:96:9;9953:4;5902:17;;;:7;:17;;;;;;-1:-1:-1;;;;;5902:17:9;9976:31;7921:87;;7964:33;;-1:-1:-1;;;7964:33:9;;;;;2324:25:14;;;2297:18;;7964:33:9;2178:177:14;7921:87:9;-1:-1:-1;;;;;10108:13:9;;10085:4;10108:13;;;:9;:13;;;;;;8069:63;;8120:1;8106:10;;:15;;;;;;;:::i;:::-;;;;-1:-1:-1;;8069:63:9;-1:-1:-1;;;;;8166:14:9;;;;;;:9;:14;;;;;;;;:19;;8184:1;8166:19;;;;;8199:11;:16;;;;;;8239;;;:7;:16;;;;;:22;;-1:-1:-1;;;;;;8239:22:9;;;;;8271:11;:20;;;;;:33;;;8314:13;:22;;;;;:26;;;8389:17;;;:12;:17;;;;;8407:14;;;;;8247:7;;8389:17;;8166:14;8407:16;;;:::i;:::-;8389:35;;;;;;;;;;;:45;;;;8497:10;8488:7;8483:3;-1:-1:-1;;;;;8466:42:9;;8479:1;8466:42;;;;;-1:-1:-1;;;;;1697:32:14;;;;1679:51;;1667:2;1652:18;;1533:203;8466:42:9;;;;;;;;8540:52;8571:1;8575:3;8580:7;8540:52;;;;;;;;;;;;:22;:52::i;:::-;8519:149;;;;-1:-1:-1;;;8519:149:9;;13365:2:14;8519:149:9;;;13347:21:14;13404:2;13384:18;;;13377:30;13443:34;13423:18;;;13416:62;-1:-1:-1;;;13494:18:14;;;13487:48;13552:19;;8519:149:9;13163:414:14;5033:302:9;9953:4;5902:17;;;:7;:17;;;;;;-1:-1:-1;;;;;5902:17:9;5191:96;;5236:40;;-1:-1:-1;;;5236:40:9;;;;;2324:25:14;;;2297:18;;5236:40:9;2178:177:14;5191:96:9;5310:17;;;;:7;:17;;;;;;5297:31;;-1:-1:-1;;;;;5310:17:9;5297:12;:31::i;2426:187:0:-;2499:16;2518:6;;-1:-1:-1;;;;;2534:17:0;;;-1:-1:-1;;;;;;2534:17:0;;;;;;2566:40;;2518:6;;;;;;;2566:40;;2499:16;2566:40;2489:124;2426:187;:::o;8909:229:9:-;9026:31;9043:3;9048:8;9026:16;:31::i;:::-;9094:1;9068:23;;;:13;:23;;;;;;:27;;;9111:20;9082:8;;-1:-1:-1;;;;;9111:20:9;;;;;9094:1;9111:20;8909:229;;:::o;10518:342::-;10583:7;10647:31;10664:3;10669:8;10647:16;:31::i;:::-;10689:23;;;;:13;:23;;;;;:28;;10716:1;;10689:23;:28;;10716:1;;10689:28;:::i;:::-;;;;-1:-1:-1;;10728:19:9;10751:23;;;:13;:23;;;;;;;;;;10790:34;;2324:25:14;;;10751:23:9;;-1:-1:-1;;;;;10790:34:9;;;;;2297:18:14;10790:34:9;;;;;;;10842:11;10518:342;-1:-1:-1;;;10518:342:9:o;447:696:4:-;503:13;552:14;569:17;580:5;569:10;:17::i;:::-;589:1;569:21;552:38;;604:20;638:6;627:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;627:18:4;-1:-1:-1;604:41:4;-1:-1:-1;765:28:4;;;781:2;765:28;820:280;-1:-1:-1;;851:5:4;-1:-1:-1;;;985:2:4;974:14;;969:30;851:5;956:44;1044:2;1035:11;;;-1:-1:-1;1064:21:4;820:280;1064:21;-1:-1:-1;1120:6:4;447:696;-1:-1:-1;;;447:696:4:o;12090:336:9:-;12203:4;12549:20;;12219:57;;-1:-1:-1;12261:4:9;12254:11;;12219:57;12302:72;;-1:-1:-1;;;12302:72:9;;12286:13;;-1:-1:-1;;;;;12302:36:9;;;;;:72;;719:10:3;;12353:4:9;;12359:7;;12368:5;;12302:72;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;12392:26:9;-1:-1:-1;;;12392:26:9;;-1:-1:-1;;12090:336:9;;;;;;;:::o;11901:183::-;5876:7;5902:17;;;:7;:17;;;;;;-1:-1:-1;;;;;11991:23:9;;;5902:17;;11991:23;11988:90;;12037:30;;-1:-1:-1;;;12037:30:9;;-1:-1:-1;;;;;1697:32:14;;12037:30:9;;;1679:51:14;1652:18;;12037:30:9;1533:203:14;10139:916:7;10192:7;;-1:-1:-1;;;10267:17:7;;10263:103;;-1:-1:-1;;;10304:17:7;;;-1:-1:-1;10349:2:7;10339:12;10263:103;10392:8;10383:5;:17;10379:103;;10429:8;10420:17;;;-1:-1:-1;10465:2:7;10455:12;10379:103;10508:8;10499:5;:17;10495:103;;10545:8;10536:17;;;-1:-1:-1;10581:2:7;10571:12;10495:103;10624:7;10615:5;:16;10611:100;;10660:7;10651:16;;;-1:-1:-1;10695:1:7;10685:11;10611:100;10737:7;10728:5;:16;10724:100;;10773:7;10764:16;;;-1:-1:-1;10808:1:7;10798:11;10724:100;10850:7;10841:5;:16;10837:100;;10886:7;10877:16;;;-1:-1:-1;10921:1:7;10911:11;10837:100;10963:7;10954:5;:16;10950:66;;11000:1;10990:11;11042:6;10139:916;-1:-1:-1;;10139:916:7:o;14:131:14:-;-1:-1:-1;;;;;;88:32:14;;78:43;;68:71;;135:1;132;125:12;150:245;208:6;261:2;249:9;240:7;236:23;232:32;229:52;;;277:1;274;267:12;229:52;316:9;303:23;335:30;359:5;335:30;:::i;592:250::-;677:1;687:113;701:6;698:1;695:13;687:113;;;777:11;;;771:18;758:11;;;751:39;723:2;716:10;687:113;;;-1:-1:-1;;834:1:14;816:16;;809:27;592:250::o;847:271::-;889:3;927:5;921:12;954:6;949:3;942:19;970:76;1039:6;1032:4;1027:3;1023:14;1016:4;1009:5;1005:16;970:76;:::i;:::-;1100:2;1079:15;-1:-1:-1;;1075:29:14;1066:39;;;;1107:4;1062:50;;847:271;-1:-1:-1;;847:271:14:o;1123:220::-;1272:2;1261:9;1254:21;1235:4;1292:45;1333:2;1322:9;1318:18;1310:6;1292:45;:::i;1348:180::-;1407:6;1460:2;1448:9;1439:7;1435:23;1431:32;1428:52;;;1476:1;1473;1466:12;1428:52;-1:-1:-1;1499:23:14;;1348:180;-1:-1:-1;1348:180:14:o;1741:173::-;1809:20;;-1:-1:-1;;;;;1858:31:14;;1848:42;;1838:70;;1904:1;1901;1894:12;1919:254;1987:6;1995;2048:2;2036:9;2027:7;2023:23;2019:32;2016:52;;;2064:1;2061;2054:12;2016:52;2087:29;2106:9;2087:29;:::i;:::-;2077:39;2163:2;2148:18;;;;2135:32;;-1:-1:-1;;;1919:254:14:o;2360:160::-;2425:20;;2481:13;;2474:21;2464:32;;2454:60;;2510:1;2507;2500:12;2525:180;2581:6;2634:2;2622:9;2613:7;2609:23;2605:32;2602:52;;;2650:1;2647;2640:12;2602:52;2673:26;2689:9;2673:26;:::i;2710:186::-;2769:6;2822:2;2810:9;2801:7;2797:23;2793:32;2790:52;;;2838:1;2835;2828:12;2790:52;2861:29;2880:9;2861:29;:::i;2901:328::-;2978:6;2986;2994;3047:2;3035:9;3026:7;3022:23;3018:32;3015:52;;;3063:1;3060;3053:12;3015:52;3086:29;3105:9;3086:29;:::i;:::-;3076:39;;3134:38;3168:2;3157:9;3153:18;3134:38;:::i;:::-;3124:48;;3219:2;3208:9;3204:18;3191:32;3181:42;;2901:328;;;;;:::o;3234:254::-;3299:6;3307;3360:2;3348:9;3339:7;3335:23;3331:32;3328:52;;;3376:1;3373;3366:12;3328:52;3399:29;3418:9;3399:29;:::i;:::-;3389:39;;3447:35;3478:2;3467:9;3463:18;3447:35;:::i;:::-;3437:45;;3234:254;;;;;:::o;3493:808::-;3590:6;3598;3606;3614;3622;3675:3;3663:9;3654:7;3650:23;3646:33;3643:53;;;3692:1;3689;3682:12;3643:53;3715:29;3734:9;3715:29;:::i;:::-;3705:39;;3763:38;3797:2;3786:9;3782:18;3763:38;:::i;:::-;3753:48;;3848:2;3837:9;3833:18;3820:32;3810:42;;3903:2;3892:9;3888:18;3875:32;3926:18;3967:2;3959:6;3956:14;3953:34;;;3983:1;3980;3973:12;3953:34;4021:6;4010:9;4006:22;3996:32;;4066:7;4059:4;4055:2;4051:13;4047:27;4037:55;;4088:1;4085;4078:12;4037:55;4128:2;4115:16;4154:2;4146:6;4143:14;4140:34;;;4170:1;4167;4160:12;4140:34;4215:7;4210:2;4201:6;4197:2;4193:15;4189:24;4186:37;4183:57;;;4236:1;4233;4226:12;4183:57;3493:808;;;;-1:-1:-1;3493:808:14;;-1:-1:-1;4267:2:14;4259:11;;4289:6;3493:808;-1:-1:-1;;;3493:808:14:o;4306:127::-;4367:10;4362:3;4358:20;4355:1;4348:31;4398:4;4395:1;4388:15;4422:4;4419:1;4412:15;4438:922;4507:6;4560:2;4548:9;4539:7;4535:23;4531:32;4528:52;;;4576:1;4573;4566:12;4528:52;4616:9;4603:23;4645:18;4686:2;4678:6;4675:14;4672:34;;;4702:1;4699;4692:12;4672:34;4740:6;4729:9;4725:22;4715:32;;4785:7;4778:4;4774:2;4770:13;4766:27;4756:55;;4807:1;4804;4797:12;4756:55;4843:2;4830:16;4865:2;4861;4858:10;4855:36;;;4871:18;;:::i;:::-;4946:2;4940:9;4914:2;5000:13;;-1:-1:-1;;4996:22:14;;;5020:2;4992:31;4988:40;4976:53;;;5044:18;;;5064:22;;;5041:46;5038:72;;;5090:18;;:::i;:::-;5130:10;5126:2;5119:22;5165:2;5157:6;5150:18;5205:7;5200:2;5195;5191;5187:11;5183:20;5180:33;5177:53;;;5226:1;5223;5216:12;5177:53;5282:2;5277;5273;5269:11;5264:2;5256:6;5252:15;5239:46;5327:1;5305:15;;;5322:2;5301:24;5294:35;;;;-1:-1:-1;5309:6:14;4438:922;-1:-1:-1;;;;;4438:922:14:o;5365:260::-;5433:6;5441;5494:2;5482:9;5473:7;5469:23;5465:32;5462:52;;;5510:1;5507;5500:12;5462:52;5533:29;5552:9;5533:29;:::i;:::-;5523:39;;5581:38;5615:2;5604:9;5600:18;5581:38;:::i;7678:380::-;7757:1;7753:12;;;;7800;;;7821:61;;7875:4;7867:6;7863:17;7853:27;;7821:61;7928:2;7920:6;7917:14;7897:18;7894:38;7891:161;;7974:10;7969:3;7965:20;7962:1;7955:31;8009:4;8006:1;7999:15;8037:4;8034:1;8027:15;7891:161;;7678:380;;;:::o;8189:1383::-;8514:3;8543:1;8576:6;8570:13;8606:36;8632:9;8606:36;:::i;:::-;8661:1;8678:18;;;8705:133;;;;8852:1;8847:356;;;;8671:532;;8705:133;-1:-1:-1;;8738:24:14;;8726:37;;8811:14;;8804:22;8792:35;;8783:45;;;-1:-1:-1;8705:133:14;;8847:356;8878:6;8875:1;8868:17;8908:4;8953:2;8950:1;8940:16;8978:1;8992:165;9006:6;9003:1;9000:13;8992:165;;;9084:14;;9071:11;;;9064:35;9127:16;;;;9021:10;;8992:165;;;8996:3;;;9186:6;9181:3;9177:16;9170:23;;8671:532;;;;;9234:6;9228:13;9250:68;9309:8;9304:3;9297:4;9289:6;9285:17;9250:68;:::i;:::-;-1:-1:-1;;;9340:18:14;;9367:28;;;9420:13;;9442:79;9420:13;9507:2;9496:14;;9489:4;9477:17;;9442:79;:::i;:::-;9541:20;9563:2;9537:29;;8189:1383;-1:-1:-1;;;;;8189:1383:14:o;9577:545::-;9679:2;9674:3;9671:11;9668:448;;;9715:1;9740:5;9736:2;9729:17;9785:4;9781:2;9771:19;9855:2;9843:10;9839:19;9836:1;9832:27;9826:4;9822:38;9891:4;9879:10;9876:20;9873:47;;;-1:-1:-1;9914:4:14;9873:47;9969:2;9964:3;9960:12;9957:1;9953:20;9947:4;9943:31;9933:41;;10024:82;10042:2;10035:5;10032:13;10024:82;;;10087:17;;;10068:1;10057:13;10024:82;;;10028:3;;;9668:448;9577:545;;;:::o;10298:1352::-;10424:3;10418:10;10451:18;10443:6;10440:30;10437:56;;;10473:18;;:::i;:::-;10502:97;10592:6;10552:38;10584:4;10578:11;10552:38;:::i;:::-;10546:4;10502:97;:::i;:::-;10654:4;;10718:2;10707:14;;10735:1;10730:663;;;;11437:1;11454:6;11451:89;;;-1:-1:-1;11506:19:14;;;11500:26;11451:89;-1:-1:-1;;10255:1:14;10251:11;;;10247:24;10243:29;10233:40;10279:1;10275:11;;;10230:57;11553:81;;10700:944;;10730:663;8136:1;8129:14;;;8173:4;8160:18;;-1:-1:-1;;10766:20:14;;;10884:236;10898:7;10895:1;10892:14;10884:236;;;10987:19;;;10981:26;10966:42;;11079:27;;;;11047:1;11035:14;;;;10914:19;;10884:236;;;10888:3;11148:6;11139:7;11136:19;11133:201;;;11209:19;;;11203:26;-1:-1:-1;;11292:1:14;11288:14;;;11304:3;11284:24;11280:37;11276:42;11261:58;11246:74;;11133:201;-1:-1:-1;;;;;11380:1:14;11364:14;;;11360:22;11347:36;;-1:-1:-1;10298:1352:14:o;12768:127::-;12829:10;12824:3;12820:20;12817:1;12810:31;12860:4;12857:1;12850:15;12884:4;12881:1;12874:15;12900:125;12965:9;;;12986:10;;;12983:36;;;12999:18;;:::i;13030:128::-;13097:9;;;13118:11;;;13115:37;;;13132:18;;:::i;13714:489::-;-1:-1:-1;;;;;13983:15:14;;;13965:34;;14035:15;;14030:2;14015:18;;14008:43;14082:2;14067:18;;14060:34;;;14130:3;14125:2;14110:18;;14103:31;;;13908:4;;14151:46;;14177:19;;14169:6;14151:46;:::i;:::-;14143:54;13714:489;-1:-1:-1;;;;;;13714:489:14:o;14208:249::-;14277:6;14330:2;14318:9;14309:7;14305:23;14301:32;14298:52;;;14346:1;14343;14336:12;14298:52;14378:9;14372:16;14397:30;14421:5;14397:30;:::i"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1113600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"approve(address,uint256)": "481",
								"balanceOf(address)": "4943",
								"getApproved(uint256)": "418",
								"getGrowth(uint256)": "9195",
								"getProtected(address)": "2681",
								"getTokenType(uint256)": "9196",
								"growUp(address,uint256)": "33269",
								"isApprovedForAll(address,address)": "infinite",
								"isProtected(address)": "2719",
								"mint(address,uint256)": "infinite",
								"name()": "infinite",
								"owner()": "2419",
								"ownerOf(uint256)": "9256",
								"renounceOwnership()": "infinite",
								"reset(address,uint256)": "infinite",
								"safeTransferFrom(address,address,uint256)": "infinite",
								"safeTransferFrom(address,address,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "infinite",
								"setProtected(bool)": "infinite",
								"setTokenURI(string)": "infinite",
								"supportsInterface(bytes4)": "499",
								"symbol()": "infinite",
								"tokenOfOwnerByIndex(address,uint256)": "7223",
								"tokenURI(uint256)": "infinite",
								"totalSupply()": "2348",
								"totalUser()": "2357",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "28439"
							},
							"internal": {
								"_balanceOf(address)": "infinite",
								"_checkOnERC721Received(address,address,uint256,bytes memory)": "infinite",
								"_exists(uint256)": "infinite",
								"_existsOwner(address)": "infinite",
								"_getProtected(address)": "infinite",
								"_growUp(address,uint256)": "infinite",
								"_isProtected(address)": "infinite",
								"_isProtectedTokenId(uint256)": "infinite",
								"_ownerOf(uint256)": "infinite",
								"_requireMintedOf(address,uint256)": "infinite",
								"_safeMint(address,uint256)": "infinite",
								"_setGrowthToZero(address,uint256)": "infinite",
								"isContract(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 791,
									"end": 12604,
									"name": "PUSH",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 791,
									"end": 12604,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 791,
									"end": 12604,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 2027,
									"end": 2169,
									"name": "CALLVALUE",
									"source": 9
								},
								{
									"begin": 2027,
									"end": 2169,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 2027,
									"end": 2169,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 2027,
									"end": 2169,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 2027,
									"end": 2169,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 2027,
									"end": 2169,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2027,
									"end": 2169,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 2027,
									"end": 2169,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 2027,
									"end": 2169,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 2027,
									"end": 2169,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2027,
									"end": 2169,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2027,
									"end": 2169,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 2027,
									"end": 2169,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 2027,
									"end": 2169,
									"name": "PUSHSIZE",
									"source": 9
								},
								{
									"begin": 2027,
									"end": 2169,
									"name": "CODESIZE",
									"source": 9
								},
								{
									"begin": 2027,
									"end": 2169,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 2027,
									"end": 2169,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 2027,
									"end": 2169,
									"name": "PUSHSIZE",
									"source": 9
								},
								{
									"begin": 2027,
									"end": 2169,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 2027,
									"end": 2169,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 2027,
									"end": 2169,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2027,
									"end": 2169,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2027,
									"end": 2169,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 2027,
									"end": 2169,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2027,
									"end": 2169,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2027,
									"end": 2169,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 2027,
									"end": 2169,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 2027,
									"end": 2169,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 2027,
									"end": 2169,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "3"
								},
								{
									"begin": 2027,
									"end": 2169,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2027,
									"end": 2169,
									"name": "tag",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 2027,
									"end": 2169,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 936,
									"end": 968,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 3
								},
								{
									"begin": 936,
									"end": 954,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 936,
									"end": 968,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 936,
									"end": 968,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2069,
									"end": 2073,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 2069,
									"end": 2080,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "12"
								},
								{
									"begin": 2076,
									"end": 2080,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2069,
									"end": 2073,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2069,
									"end": 2080,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "13"
								},
								{
									"begin": 2069,
									"end": 2080,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2069,
									"end": 2080,
									"name": "tag",
									"source": 9,
									"value": "12"
								},
								{
									"begin": 2069,
									"end": 2080,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2141,
									"end": 2146,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 2141,
									"end": 2146,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 2141,
									"end": 2146,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 2141,
									"end": 2146,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 2141,
									"end": 2146,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2141,
									"end": 2146,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2141,
									"end": 2146,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2141,
									"end": 2146,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 2141,
									"end": 2146,
									"name": "PUSH",
									"source": 9,
									"value": "6"
								},
								{
									"begin": 2141,
									"end": 2146,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 2141,
									"end": 2146,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2141,
									"end": 2146,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1213D394D095"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "D2"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 2141,
									"end": 2146,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 2141,
									"end": 2146,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 2141,
									"end": 2146,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 2141,
									"end": 2146,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2141,
									"end": 2146,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2141,
									"end": 2146,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2141,
									"end": 2146,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 2148,
									"end": 2155,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 2148,
									"end": 2155,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 2148,
									"end": 2155,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 2148,
									"end": 2155,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 2148,
									"end": 2155,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2148,
									"end": 2155,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 2148,
									"end": 2155,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 2148,
									"end": 2155,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 2148,
									"end": 2155,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 2148,
									"end": 2155,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 2148,
									"end": 2155,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2148,
									"end": 2155,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2148,
									"end": 2155,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 2096,
									"end": 2162,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 2096,
									"end": 2162,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 2112,
									"end": 2122,
									"name": "CALLER",
									"source": 9
								},
								{
									"begin": 2112,
									"end": 2122,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 2096,
									"end": 2162,
									"name": "PUSH",
									"source": 9,
									"value": "DDB33C9627985605622B2C4E8B308152B557AEAE8BA59E2F05038C9D8ED6AE84"
								},
								{
									"begin": 2096,
									"end": 2162,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 2096,
									"end": 2162,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "14"
								},
								{
									"begin": 2096,
									"end": 2162,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 2124,
									"end": 2139,
									"name": "TIMESTAMP",
									"source": 9
								},
								{
									"begin": 2124,
									"end": 2139,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 2148,
									"end": 2155,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2157,
									"end": 2161,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 2157,
									"end": 2161,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2096,
									"end": 2162,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "15"
								},
								{
									"begin": 2096,
									"end": 2162,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2096,
									"end": 2162,
									"name": "tag",
									"source": 9,
									"value": "14"
								},
								{
									"begin": 2096,
									"end": 2162,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2096,
									"end": 2162,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 2096,
									"end": 2162,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 2096,
									"end": 2162,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 2096,
									"end": 2162,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 2096,
									"end": 2162,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 2096,
									"end": 2162,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2096,
									"end": 2162,
									"name": "LOG2",
									"source": 9
								},
								{
									"begin": 2027,
									"end": 2169,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 791,
									"end": 12604,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "26"
								},
								{
									"begin": 791,
									"end": 12604,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2426,
									"end": 2613,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 2426,
									"end": 2613,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2499,
									"end": 2515,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2499,
									"end": 2515,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2489,
									"end": 2613,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2426,
									"end": 2613,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2426,
									"end": 2613,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 141,
									"name": "tag",
									"source": 14,
									"value": "19"
								},
								{
									"begin": 14,
									"end": 141,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 75,
									"end": 85,
									"name": "PUSH",
									"source": 14,
									"value": "4E487B71"
								},
								{
									"begin": 70,
									"end": 73,
									"name": "PUSH",
									"source": 14,
									"value": "E0"
								},
								{
									"begin": 66,
									"end": 86,
									"name": "SHL",
									"source": 14
								},
								{
									"begin": 63,
									"end": 64,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 87,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 106,
									"end": 110,
									"name": "PUSH",
									"source": 14,
									"value": "41"
								},
								{
									"begin": 103,
									"end": 104,
									"name": "PUSH",
									"source": 14,
									"value": "4"
								},
								{
									"begin": 96,
									"end": 111,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 130,
									"end": 134,
									"name": "PUSH",
									"source": 14,
									"value": "24"
								},
								{
									"begin": 127,
									"end": 128,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 135,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 146,
									"end": 396,
									"name": "tag",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 146,
									"end": 396,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 231,
									"end": 232,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 241,
									"end": 354,
									"name": "tag",
									"source": 14,
									"value": "29"
								},
								{
									"begin": 241,
									"end": 354,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 255,
									"end": 261,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 252,
									"end": 253,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 249,
									"end": 262,
									"name": "LT",
									"source": 14
								},
								{
									"begin": 241,
									"end": 354,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 241,
									"end": 354,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "31"
								},
								{
									"begin": 241,
									"end": 354,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 331,
									"end": 342,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 331,
									"end": 342,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 331,
									"end": 342,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 325,
									"end": 343,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 312,
									"end": 323,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 312,
									"end": 323,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 312,
									"end": 323,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 305,
									"end": 344,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 277,
									"end": 279,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 270,
									"end": 280,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 241,
									"end": 354,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "29"
								},
								{
									"begin": 241,
									"end": 354,
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 241,
									"end": 354,
									"name": "tag",
									"source": 14,
									"value": "31"
								},
								{
									"begin": 241,
									"end": 354,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 388,
									"end": 389,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 370,
									"end": 386,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 370,
									"end": 386,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 363,
									"end": 390,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 146,
									"end": 396,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 401,
									"end": 1298,
									"name": "tag",
									"source": 14,
									"value": "3"
								},
								{
									"begin": 401,
									"end": 1298,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 481,
									"end": 487,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 534,
									"end": 536,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 522,
									"end": 531,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 513,
									"end": 520,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 509,
									"end": 532,
									"name": "SUB",
									"source": 14
								},
								{
									"begin": 505,
									"end": 537,
									"name": "SLT",
									"source": 14
								},
								{
									"begin": 502,
									"end": 554,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 502,
									"end": 554,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "33"
								},
								{
									"begin": 502,
									"end": 554,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 550,
									"end": 551,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 547,
									"end": 548,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 540,
									"end": 552,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 502,
									"end": 554,
									"name": "tag",
									"source": 14,
									"value": "33"
								},
								{
									"begin": 502,
									"end": 554,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 577,
									"end": 593,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 577,
									"end": 593,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 642,
									"end": 656,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 642,
									"end": 656,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 642,
									"end": 656,
									"name": "GT",
									"source": 14
								},
								{
									"begin": 639,
									"end": 673,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 639,
									"end": 673,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "34"
								},
								{
									"begin": 639,
									"end": 673,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 669,
									"end": 670,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 666,
									"end": 667,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 659,
									"end": 671,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 639,
									"end": 673,
									"name": "tag",
									"source": 14,
									"value": "34"
								},
								{
									"begin": 639,
									"end": 673,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 707,
									"end": 713,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 696,
									"end": 705,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 692,
									"end": 714,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 682,
									"end": 714,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 682,
									"end": 714,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 752,
									"end": 759,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 745,
									"end": 749,
									"name": "PUSH",
									"source": 14,
									"value": "1F"
								},
								{
									"begin": 741,
									"end": 743,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 737,
									"end": 750,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 733,
									"end": 760,
									"name": "SLT",
									"source": 14
								},
								{
									"begin": 723,
									"end": 778,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "35"
								},
								{
									"begin": 723,
									"end": 778,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 774,
									"end": 775,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 771,
									"end": 772,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 764,
									"end": 776,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 723,
									"end": 778,
									"name": "tag",
									"source": 14,
									"value": "35"
								},
								{
									"begin": 723,
									"end": 778,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 803,
									"end": 805,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 797,
									"end": 806,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 825,
									"end": 827,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 821,
									"end": 823,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 818,
									"end": 828,
									"name": "GT",
									"source": 14
								},
								{
									"begin": 815,
									"end": 851,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 815,
									"end": 851,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "37"
								},
								{
									"begin": 815,
									"end": 851,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 831,
									"end": 849,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "37"
								},
								{
									"begin": 831,
									"end": 849,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "19"
								},
								{
									"begin": 831,
									"end": 849,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 831,
									"end": 849,
									"name": "tag",
									"source": 14,
									"value": "37"
								},
								{
									"begin": 831,
									"end": 849,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 906,
									"end": 908,
									"name": "PUSH",
									"source": 14,
									"value": "40"
								},
								{
									"begin": 900,
									"end": 909,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 874,
									"end": 876,
									"name": "PUSH",
									"source": 14,
									"value": "1F"
								},
								{
									"begin": 960,
									"end": 973,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 960,
									"end": 973,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 956,
									"end": 978,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 956,
									"end": 978,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 956,
									"end": 978,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 980,
									"end": 982,
									"name": "PUSH",
									"source": 14,
									"value": "3F"
								},
								{
									"begin": 952,
									"end": 983,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 948,
									"end": 988,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 936,
									"end": 989,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 936,
									"end": 989,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 936,
									"end": 989,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 1004,
									"end": 1022,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 1004,
									"end": 1022,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 1004,
									"end": 1022,
									"name": "GT",
									"source": 14
								},
								{
									"begin": 1024,
									"end": 1046,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 1024,
									"end": 1046,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 1024,
									"end": 1046,
									"name": "LT",
									"source": 14
								},
								{
									"begin": 1001,
									"end": 1047,
									"name": "OR",
									"source": 14
								},
								{
									"begin": 998,
									"end": 1070,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 998,
									"end": 1070,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "39"
								},
								{
									"begin": 998,
									"end": 1070,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 1050,
									"end": 1068,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "39"
								},
								{
									"begin": 1050,
									"end": 1068,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "19"
								},
								{
									"begin": 1050,
									"end": 1068,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 1050,
									"end": 1068,
									"name": "tag",
									"source": 14,
									"value": "39"
								},
								{
									"begin": 1050,
									"end": 1068,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1090,
									"end": 1100,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 1086,
									"end": 1088,
									"name": "PUSH",
									"source": 14,
									"value": "40"
								},
								{
									"begin": 1079,
									"end": 1101,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 1125,
									"end": 1127,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 1117,
									"end": 1123,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 1110,
									"end": 1128,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 1165,
									"end": 1172,
									"name": "DUP8",
									"source": 14
								},
								{
									"begin": 1160,
									"end": 1162,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 1155,
									"end": 1157,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 1151,
									"end": 1153,
									"name": "DUP8",
									"source": 14
								},
								{
									"begin": 1147,
									"end": 1158,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 1143,
									"end": 1163,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 1140,
									"end": 1173,
									"name": "GT",
									"source": 14
								},
								{
									"begin": 1137,
									"end": 1190,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 1137,
									"end": 1190,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "40"
								},
								{
									"begin": 1137,
									"end": 1190,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 1186,
									"end": 1187,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 1183,
									"end": 1184,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 1176,
									"end": 1188,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 1137,
									"end": 1190,
									"name": "tag",
									"source": 14,
									"value": "40"
								},
								{
									"begin": 1137,
									"end": 1190,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1199,
									"end": 1267,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "41"
								},
								{
									"begin": 1264,
									"end": 1266,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 1259,
									"end": 1261,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 1251,
									"end": 1257,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 1247,
									"end": 1262,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 1242,
									"end": 1244,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 1238,
									"end": 1240,
									"name": "DUP9",
									"source": 14
								},
								{
									"begin": 1234,
									"end": 1245,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 1199,
									"end": 1267,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 1199,
									"end": 1267,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 1199,
									"end": 1267,
									"name": "tag",
									"source": 14,
									"value": "41"
								},
								{
									"begin": 1199,
									"end": 1267,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1286,
									"end": 1292,
									"name": "SWAP8",
									"source": 14
								},
								{
									"begin": 401,
									"end": 1298,
									"name": "SWAP7",
									"source": 14
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 401,
									"end": 1298,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 1303,
									"end": 1683,
									"name": "tag",
									"source": 14,
									"value": "21"
								},
								{
									"begin": 1303,
									"end": 1683,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1382,
									"end": 1383,
									"name": "PUSH",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 1378,
									"end": 1390,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 1378,
									"end": 1390,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 1378,
									"end": 1390,
									"name": "SHR",
									"source": 14
								},
								{
									"begin": 1378,
									"end": 1390,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 1425,
									"end": 1437,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 1425,
									"end": 1437,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 1425,
									"end": 1437,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 1446,
									"end": 1507,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "43"
								},
								{
									"begin": 1446,
									"end": 1507,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 1500,
									"end": 1504,
									"name": "PUSH",
									"source": 14,
									"value": "7F"
								},
								{
									"begin": 1492,
									"end": 1498,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 1488,
									"end": 1505,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 1478,
									"end": 1505,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 1478,
									"end": 1505,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1446,
									"end": 1507,
									"name": "tag",
									"source": 14,
									"value": "43"
								},
								{
									"begin": 1446,
									"end": 1507,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1553,
									"end": 1555,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 1545,
									"end": 1551,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 1542,
									"end": 1556,
									"name": "LT",
									"source": 14
								},
								{
									"begin": 1522,
									"end": 1540,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 1519,
									"end": 1557,
									"name": "SUB",
									"source": 14
								},
								{
									"begin": 1516,
									"end": 1677,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "44"
								},
								{
									"begin": 1516,
									"end": 1677,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 1599,
									"end": 1609,
									"name": "PUSH",
									"source": 14,
									"value": "4E487B71"
								},
								{
									"begin": 1594,
									"end": 1597,
									"name": "PUSH",
									"source": 14,
									"value": "E0"
								},
								{
									"begin": 1590,
									"end": 1610,
									"name": "SHL",
									"source": 14
								},
								{
									"begin": 1587,
									"end": 1588,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 1580,
									"end": 1611,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 1634,
									"end": 1638,
									"name": "PUSH",
									"source": 14,
									"value": "22"
								},
								{
									"begin": 1631,
									"end": 1632,
									"name": "PUSH",
									"source": 14,
									"value": "4"
								},
								{
									"begin": 1624,
									"end": 1639,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 1662,
									"end": 1666,
									"name": "PUSH",
									"source": 14,
									"value": "24"
								},
								{
									"begin": 1659,
									"end": 1660,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 1652,
									"end": 1667,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 1516,
									"end": 1677,
									"name": "tag",
									"source": 14,
									"value": "44"
								},
								{
									"begin": 1516,
									"end": 1677,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1516,
									"end": 1677,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1303,
									"end": 1683,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 1303,
									"end": 1683,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 1303,
									"end": 1683,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1303,
									"end": 1683,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 1814,
									"end": 2359,
									"name": "tag",
									"source": 14,
									"value": "23"
								},
								{
									"begin": 1814,
									"end": 2359,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1916,
									"end": 1918,
									"name": "PUSH",
									"source": 14,
									"value": "1F"
								},
								{
									"begin": 1911,
									"end": 1914,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 1908,
									"end": 1919,
									"name": "GT",
									"source": 14
								},
								{
									"begin": 1905,
									"end": 2353,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 1905,
									"end": 2353,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "47"
								},
								{
									"begin": 1905,
									"end": 2353,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 1952,
									"end": 1953,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 1977,
									"end": 1982,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 1973,
									"end": 1975,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 1966,
									"end": 1983,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 2022,
									"end": 2026,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 2018,
									"end": 2020,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 2008,
									"end": 2027,
									"name": "KECCAK256",
									"source": 14
								},
								{
									"begin": 2092,
									"end": 2094,
									"name": "PUSH",
									"source": 14,
									"value": "1F"
								},
								{
									"begin": 2080,
									"end": 2090,
									"name": "DUP6",
									"source": 14
								},
								{
									"begin": 2076,
									"end": 2095,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 2073,
									"end": 2074,
									"name": "PUSH",
									"source": 14,
									"value": "5"
								},
								{
									"begin": 2069,
									"end": 2096,
									"name": "SHR",
									"source": 14
								},
								{
									"begin": 2063,
									"end": 2067,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 2059,
									"end": 2097,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 2128,
									"end": 2132,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 2116,
									"end": 2126,
									"name": "DUP7",
									"source": 14
								},
								{
									"begin": 2113,
									"end": 2133,
									"name": "LT",
									"source": 14
								},
								{
									"begin": 2110,
									"end": 2157,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 2110,
									"end": 2157,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "48"
								},
								{
									"begin": 2110,
									"end": 2157,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2151,
									"end": 2155,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 2110,
									"end": 2157,
									"name": "tag",
									"source": 14,
									"value": "48"
								},
								{
									"begin": 2110,
									"end": 2157,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 2206,
									"end": 2208,
									"name": "PUSH",
									"source": 14,
									"value": "1F"
								},
								{
									"begin": 2201,
									"end": 2204,
									"name": "DUP6",
									"source": 14
								},
								{
									"begin": 2197,
									"end": 2209,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 2194,
									"end": 2195,
									"name": "PUSH",
									"source": 14,
									"value": "5"
								},
								{
									"begin": 2190,
									"end": 2210,
									"name": "SHR",
									"source": 14
								},
								{
									"begin": 2184,
									"end": 2188,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 2180,
									"end": 2211,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 2170,
									"end": 2211,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 2170,
									"end": 2211,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2261,
									"end": 2343,
									"name": "tag",
									"source": 14,
									"value": "49"
								},
								{
									"begin": 2261,
									"end": 2343,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 2279,
									"end": 2281,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 2272,
									"end": 2277,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 2269,
									"end": 2282,
									"name": "LT",
									"source": 14
								},
								{
									"begin": 2261,
									"end": 2343,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 2261,
									"end": 2343,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "51"
								},
								{
									"begin": 2261,
									"end": 2343,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 2324,
									"end": 2341,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 2324,
									"end": 2341,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 2324,
									"end": 2341,
									"name": "SSTORE",
									"source": 14
								},
								{
									"begin": 2305,
									"end": 2306,
									"name": "PUSH",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 2294,
									"end": 2307,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 2261,
									"end": 2343,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "49"
								},
								{
									"begin": 2261,
									"end": 2343,
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 2261,
									"end": 2343,
									"name": "tag",
									"source": 14,
									"value": "51"
								},
								{
									"begin": 2261,
									"end": 2343,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 2265,
									"end": 2268,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2265,
									"end": 2268,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2265,
									"end": 2268,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1905,
									"end": 2353,
									"name": "tag",
									"source": 14,
									"value": "47"
								},
								{
									"begin": 1905,
									"end": 2353,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1814,
									"end": 2359,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1814,
									"end": 2359,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1814,
									"end": 2359,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1814,
									"end": 2359,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 2535,
									"end": 3887,
									"name": "tag",
									"source": 14,
									"value": "13"
								},
								{
									"begin": 2535,
									"end": 3887,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 2655,
									"end": 2665,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 2655,
									"end": 2665,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2677,
									"end": 2707,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 2677,
									"end": 2707,
									"name": "GT",
									"source": 14
								},
								{
									"begin": 2674,
									"end": 2730,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 2674,
									"end": 2730,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "55"
								},
								{
									"begin": 2674,
									"end": 2730,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 2710,
									"end": 2728,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "55"
								},
								{
									"begin": 2710,
									"end": 2728,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "19"
								},
								{
									"begin": 2710,
									"end": 2728,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 2710,
									"end": 2728,
									"name": "tag",
									"source": 14,
									"value": "55"
								},
								{
									"begin": 2710,
									"end": 2728,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 2739,
									"end": 2836,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "56"
								},
								{
									"begin": 2829,
									"end": 2835,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 2789,
									"end": 2827,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "57"
								},
								{
									"begin": 2821,
									"end": 2825,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 2815,
									"end": 2826,
									"name": "SLOAD",
									"source": 14
								},
								{
									"begin": 2789,
									"end": 2827,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "21"
								},
								{
									"begin": 2789,
									"end": 2827,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 2789,
									"end": 2827,
									"name": "tag",
									"source": 14,
									"value": "57"
								},
								{
									"begin": 2789,
									"end": 2827,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 2783,
									"end": 2787,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 2739,
									"end": 2836,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "23"
								},
								{
									"begin": 2739,
									"end": 2836,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 2739,
									"end": 2836,
									"name": "tag",
									"source": 14,
									"value": "56"
								},
								{
									"begin": 2739,
									"end": 2836,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 2891,
									"end": 2895,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 2891,
									"end": 2895,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 2955,
									"end": 2957,
									"name": "PUSH",
									"source": 14,
									"value": "1F"
								},
								{
									"begin": 2944,
									"end": 2958,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 2944,
									"end": 2958,
									"name": "GT",
									"source": 14
								},
								{
									"begin": 2972,
									"end": 2973,
									"name": "PUSH",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 2967,
									"end": 3630,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 2967,
									"end": 3630,
									"name": "EQ",
									"source": 14
								},
								{
									"begin": 2967,
									"end": 3630,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "59"
								},
								{
									"begin": 2967,
									"end": 3630,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 3674,
									"end": 3675,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 3691,
									"end": 3697,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 3688,
									"end": 3777,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 3688,
									"end": 3777,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "60"
								},
								{
									"begin": 3688,
									"end": 3777,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3743,
									"end": 3762,
									"name": "DUP6",
									"source": 14
								},
								{
									"begin": 3743,
									"end": 3762,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 3743,
									"end": 3762,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 3737,
									"end": 3763,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 3688,
									"end": 3777,
									"name": "tag",
									"source": 14,
									"value": "60"
								},
								{
									"begin": 3688,
									"end": 3777,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2492,
									"end": 2493,
									"name": "PUSH",
									"source": 14,
									"value": "3"
								},
								{
									"begin": 2488,
									"end": 2499,
									"name": "DUP7",
									"source": 14
								},
								{
									"begin": 2488,
									"end": 2499,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 2488,
									"end": 2499,
									"name": "SHL",
									"source": 14
								},
								{
									"begin": 2484,
									"end": 2508,
									"name": "SHR",
									"source": 14
								},
								{
									"begin": 2480,
									"end": 2509,
									"name": "NOT",
									"source": 14
								},
								{
									"begin": 2470,
									"end": 2510,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 2516,
									"end": 2517,
									"name": "PUSH",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 2512,
									"end": 2523,
									"name": "DUP6",
									"source": 14
								},
								{
									"begin": 2512,
									"end": 2523,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 2512,
									"end": 2523,
									"name": "SHL",
									"source": 14
								},
								{
									"begin": 2467,
									"end": 2524,
									"name": "OR",
									"source": 14
								},
								{
									"begin": 3790,
									"end": 3871,
									"name": "DUP6",
									"source": 14
								},
								{
									"begin": 3790,
									"end": 3871,
									"name": "SSTORE",
									"source": 14
								},
								{
									"begin": 2937,
									"end": 3881,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "51"
								},
								{
									"begin": 2937,
									"end": 3881,
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 2967,
									"end": 3630,
									"name": "tag",
									"source": 14,
									"value": "59"
								},
								{
									"begin": 2967,
									"end": 3630,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1761,
									"end": 1762,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 1754,
									"end": 1768,
									"name": "DUP6",
									"source": 14
								},
								{
									"begin": 1754,
									"end": 1768,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 1754,
									"end": 1768,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 1798,
									"end": 1802,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 1785,
									"end": 1803,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 1785,
									"end": 1803,
									"name": "KECCAK256",
									"source": 14
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3003,
									"end": 3023,
									"name": "DUP7",
									"source": 14
								},
								{
									"begin": 3003,
									"end": 3023,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 3003,
									"end": 3023,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 3121,
									"end": 3357,
									"name": "tag",
									"source": 14,
									"value": "63"
								},
								{
									"begin": 3121,
									"end": 3357,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 3135,
									"end": 3142,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 3132,
									"end": 3133,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 3129,
									"end": 3143,
									"name": "LT",
									"source": 14
								},
								{
									"begin": 3121,
									"end": 3357,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 3121,
									"end": 3357,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "65"
								},
								{
									"begin": 3121,
									"end": 3357,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 3224,
									"end": 3243,
									"name": "DUP9",
									"source": 14
								},
								{
									"begin": 3224,
									"end": 3243,
									"name": "DUP7",
									"source": 14
								},
								{
									"begin": 3224,
									"end": 3243,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 3218,
									"end": 3244,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 3203,
									"end": 3245,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 3203,
									"end": 3245,
									"name": "SSTORE",
									"source": 14
								},
								{
									"begin": 3316,
									"end": 3343,
									"name": "SWAP5",
									"source": 14
								},
								{
									"begin": 3316,
									"end": 3343,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 3316,
									"end": 3343,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 3316,
									"end": 3343,
									"name": "SWAP5",
									"source": 14
								},
								{
									"begin": 3284,
									"end": 3285,
									"name": "PUSH",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 3272,
									"end": 3286,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 3272,
									"end": 3286,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 3272,
									"end": 3286,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 3272,
									"end": 3286,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 3151,
									"end": 3170,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 3151,
									"end": 3170,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 3121,
									"end": 3357,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "63"
								},
								{
									"begin": 3121,
									"end": 3357,
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 3121,
									"end": 3357,
									"name": "tag",
									"source": 14,
									"value": "65"
								},
								{
									"begin": 3121,
									"end": 3357,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 3125,
									"end": 3128,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3385,
									"end": 3391,
									"name": "DUP6",
									"source": 14
								},
								{
									"begin": 3376,
									"end": 3383,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 3373,
									"end": 3392,
									"name": "LT",
									"source": 14
								},
								{
									"begin": 3370,
									"end": 3571,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 3370,
									"end": 3571,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "66"
								},
								{
									"begin": 3370,
									"end": 3571,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 3446,
									"end": 3465,
									"name": "DUP8",
									"source": 14
								},
								{
									"begin": 3446,
									"end": 3465,
									"name": "DUP6",
									"source": 14
								},
								{
									"begin": 3446,
									"end": 3465,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 3440,
									"end": 3466,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3529,
									"end": 3530,
									"name": "PUSH",
									"source": 14,
									"value": "3"
								},
								{
									"begin": 3525,
									"end": 3539,
									"name": "DUP9",
									"source": 14
								},
								{
									"begin": 3525,
									"end": 3539,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 3525,
									"end": 3539,
									"name": "SHL",
									"source": 14
								},
								{
									"begin": 3541,
									"end": 3544,
									"name": "PUSH",
									"source": 14,
									"value": "F8"
								},
								{
									"begin": 3521,
									"end": 3545,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 3517,
									"end": 3554,
									"name": "SHR",
									"source": 14
								},
								{
									"begin": 3513,
									"end": 3555,
									"name": "NOT",
									"source": 14
								},
								{
									"begin": 3498,
									"end": 3556,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 3483,
									"end": 3557,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 3483,
									"end": 3557,
									"name": "SSTORE",
									"source": 14
								},
								{
									"begin": 3370,
									"end": 3571,
									"name": "tag",
									"source": 14,
									"value": "66"
								},
								{
									"begin": 3370,
									"end": 3571,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3617,
									"end": 3618,
									"name": "PUSH",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 3601,
									"end": 3615,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 3601,
									"end": 3615,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 3601,
									"end": 3615,
									"name": "SHL",
									"source": 14
								},
								{
									"begin": 3597,
									"end": 3619,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 3584,
									"end": 3620,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 3584,
									"end": 3620,
									"name": "SSTORE",
									"source": 14
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2535,
									"end": 3887,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 3892,
									"end": 4163,
									"name": "tag",
									"source": 14,
									"value": "25"
								},
								{
									"begin": 3892,
									"end": 4163,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 3934,
									"end": 3937,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 3972,
									"end": 3977,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 3966,
									"end": 3978,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 3999,
									"end": 4005,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 3994,
									"end": 3997,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 3987,
									"end": 4006,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 4015,
									"end": 4091,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "68"
								},
								{
									"begin": 4084,
									"end": 4090,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 4077,
									"end": 4081,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 4072,
									"end": 4075,
									"name": "DUP7",
									"source": 14
								},
								{
									"begin": 4068,
									"end": 4082,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 4061,
									"end": 4065,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 4054,
									"end": 4059,
									"name": "DUP7",
									"source": 14
								},
								{
									"begin": 4050,
									"end": 4066,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 4015,
									"end": 4091,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 4015,
									"end": 4091,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 4015,
									"end": 4091,
									"name": "tag",
									"source": 14,
									"value": "68"
								},
								{
									"begin": 4015,
									"end": 4091,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 4145,
									"end": 4147,
									"name": "PUSH",
									"source": 14,
									"value": "1F"
								},
								{
									"begin": 4124,
									"end": 4139,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 4120,
									"end": 4149,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 4111,
									"end": 4150,
									"name": "SWAP3",
									"source": 14
								},
								{
									"begin": 4111,
									"end": 4150,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 4111,
									"end": 4150,
									"name": "SWAP3",
									"source": 14
								},
								{
									"begin": 4111,
									"end": 4150,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 4152,
									"end": 4156,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 4107,
									"end": 4157,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 4107,
									"end": 4157,
									"name": "SWAP3",
									"source": 14
								},
								{
									"begin": 3892,
									"end": 4163,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3892,
									"end": 4163,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 4168,
									"end": 5497,
									"name": "tag",
									"source": 14,
									"value": "15"
								},
								{
									"begin": 4168,
									"end": 5497,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 4438,
									"end": 4444,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 4427,
									"end": 4436,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 4420,
									"end": 4445,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 4401,
									"end": 4405,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 4464,
									"end": 4466,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 4502,
									"end": 4505,
									"name": "PUSH",
									"source": 14,
									"value": "80"
								},
								{
									"begin": 4497,
									"end": 4499,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 4486,
									"end": 4495,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 4482,
									"end": 4500,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 4475,
									"end": 4506,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 4529,
									"end": 4575,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "70"
								},
								{
									"begin": 4570,
									"end": 4573,
									"name": "PUSH",
									"source": 14,
									"value": "80"
								},
								{
									"begin": 4559,
									"end": 4568,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 4555,
									"end": 4574,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 4547,
									"end": 4553,
									"name": "DUP8",
									"source": 14
								},
								{
									"begin": 4529,
									"end": 4575,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "25"
								},
								{
									"begin": 4529,
									"end": 4575,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 4529,
									"end": 4575,
									"name": "tag",
									"source": 14,
									"value": "70"
								},
								{
									"begin": 4529,
									"end": 4575,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 4623,
									"end": 4632,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 4615,
									"end": 4621,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 4611,
									"end": 4633,
									"name": "SUB",
									"source": 14
								},
								{
									"begin": 4606,
									"end": 4608,
									"name": "PUSH",
									"source": 14,
									"value": "40"
								},
								{
									"begin": 4595,
									"end": 4604,
									"name": "DUP6",
									"source": 14
								},
								{
									"begin": 4591,
									"end": 4609,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 4584,
									"end": 4634,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 4657,
									"end": 4690,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "71"
								},
								{
									"begin": 4683,
									"end": 4689,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 4675,
									"end": 4681,
									"name": "DUP8",
									"source": 14
								},
								{
									"begin": 4657,
									"end": 4690,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "25"
								},
								{
									"begin": 4657,
									"end": 4690,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 4657,
									"end": 4690,
									"name": "tag",
									"source": 14,
									"value": "71"
								},
								{
									"begin": 4657,
									"end": 4690,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 4643,
									"end": 4690,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 4643,
									"end": 4690,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 4738,
									"end": 4747,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 4730,
									"end": 4736,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 4726,
									"end": 4748,
									"name": "SUB",
									"source": 14
								},
								{
									"begin": 4721,
									"end": 4723,
									"name": "PUSH",
									"source": 14,
									"value": "60"
								},
								{
									"begin": 4710,
									"end": 4719,
									"name": "DUP6",
									"source": 14
								},
								{
									"begin": 4706,
									"end": 4724,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 4699,
									"end": 4749,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 4769,
									"end": 4770,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 4802,
									"end": 4808,
									"name": "DUP6",
									"source": 14
								},
								{
									"begin": 4796,
									"end": 4809,
									"name": "SLOAD",
									"source": 14
								},
								{
									"begin": 4832,
									"end": 4868,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "72"
								},
								{
									"begin": 4858,
									"end": 4867,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 4832,
									"end": 4868,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "21"
								},
								{
									"begin": 4832,
									"end": 4868,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 4832,
									"end": 4868,
									"name": "tag",
									"source": 14,
									"value": "72"
								},
								{
									"begin": 4832,
									"end": 4868,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 4877,
									"end": 4899,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 4877,
									"end": 4899,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 4877,
									"end": 4899,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 4918,
									"end": 4919,
									"name": "PUSH",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 4935,
									"end": 4953,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 4935,
									"end": 4953,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 4935,
									"end": 4953,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 4962,
									"end": 5114,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 4962,
									"end": 5114,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 4962,
									"end": 5114,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "74"
								},
								{
									"begin": 4962,
									"end": 5114,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 5128,
									"end": 5129,
									"name": "PUSH",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 5123,
									"end": 5471,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 5123,
									"end": 5471,
									"name": "EQ",
									"source": 14
								},
								{
									"begin": 5123,
									"end": 5471,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "75"
								},
								{
									"begin": 5123,
									"end": 5471,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 4928,
									"end": 5471,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "73"
								},
								{
									"begin": 4928,
									"end": 5471,
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 4962,
									"end": 5114,
									"name": "tag",
									"source": 14,
									"value": "74"
								},
								{
									"begin": 4962,
									"end": 5114,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 5007,
									"end": 5031,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 5007,
									"end": 5031,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 4990,
									"end": 5005,
									"name": "DUP7",
									"source": 14
								},
								{
									"begin": 4990,
									"end": 5005,
									"name": "DUP9",
									"source": 14
								},
								{
									"begin": 4990,
									"end": 5005,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 4983,
									"end": 5032,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 5082,
									"end": 5096,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 5082,
									"end": 5096,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 5075,
									"end": 5097,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 5072,
									"end": 5073,
									"name": "PUSH",
									"source": 14,
									"value": "5"
								},
								{
									"begin": 5068,
									"end": 5098,
									"name": "SHL",
									"source": 14
								},
								{
									"begin": 5056,
									"end": 5099,
									"name": "DUP7",
									"source": 14
								},
								{
									"begin": 5056,
									"end": 5099,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 5052,
									"end": 5104,
									"name": "DUP8",
									"source": 14
								},
								{
									"begin": 5052,
									"end": 5104,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 5052,
									"end": 5104,
									"name": "SWAP5",
									"source": 14
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 4962,
									"end": 5114,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "73"
								},
								{
									"begin": 4962,
									"end": 5114,
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 5123,
									"end": 5471,
									"name": "tag",
									"source": 14,
									"value": "75"
								},
								{
									"begin": 5123,
									"end": 5471,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 5154,
									"end": 5160,
									"name": "DUP10",
									"source": 14
								},
								{
									"begin": 5151,
									"end": 5152,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 5144,
									"end": 5161,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 5202,
									"end": 5204,
									"name": "DUP7",
									"source": 14
								},
								{
									"begin": 5199,
									"end": 5200,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 5189,
									"end": 5205,
									"name": "KECCAK256",
									"source": 14
								},
								{
									"begin": 5227,
									"end": 5228,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 5241,
									"end": 5418,
									"name": "tag",
									"source": 14,
									"value": "76"
								},
								{
									"begin": 5241,
									"end": 5418,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 5255,
									"end": 5261,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 5252,
									"end": 5253,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 5249,
									"end": 5262,
									"name": "LT",
									"source": 14
								},
								{
									"begin": 5241,
									"end": 5418,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 5241,
									"end": 5418,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "78"
								},
								{
									"begin": 5241,
									"end": 5418,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 5345,
									"end": 5359,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 5345,
									"end": 5359,
									"name": "SLOAD",
									"source": 14
								},
								{
									"begin": 5324,
									"end": 5338,
									"name": "DUP9",
									"source": 14
								},
								{
									"begin": 5324,
									"end": 5338,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 5324,
									"end": 5338,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 5320,
									"end": 5343,
									"name": "DUP11",
									"source": 14
								},
								{
									"begin": 5320,
									"end": 5343,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 5313,
									"end": 5360,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 5388,
									"end": 5404,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 5388,
									"end": 5404,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 5388,
									"end": 5404,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 5388,
									"end": 5404,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 5270,
									"end": 5280,
									"name": "DUP9",
									"source": 14
								},
								{
									"begin": 5270,
									"end": 5280,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 5241,
									"end": 5418,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "76"
								},
								{
									"begin": 5241,
									"end": 5418,
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 5241,
									"end": 5418,
									"name": "tag",
									"source": 14,
									"value": "78"
								},
								{
									"begin": 5241,
									"end": 5418,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 5442,
									"end": 5456,
									"name": "DUP8",
									"source": 14
								},
								{
									"begin": 5442,
									"end": 5456,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 5438,
									"end": 5461,
									"name": "DUP9",
									"source": 14
								},
								{
									"begin": 5438,
									"end": 5461,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 5438,
									"end": 5461,
									"name": "SWAP6",
									"source": 14
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 4928,
									"end": 5471,
									"name": "tag",
									"source": 14,
									"value": "73"
								},
								{
									"begin": 4928,
									"end": 5471,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 5488,
									"end": 5491,
									"name": "SWAP3",
									"source": 14
								},
								{
									"begin": 5488,
									"end": 5491,
									"name": "SWAP12",
									"source": 14
								},
								{
									"begin": 4168,
									"end": 5497,
									"name": "SWAP11",
									"source": 14
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 4168,
									"end": 5497,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 4168,
									"end": 5497,
									"name": "tag",
									"source": 14,
									"value": "26"
								},
								{
									"begin": 4168,
									"end": 5497,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 791,
									"end": 12604,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 791,
									"end": 12604,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 791,
									"end": 12604,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 791,
									"end": 12604,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 791,
									"end": 12604,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 791,
									"end": 12604,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 791,
									"end": 12604,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212206f1c18825d3fab6e9e47f6e6bb10febec3d3a653d85f4372dc448eab8ab495e864736f6c63430008140033",
									".code": [
										{
											"begin": 791,
											"end": 12604,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "tag",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "PUSH",
											"source": 9,
											"value": "715018A6"
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "31"
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "PUSH",
											"source": 9,
											"value": "BE37E907"
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "PUSH",
											"source": 9,
											"value": "E0DF5B6F"
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "33"
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "PUSH",
											"source": 9,
											"value": "E0DF5B6F"
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "PUSH",
											"source": 9,
											"value": "E1604B70"
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "28"
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "PUSH",
											"source": 9,
											"value": "E985E9C5"
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "PUSH",
											"source": 9,
											"value": "F2FDE38B"
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "30"
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "tag",
											"source": 9,
											"value": "33"
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "PUSH",
											"source": 9,
											"value": "BE37E907"
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "PUSH",
											"source": 9,
											"value": "C87B56DD"
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "PUSH",
											"source": 9,
											"value": "CE35DE95"
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "tag",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "PUSH",
											"source": 9,
											"value": "95D89B41"
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "34"
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "PUSH",
											"source": 9,
											"value": "95D89B41"
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "PUSH",
											"source": 9,
											"value": "9B252852"
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "PUSH",
											"source": 9,
											"value": "A22CB465"
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "PUSH",
											"source": 9,
											"value": "B88D4FDE"
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "tag",
											"source": 9,
											"value": "34"
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "PUSH",
											"source": 9,
											"value": "715018A6"
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "17"
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "PUSH",
											"source": 9,
											"value": "76AED2E1"
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "PUSH",
											"source": 9,
											"value": "8DA5CB5B"
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "19"
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "tag",
											"source": 9,
											"value": "31"
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "PUSH",
											"source": 9,
											"value": "23B872DD"
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "35"
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "PUSH",
											"source": 9,
											"value": "42842E0E"
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "36"
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "PUSH",
											"source": 9,
											"value": "42842E0E"
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "13"
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "PUSH",
											"source": 9,
											"value": "51C18E0C"
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "PUSH",
											"source": 9,
											"value": "6352211E"
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "PUSH",
											"source": 9,
											"value": "70A08231"
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "tag",
											"source": 9,
											"value": "36"
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "PUSH",
											"source": 9,
											"value": "23B872DD"
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "PUSH",
											"source": 9,
											"value": "2F745C59"
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "PUSH",
											"source": 9,
											"value": "40C10F19"
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "tag",
											"source": 9,
											"value": "35"
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "PUSH",
											"source": 9,
											"value": "95EA7B3"
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "37"
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "PUSH",
											"source": 9,
											"value": "95EA7B3"
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "PUSH",
											"source": 9,
											"value": "18160DDD"
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "PUSH",
											"source": 9,
											"value": "1C02BC31"
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "PUSH",
											"source": 9,
											"value": "1F8EB677"
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "tag",
											"source": 9,
											"value": "37"
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "PUSH",
											"source": 9,
											"value": "1FFC9A7"
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "PUSH",
											"source": 9,
											"value": "6FDDE03"
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "PUSH",
											"source": 9,
											"value": "81812FC"
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "tag",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 791,
											"end": 12604,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2236,
											"end": 2473,
											"name": "tag",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 2236,
											"end": 2473,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2236,
											"end": 2473,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "38"
										},
										{
											"begin": 2236,
											"end": 2473,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "39"
										},
										{
											"begin": 2236,
											"end": 2473,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 2236,
											"end": 2473,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2236,
											"end": 2473,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2236,
											"end": 2473,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2236,
											"end": 2473,
											"name": "tag",
											"source": 9,
											"value": "39"
										},
										{
											"begin": 2236,
											"end": 2473,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2236,
											"end": 2473,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 2236,
											"end": 2473,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2236,
											"end": 2473,
											"name": "tag",
											"source": 9,
											"value": "38"
										},
										{
											"begin": 2236,
											"end": 2473,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2236,
											"end": 2473,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2236,
											"end": 2473,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 565,
											"end": 579,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 565,
											"end": 579,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 558,
											"end": 580,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 540,
											"end": 581,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 540,
											"end": 581,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 528,
											"end": 530,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 513,
											"end": 531,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2236,
											"end": 2473,
											"name": "tag",
											"source": 9,
											"value": "42"
										},
										{
											"begin": 2236,
											"end": 2473,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2236,
											"end": 2473,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2236,
											"end": 2473,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2236,
											"end": 2473,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2236,
											"end": 2473,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2236,
											"end": 2473,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2236,
											"end": 2473,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2236,
											"end": 2473,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 2732,
											"end": 2823,
											"name": "tag",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2732,
											"end": 2823,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2811,
											"end": 2816,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2811,
											"end": 2816,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2811,
											"end": 2816,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2811,
											"end": 2816,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2811,
											"end": 2816,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2811,
											"end": 2816,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2811,
											"end": 2816,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2811,
											"end": 2816,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2811,
											"end": 2816,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2811,
											"end": 2816,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 2811,
											"end": 2816,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2811,
											"end": 2816,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1213D394D095"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2811,
											"end": 2816,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2811,
											"end": 2816,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2811,
											"end": 2816,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2811,
											"end": 2816,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2732,
											"end": 2823,
											"name": "tag",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 2732,
											"end": 2823,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2732,
											"end": 2823,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2732,
											"end": 2823,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2732,
											"end": 2823,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "42"
										},
										{
											"begin": 2732,
											"end": 2823,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2732,
											"end": 2823,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2732,
											"end": 2823,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "47"
										},
										{
											"begin": 2732,
											"end": 2823,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7048,
											"end": 7180,
											"name": "tag",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 7048,
											"end": 7180,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7048,
											"end": 7180,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "48"
										},
										{
											"begin": 7048,
											"end": 7180,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "49"
										},
										{
											"begin": 7048,
											"end": 7180,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 7048,
											"end": 7180,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 7048,
											"end": 7180,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "50"
										},
										{
											"begin": 7048,
											"end": 7180,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7048,
											"end": 7180,
											"name": "tag",
											"source": 9,
											"value": "49"
										},
										{
											"begin": 7048,
											"end": 7180,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7048,
											"end": 7180,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "51"
										},
										{
											"begin": 7048,
											"end": 7180,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7048,
											"end": 7180,
											"name": "tag",
											"source": 9,
											"value": "48"
										},
										{
											"begin": 7048,
											"end": 7180,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7048,
											"end": 7180,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7048,
											"end": 7180,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1697,
											"end": 1729,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1697,
											"end": 1729,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1697,
											"end": 1729,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 1679,
											"end": 1730,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1679,
											"end": 1730,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1667,
											"end": 1669,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1652,
											"end": 1670,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7048,
											"end": 7180,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "42"
										},
										{
											"begin": 1533,
											"end": 1736,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6796,
											"end": 6907,
											"name": "tag",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 6796,
											"end": 6907,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6796,
											"end": 6907,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "54"
										},
										{
											"begin": 6796,
											"end": 6907,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "55"
										},
										{
											"begin": 6796,
											"end": 6907,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 6796,
											"end": 6907,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 6796,
											"end": 6907,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "56"
										},
										{
											"begin": 6796,
											"end": 6907,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6796,
											"end": 6907,
											"name": "tag",
											"source": 9,
											"value": "55"
										},
										{
											"begin": 6796,
											"end": 6907,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6796,
											"end": 6907,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "57"
										},
										{
											"begin": 6796,
											"end": 6907,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6796,
											"end": 6907,
											"name": "tag",
											"source": 9,
											"value": "54"
										},
										{
											"begin": 6796,
											"end": 6907,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6796,
											"end": 6907,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 3664,
											"end": 3753,
											"name": "tag",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 3664,
											"end": 3753,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3735,
											"end": 3746,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 3735,
											"end": 3746,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3664,
											"end": 3753,
											"name": "tag",
											"source": 9,
											"value": "58"
										},
										{
											"begin": 3664,
											"end": 3753,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3664,
											"end": 3753,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3664,
											"end": 3753,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2324,
											"end": 2349,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2324,
											"end": 2349,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2324,
											"end": 2349,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2312,
											"end": 2314,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2297,
											"end": 2315,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3664,
											"end": 3753,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "42"
										},
										{
											"begin": 2178,
											"end": 2355,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4150,
											"end": 4428,
											"name": "tag",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 4150,
											"end": 4428,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4150,
											"end": 4428,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "38"
										},
										{
											"begin": 4150,
											"end": 4428,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "63"
										},
										{
											"begin": 4150,
											"end": 4428,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 4150,
											"end": 4428,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4150,
											"end": 4428,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 4150,
											"end": 4428,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4150,
											"end": 4428,
											"name": "tag",
											"source": 9,
											"value": "63"
										},
										{
											"begin": 4150,
											"end": 4428,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4150,
											"end": 4428,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "65"
										},
										{
											"begin": 4150,
											"end": 4428,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4434,
											"end": 4537,
											"name": "tag",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 4434,
											"end": 4537,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4434,
											"end": 4537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "38"
										},
										{
											"begin": 4434,
											"end": 4537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "68"
										},
										{
											"begin": 4434,
											"end": 4537,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 4434,
											"end": 4537,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4434,
											"end": 4537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "69"
										},
										{
											"begin": 4434,
											"end": 4537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4434,
											"end": 4537,
											"name": "tag",
											"source": 9,
											"value": "68"
										},
										{
											"begin": 4434,
											"end": 4537,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4434,
											"end": 4537,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "70"
										},
										{
											"begin": 4434,
											"end": 4537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6658,
											"end": 6790,
											"name": "tag",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 6658,
											"end": 6790,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6658,
											"end": 6790,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "54"
										},
										{
											"begin": 6658,
											"end": 6790,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "73"
										},
										{
											"begin": 6658,
											"end": 6790,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 6658,
											"end": 6790,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 6658,
											"end": 6790,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "74"
										},
										{
											"begin": 6658,
											"end": 6790,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6658,
											"end": 6790,
											"name": "tag",
											"source": 9,
											"value": "73"
										},
										{
											"begin": 6658,
											"end": 6790,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6658,
											"end": 6790,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "75"
										},
										{
											"begin": 6658,
											"end": 6790,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11044,
											"end": 11502,
											"name": "tag",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 11044,
											"end": 11502,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11044,
											"end": 11502,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "58"
										},
										{
											"begin": 11044,
											"end": 11502,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "77"
										},
										{
											"begin": 11044,
											"end": 11502,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 11044,
											"end": 11502,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 11044,
											"end": 11502,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "56"
										},
										{
											"begin": 11044,
											"end": 11502,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11044,
											"end": 11502,
											"name": "tag",
											"source": 9,
											"value": "77"
										},
										{
											"begin": 11044,
											"end": 11502,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11044,
											"end": 11502,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "78"
										},
										{
											"begin": 11044,
											"end": 11502,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7524,
											"end": 7663,
											"name": "tag",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 7524,
											"end": 7663,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7524,
											"end": 7663,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "58"
										},
										{
											"begin": 7524,
											"end": 7663,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "81"
										},
										{
											"begin": 7524,
											"end": 7663,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 7524,
											"end": 7663,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 7524,
											"end": 7663,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "56"
										},
										{
											"begin": 7524,
											"end": 7663,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7524,
											"end": 7663,
											"name": "tag",
											"source": 9,
											"value": "81"
										},
										{
											"begin": 7524,
											"end": 7663,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7524,
											"end": 7663,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "82"
										},
										{
											"begin": 7524,
											"end": 7663,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6512,
											"end": 6652,
											"name": "tag",
											"source": 9,
											"value": "13"
										},
										{
											"begin": 6512,
											"end": 6652,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6512,
											"end": 6652,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "54"
										},
										{
											"begin": 6512,
											"end": 6652,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "85"
										},
										{
											"begin": 6512,
											"end": 6652,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 6512,
											"end": 6652,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 6512,
											"end": 6652,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "74"
										},
										{
											"begin": 6512,
											"end": 6652,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6512,
											"end": 6652,
											"name": "tag",
											"source": 9,
											"value": "85"
										},
										{
											"begin": 6512,
											"end": 6652,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6512,
											"end": 6652,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "86"
										},
										{
											"begin": 6512,
											"end": 6652,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9353,
											"end": 9584,
											"name": "tag",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 9353,
											"end": 9584,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9353,
											"end": 9584,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "58"
										},
										{
											"begin": 9353,
											"end": 9584,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "88"
										},
										{
											"begin": 9353,
											"end": 9584,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 9353,
											"end": 9584,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 9353,
											"end": 9584,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "50"
										},
										{
											"begin": 9353,
											"end": 9584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9353,
											"end": 9584,
											"name": "tag",
											"source": 9,
											"value": "88"
										},
										{
											"begin": 9353,
											"end": 9584,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9353,
											"end": 9584,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "89"
										},
										{
											"begin": 9353,
											"end": 9584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5470,
											"end": 5707,
											"name": "tag",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 5470,
											"end": 5707,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5470,
											"end": 5707,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "48"
										},
										{
											"begin": 5470,
											"end": 5707,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "92"
										},
										{
											"begin": 5470,
											"end": 5707,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 5470,
											"end": 5707,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 5470,
											"end": 5707,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "50"
										},
										{
											"begin": 5470,
											"end": 5707,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5470,
											"end": 5707,
											"name": "tag",
											"source": 9,
											"value": "92"
										},
										{
											"begin": 5470,
											"end": 5707,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5470,
											"end": 5707,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "93"
										},
										{
											"begin": 5470,
											"end": 5707,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5932,
											"end": 6159,
											"name": "tag",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 5932,
											"end": 6159,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5932,
											"end": 6159,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "58"
										},
										{
											"begin": 5932,
											"end": 6159,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "96"
										},
										{
											"begin": 5932,
											"end": 6159,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 5932,
											"end": 6159,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 5932,
											"end": 6159,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "69"
										},
										{
											"begin": 5932,
											"end": 6159,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5932,
											"end": 6159,
											"name": "tag",
											"source": 9,
											"value": "96"
										},
										{
											"begin": 5932,
											"end": 6159,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5932,
											"end": 6159,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "97"
										},
										{
											"begin": 5932,
											"end": 6159,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1824,
											"end": 1925,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3760,
											"end": 3916,
											"name": "tag",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 3760,
											"end": 3916,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3760,
											"end": 3916,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "58"
										},
										{
											"begin": 3760,
											"end": 3916,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "102"
										},
										{
											"begin": 3760,
											"end": 3916,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 3760,
											"end": 3916,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3760,
											"end": 3916,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "50"
										},
										{
											"begin": 3760,
											"end": 3916,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3760,
											"end": 3916,
											"name": "tag",
											"source": 9,
											"value": "102"
										},
										{
											"begin": 3760,
											"end": 3916,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3760,
											"end": 3916,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "103"
										},
										{
											"begin": 3760,
											"end": 3916,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1247,
											"end": 1254,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8706,
											"end": 8903,
											"name": "tag",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 8706,
											"end": 8903,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8706,
											"end": 8903,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "54"
										},
										{
											"begin": 8706,
											"end": 8903,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "112"
										},
										{
											"begin": 8706,
											"end": 8903,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 8706,
											"end": 8903,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 8706,
											"end": 8903,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "56"
										},
										{
											"begin": 8706,
											"end": 8903,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8706,
											"end": 8903,
											"name": "tag",
											"source": 9,
											"value": "112"
										},
										{
											"begin": 8706,
											"end": 8903,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8706,
											"end": 8903,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "113"
										},
										{
											"begin": 8706,
											"end": 8903,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6913,
											"end": 7042,
											"name": "tag",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 6913,
											"end": 7042,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6913,
											"end": 7042,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "54"
										},
										{
											"begin": 6913,
											"end": 7042,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "115"
										},
										{
											"begin": 6913,
											"end": 7042,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 6913,
											"end": 7042,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 6913,
											"end": 7042,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "116"
										},
										{
											"begin": 6913,
											"end": 7042,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6913,
											"end": 7042,
											"name": "tag",
											"source": 9,
											"value": "115"
										},
										{
											"begin": 6913,
											"end": 7042,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6913,
											"end": 7042,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "117"
										},
										{
											"begin": 6913,
											"end": 7042,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6341,
											"end": 6506,
											"name": "tag",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 6341,
											"end": 6506,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6341,
											"end": 6506,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "54"
										},
										{
											"begin": 6341,
											"end": 6506,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "85"
										},
										{
											"begin": 6341,
											"end": 6506,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 6341,
											"end": 6506,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 6341,
											"end": 6506,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "120"
										},
										{
											"begin": 6341,
											"end": 6506,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10380,
											"end": 10508,
											"name": "tag",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 10380,
											"end": 10508,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10380,
											"end": 10508,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "58"
										},
										{
											"begin": 10380,
											"end": 10508,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "123"
										},
										{
											"begin": 10380,
											"end": 10508,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 10380,
											"end": 10508,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 10380,
											"end": 10508,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "56"
										},
										{
											"begin": 10380,
											"end": 10508,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10380,
											"end": 10508,
											"name": "tag",
											"source": 9,
											"value": "123"
										},
										{
											"begin": 10380,
											"end": 10508,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10380,
											"end": 10508,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "124"
										},
										{
											"begin": 10380,
											"end": 10508,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3045,
											"end": 3366,
											"name": "tag",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 3045,
											"end": 3366,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3045,
											"end": 3366,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 3045,
											"end": 3366,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "127"
										},
										{
											"begin": 3045,
											"end": 3366,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 3045,
											"end": 3366,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3045,
											"end": 3366,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "50"
										},
										{
											"begin": 3045,
											"end": 3366,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3045,
											"end": 3366,
											"name": "tag",
											"source": 9,
											"value": "127"
										},
										{
											"begin": 3045,
											"end": 3366,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3045,
											"end": 3366,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "128"
										},
										{
											"begin": 3045,
											"end": 3366,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4713,
											"end": 4817,
											"name": "tag",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 4713,
											"end": 4817,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4713,
											"end": 4817,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "38"
										},
										{
											"begin": 4713,
											"end": 4817,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "131"
										},
										{
											"begin": 4713,
											"end": 4817,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 4713,
											"end": 4817,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4713,
											"end": 4817,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "69"
										},
										{
											"begin": 4713,
											"end": 4817,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4713,
											"end": 4817,
											"name": "tag",
											"source": 9,
											"value": "131"
										},
										{
											"begin": 4713,
											"end": 4817,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4713,
											"end": 4817,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "132"
										},
										{
											"begin": 4713,
											"end": 4817,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3373,
											"end": 3566,
											"name": "tag",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 3373,
											"end": 3566,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3373,
											"end": 3566,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 3373,
											"end": 3566,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "135"
										},
										{
											"begin": 3373,
											"end": 3566,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 3373,
											"end": 3566,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3373,
											"end": 3566,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "136"
										},
										{
											"begin": 3373,
											"end": 3566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3373,
											"end": 3566,
											"name": "tag",
											"source": 9,
											"value": "135"
										},
										{
											"begin": 3373,
											"end": 3566,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3373,
											"end": 3566,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "137"
										},
										{
											"begin": 3373,
											"end": 3566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3572,
											"end": 3658,
											"name": "tag",
											"source": 9,
											"value": "28"
										},
										{
											"begin": 3572,
											"end": 3658,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3641,
											"end": 3651,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 3641,
											"end": 3651,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3572,
											"end": 3658,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "58"
										},
										{
											"begin": 3572,
											"end": 3658,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7186,
											"end": 7329,
											"name": "tag",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 7186,
											"end": 7329,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7186,
											"end": 7329,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "38"
										},
										{
											"begin": 7186,
											"end": 7329,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "143"
										},
										{
											"begin": 7186,
											"end": 7329,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 7186,
											"end": 7329,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 7186,
											"end": 7329,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "144"
										},
										{
											"begin": 7186,
											"end": 7329,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7186,
											"end": 7329,
											"name": "tag",
											"source": 9,
											"value": "143"
										},
										{
											"begin": 7186,
											"end": 7329,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7186,
											"end": 7329,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "145"
										},
										{
											"begin": 7186,
											"end": 7329,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2074,
											"end": 2272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 2074,
											"end": 2272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2236,
											"end": 2473,
											"name": "tag",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 2236,
											"end": 2473,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2338,
											"end": 2342,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2374,
											"end": 2414,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2374,
											"end": 2414,
											"name": "AND",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80AC58CD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2374,
											"end": 2414,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 2374,
											"end": 2414,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2374,
											"end": 2466,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "152"
										},
										{
											"begin": 2374,
											"end": 2466,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1FFC9A7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 937,
											"end": 977,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 937,
											"end": 977,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 937,
											"end": 977,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 2430,
											"end": 2466,
											"name": "tag",
											"source": 9,
											"value": "152"
										},
										{
											"begin": 2430,
											"end": 2466,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2354,
											"end": 2466,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2236,
											"end": 2473,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2236,
											"end": 2473,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7048,
											"end": 7180,
											"name": "tag",
											"source": 9,
											"value": "51"
										},
										{
											"begin": 7048,
											"end": 7180,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7130,
											"end": 7171,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7130,
											"end": 7171,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "13F8DCEB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7130,
											"end": 7171,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7130,
											"end": 7171,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5832,
											"end": 5834,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 7130,
											"end": 7171,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 7130,
											"end": 7171,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7130,
											"end": 7171,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5814,
											"end": 5835,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 5871,
											"end": 5873,
											"name": "PUSH",
											"source": 14,
											"value": "B"
										},
										{
											"begin": 5851,
											"end": 5869,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 5851,
											"end": 5869,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5851,
											"end": 5869,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5844,
											"end": 5874,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "19D95D105C1C1C9BDD9959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "AA"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5890,
											"end": 5908,
											"name": "PUSH",
											"source": 14,
											"value": "44"
										},
										{
											"begin": 5890,
											"end": 5908,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5890,
											"end": 5908,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5883,
											"end": 5924,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 7102,
											"end": 7109,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7102,
											"end": 7109,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5941,
											"end": 5959,
											"name": "PUSH",
											"source": 14,
											"value": "64"
										},
										{
											"begin": 5941,
											"end": 5959,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7130,
											"end": 7171,
											"name": "tag",
											"source": 9,
											"value": "156"
										},
										{
											"begin": 7130,
											"end": 7171,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7130,
											"end": 7171,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7130,
											"end": 7171,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7130,
											"end": 7171,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7130,
											"end": 7171,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7130,
											"end": 7171,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 7130,
											"end": 7171,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7130,
											"end": 7171,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 6796,
											"end": 6907,
											"name": "tag",
											"source": 9,
											"value": "57"
										},
										{
											"begin": 6796,
											"end": 6907,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6863,
											"end": 6900,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6863,
											"end": 6900,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "13F8DCEB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6863,
											"end": 6900,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6863,
											"end": 6900,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6172,
											"end": 6174,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 6863,
											"end": 6900,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 6863,
											"end": 6900,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6863,
											"end": 6900,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6154,
											"end": 6175,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 6211,
											"end": 6212,
											"name": "PUSH",
											"source": 14,
											"value": "7"
										},
										{
											"begin": 6191,
											"end": 6209,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 6191,
											"end": 6209,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6191,
											"end": 6209,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6184,
											"end": 6213,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "617070726F7665"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6229,
											"end": 6247,
											"name": "PUSH",
											"source": 14,
											"value": "44"
										},
										{
											"begin": 6229,
											"end": 6247,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6229,
											"end": 6247,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6222,
											"end": 6259,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 6276,
											"end": 6294,
											"name": "PUSH",
											"source": 14,
											"value": "64"
										},
										{
											"begin": 6276,
											"end": 6294,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6863,
											"end": 6900,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "156"
										},
										{
											"begin": 5970,
											"end": 6300,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4150,
											"end": 4428,
											"name": "tag",
											"source": 9,
											"value": "65"
										},
										{
											"begin": 4150,
											"end": 4428,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4241,
											"end": 4251,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 4208,
											"end": 4212,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6250,
											"end": 6267,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6250,
											"end": 6267,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6250,
											"end": 6267,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6250,
											"end": 6259,
											"name": "PUSH",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 6250,
											"end": 6267,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6250,
											"end": 6267,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6250,
											"end": 6267,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6250,
											"end": 6267,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6250,
											"end": 6267,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 6250,
											"end": 6267,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 4208,
											"end": 4212,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 4224,
											"end": 4329,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "165"
										},
										{
											"begin": 4224,
											"end": 4329,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4280,
											"end": 4318,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4280,
											"end": 4318,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "50159299"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4280,
											"end": 4318,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4280,
											"end": 4318,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4307,
											"end": 4317,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 4280,
											"end": 4318,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4280,
											"end": 4318,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4280,
											"end": 4318,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1679,
											"end": 1730,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1652,
											"end": 1670,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 1652,
											"end": 1670,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4280,
											"end": 4318,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "156"
										},
										{
											"begin": 1533,
											"end": 1736,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4224,
											"end": 4329,
											"name": "tag",
											"source": 9,
											"value": "165"
										},
										{
											"begin": 4224,
											"end": 4329,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4353,
											"end": 4363,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 4339,
											"end": 4364,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4339,
											"end": 4364,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4339,
											"end": 4364,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4339,
											"end": 4364,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4339,
											"end": 4352,
											"name": "PUSH",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 4339,
											"end": 4364,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4339,
											"end": 4364,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4339,
											"end": 4364,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4339,
											"end": 4364,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4339,
											"end": 4364,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 4339,
											"end": 4379,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4339,
											"end": 4379,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4339,
											"end": 4379,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4339,
											"end": 4379,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4339,
											"end": 4379,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4339,
											"end": 4379,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4339,
											"end": 4379,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 4339,
											"end": 4379,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4339,
											"end": 4379,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 4397,
											"end": 4421,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "152"
										},
										{
											"begin": 4397,
											"end": 4421,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4434,
											"end": 4537,
											"name": "tag",
											"source": 9,
											"value": "70"
										},
										{
											"begin": 4434,
											"end": 4537,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4682,
											"end": 4700,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4682,
											"end": 4700,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4489,
											"end": 4493,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4682,
											"end": 4700,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4682,
											"end": 4700,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4682,
											"end": 4700,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4682,
											"end": 4695,
											"name": "PUSH",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 4682,
											"end": 4700,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4682,
											"end": 4700,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4682,
											"end": 4700,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4682,
											"end": 4700,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4682,
											"end": 4700,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 4682,
											"end": 4700,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 4682,
											"end": 4700,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 4682,
											"end": 4700,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4512,
											"end": 4530,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "152"
										},
										{
											"begin": 4543,
											"end": 4707,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6658,
											"end": 6790,
											"name": "tag",
											"source": 9,
											"value": "75"
										},
										{
											"begin": 6658,
											"end": 6790,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6741,
											"end": 6783,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6741,
											"end": 6783,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "13F8DCEB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6741,
											"end": 6783,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6741,
											"end": 6783,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6507,
											"end": 6509,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 6741,
											"end": 6783,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 6741,
											"end": 6783,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6741,
											"end": 6783,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6489,
											"end": 6510,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 6546,
											"end": 6548,
											"name": "PUSH",
											"source": 14,
											"value": "C"
										},
										{
											"begin": 6526,
											"end": 6544,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 6526,
											"end": 6544,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6526,
											"end": 6544,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6519,
											"end": 6549,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7472616E7366657246726F6D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6565,
											"end": 6583,
											"name": "PUSH",
											"source": 14,
											"value": "44"
										},
										{
											"begin": 6565,
											"end": 6583,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6565,
											"end": 6583,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6558,
											"end": 6600,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 6617,
											"end": 6635,
											"name": "PUSH",
											"source": 14,
											"value": "64"
										},
										{
											"begin": 6617,
											"end": 6635,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6741,
											"end": 6783,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "156"
										},
										{
											"begin": 6305,
											"end": 6641,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11044,
											"end": 11502,
											"name": "tag",
											"source": 9,
											"value": "78"
										},
										{
											"begin": 11044,
											"end": 11502,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11126,
											"end": 11133,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11220,
											"end": 11240,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "175"
										},
										{
											"begin": 11233,
											"end": 11239,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11220,
											"end": 11232,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "176"
										},
										{
											"begin": 11220,
											"end": 11240,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11220,
											"end": 11240,
											"name": "tag",
											"source": 9,
											"value": "175"
										},
										{
											"begin": 11220,
											"end": 11240,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6250,
											"end": 6267,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6250,
											"end": 6267,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6224,
											"end": 6231,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6250,
											"end": 6267,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6250,
											"end": 6267,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6250,
											"end": 6267,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6250,
											"end": 6259,
											"name": "PUSH",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 6250,
											"end": 6267,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6250,
											"end": 6267,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6250,
											"end": 6267,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6250,
											"end": 6267,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6250,
											"end": 6267,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 6250,
											"end": 6267,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 11259,
											"end": 11265,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11259,
											"end": 11286,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 11251,
											"end": 11303,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "178"
										},
										{
											"begin": 11251,
											"end": 11303,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 11251,
											"end": 11303,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 11251,
											"end": 11303,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11251,
											"end": 11303,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11251,
											"end": 11303,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6848,
											"end": 6850,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 11251,
											"end": 11303,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 11251,
											"end": 11303,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11251,
											"end": 11303,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6830,
											"end": 6851,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 6887,
											"end": 6889,
											"name": "PUSH",
											"source": 14,
											"value": "C"
										},
										{
											"begin": 6867,
											"end": 6885,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 6867,
											"end": 6885,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6867,
											"end": 6885,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6860,
											"end": 6890,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "9EEAE840DECC4092DCC8CAF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6906,
											"end": 6924,
											"name": "PUSH",
											"source": 14,
											"value": "44"
										},
										{
											"begin": 6906,
											"end": 6924,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6906,
											"end": 6924,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6899,
											"end": 6941,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 6958,
											"end": 6976,
											"name": "PUSH",
											"source": 14,
											"value": "64"
										},
										{
											"begin": 6958,
											"end": 6976,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11251,
											"end": 11303,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "156"
										},
										{
											"begin": 6646,
											"end": 6982,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11251,
											"end": 11303,
											"name": "tag",
											"source": 9,
											"value": "178"
										},
										{
											"begin": 11251,
											"end": 11303,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11318,
											"end": 11338,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11318,
											"end": 11338,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 11314,
											"end": 11413,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "181"
										},
										{
											"begin": 11314,
											"end": 11413,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 11361,
											"end": 11402,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 11361,
											"end": 11402,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "74F5E87D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11361,
											"end": 11402,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11361,
											"end": 11402,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11399,
											"end": 11400,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11361,
											"end": 11402,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 11361,
											"end": 11402,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11361,
											"end": 11402,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1679,
											"end": 1730,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1652,
											"end": 1670,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 1652,
											"end": 1670,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11361,
											"end": 11402,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "156"
										},
										{
											"begin": 1533,
											"end": 1736,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11314,
											"end": 11413,
											"name": "tag",
											"source": 9,
											"value": "181"
										},
										{
											"begin": 11314,
											"end": 11413,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11441,
											"end": 11461,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11441,
											"end": 11461,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11441,
											"end": 11461,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11441,
											"end": 11461,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 11423,
											"end": 11438,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11441,
											"end": 11461,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11441,
											"end": 11461,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11441,
											"end": 11461,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11441,
											"end": 11453,
											"name": "PUSH",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 11441,
											"end": 11461,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11441,
											"end": 11461,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11441,
											"end": 11461,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11441,
											"end": 11461,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11441,
											"end": 11461,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 11441,
											"end": 11461,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 11441,
											"end": 11461,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11441,
											"end": 11461,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 11441,
											"end": 11469,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 11441,
											"end": 11469,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11441,
											"end": 11469,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11441,
											"end": 11469,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 11441,
											"end": 11469,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11441,
											"end": 11469,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11441,
											"end": 11469,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 11441,
											"end": 11469,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 11441,
											"end": 11469,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11044,
											"end": 11502,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7524,
											"end": 7663,
											"name": "tag",
											"source": 9,
											"value": "82"
										},
										{
											"begin": 7524,
											"end": 7663,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7604,
											"end": 7611,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7630,
											"end": 7656,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "187"
										},
										{
											"begin": 7640,
											"end": 7643,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7645,
											"end": 7655,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7630,
											"end": 7639,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "188"
										},
										{
											"begin": 7630,
											"end": 7656,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7630,
											"end": 7656,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "187"
										},
										{
											"begin": 7630,
											"end": 7656,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7623,
											"end": 7656,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 7524,
											"end": 7663,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7524,
											"end": 7663,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6512,
											"end": 6652,
											"name": "tag",
											"source": 9,
											"value": "86"
										},
										{
											"begin": 6512,
											"end": 6652,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6599,
											"end": 6645,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6599,
											"end": 6645,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "13F8DCEB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6599,
											"end": 6645,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6599,
											"end": 6645,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7189,
											"end": 7191,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 6599,
											"end": 6645,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 6599,
											"end": 6645,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6599,
											"end": 6645,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7171,
											"end": 7192,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 7228,
											"end": 7230,
											"name": "PUSH",
											"source": 14,
											"value": "10"
										},
										{
											"begin": 7208,
											"end": 7226,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 7208,
											"end": 7226,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7208,
											"end": 7226,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7201,
											"end": 7231,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "736166655472616E7366657246726F6D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7247,
											"end": 7265,
											"name": "PUSH",
											"source": 14,
											"value": "44"
										},
										{
											"begin": 7247,
											"end": 7265,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7247,
											"end": 7265,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7240,
											"end": 7286,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 7303,
											"end": 7321,
											"name": "PUSH",
											"source": 14,
											"value": "64"
										},
										{
											"begin": 7303,
											"end": 7321,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6599,
											"end": 6645,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "156"
										},
										{
											"begin": 6987,
											"end": 7327,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9353,
											"end": 9584,
											"name": "tag",
											"source": 9,
											"value": "89"
										},
										{
											"begin": 9353,
											"end": 9584,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9412,
											"end": 9419,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9507,
											"end": 9536,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "193"
										},
										{
											"begin": 9527,
											"end": 9535,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9507,
											"end": 9526,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "194"
										},
										{
											"begin": 9507,
											"end": 9536,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9507,
											"end": 9536,
											"name": "tag",
											"source": 9,
											"value": "193"
										},
										{
											"begin": 9507,
											"end": 9536,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9554,
											"end": 9577,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9554,
											"end": 9577,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9554,
											"end": 9577,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9554,
											"end": 9577,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9554,
											"end": 9567,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 9554,
											"end": 9577,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9554,
											"end": 9577,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9554,
											"end": 9577,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9554,
											"end": 9577,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9554,
											"end": 9577,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 9554,
											"end": 9577,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 9554,
											"end": 9577,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9353,
											"end": 9584,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5470,
											"end": 5707,
											"name": "tag",
											"source": 9,
											"value": "93"
										},
										{
											"begin": 5470,
											"end": 5707,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5540,
											"end": 5547,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5636,
											"end": 5665,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "196"
										},
										{
											"begin": 5656,
											"end": 5664,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5636,
											"end": 5655,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "194"
										},
										{
											"begin": 5636,
											"end": 5665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5636,
											"end": 5665,
											"name": "tag",
											"source": 9,
											"value": "196"
										},
										{
											"begin": 5636,
											"end": 5665,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5683,
											"end": 5700,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5683,
											"end": 5700,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5683,
											"end": 5700,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5683,
											"end": 5700,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5683,
											"end": 5690,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 5683,
											"end": 5700,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5683,
											"end": 5700,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5683,
											"end": 5700,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5683,
											"end": 5700,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5683,
											"end": 5700,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 5683,
											"end": 5700,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5683,
											"end": 5700,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5683,
											"end": 5700,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5470,
											"end": 5707,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5932,
											"end": 6159,
											"name": "tag",
											"source": 9,
											"value": "97"
										},
										{
											"begin": 5932,
											"end": 6159,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5992,
											"end": 5999,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6088,
											"end": 6108,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "198"
										},
										{
											"begin": 6101,
											"end": 6107,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6088,
											"end": 6100,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "176"
										},
										{
											"begin": 6088,
											"end": 6108,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6088,
											"end": 6108,
											"name": "tag",
											"source": 9,
											"value": "198"
										},
										{
											"begin": 6088,
											"end": 6108,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6250,
											"end": 6267,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6250,
											"end": 6267,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6224,
											"end": 6231,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6250,
											"end": 6267,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6250,
											"end": 6267,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6250,
											"end": 6267,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6250,
											"end": 6259,
											"name": "PUSH",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 6250,
											"end": 6267,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6250,
											"end": 6267,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6250,
											"end": 6267,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6250,
											"end": 6267,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6250,
											"end": 6267,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 6250,
											"end": 6267,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 6134,
											"end": 6152,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "152"
										},
										{
											"begin": 6165,
											"end": 6274,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1888,
											"end": 1918,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 1915,
											"end": 1916,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1888,
											"end": 1906,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 1888,
											"end": 1918,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1888,
											"end": 1918,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 1888,
											"end": 1918,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1824,
											"end": 1925,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3760,
											"end": 3916,
											"name": "tag",
											"source": 9,
											"value": "103"
										},
										{
											"begin": 3760,
											"end": 3916,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3821,
											"end": 3828,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3841,
											"end": 3870,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "206"
										},
										{
											"begin": 3861,
											"end": 3869,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3841,
											"end": 3860,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "194"
										},
										{
											"begin": 3841,
											"end": 3870,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3841,
											"end": 3870,
											"name": "tag",
											"source": 9,
											"value": "206"
										},
										{
											"begin": 3841,
											"end": 3870,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3888,
											"end": 3909,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3888,
											"end": 3909,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3888,
											"end": 3909,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3888,
											"end": 3909,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3888,
											"end": 3899,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 3888,
											"end": 3909,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3888,
											"end": 3909,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3888,
											"end": 3909,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3888,
											"end": 3909,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3888,
											"end": 3909,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 3888,
											"end": 3909,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3888,
											"end": 3909,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3760,
											"end": 3916,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8706,
											"end": 8903,
											"name": "tag",
											"source": 9,
											"value": "113"
										},
										{
											"begin": 8706,
											"end": 8903,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8774,
											"end": 8784,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8774,
											"end": 8791,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8774,
											"end": 8791,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8774,
											"end": 8791,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 8770,
											"end": 8856,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "210"
										},
										{
											"begin": 8770,
											"end": 8856,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8814,
											"end": 8845,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8814,
											"end": 8845,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "50159299"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8814,
											"end": 8845,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8814,
											"end": 8845,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1697,
											"end": 1729,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 1697,
											"end": 1729,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 8814,
											"end": 8845,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 8814,
											"end": 8845,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8814,
											"end": 8845,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1679,
											"end": 1730,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1652,
											"end": 1670,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 1652,
											"end": 1670,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8814,
											"end": 8845,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "156"
										},
										{
											"begin": 1533,
											"end": 1736,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8770,
											"end": 8856,
											"name": "tag",
											"source": 9,
											"value": "210"
										},
										{
											"begin": 8770,
											"end": 8856,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8865,
											"end": 8896,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "212"
										},
										{
											"begin": 8882,
											"end": 8885,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8887,
											"end": 8895,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8865,
											"end": 8881,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "213"
										},
										{
											"begin": 8865,
											"end": 8896,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8865,
											"end": 8896,
											"name": "tag",
											"source": 9,
											"value": "212"
										},
										{
											"begin": 8865,
											"end": 8896,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8706,
											"end": 8903,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8706,
											"end": 8903,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8706,
											"end": 8903,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6913,
											"end": 7042,
											"name": "tag",
											"source": 9,
											"value": "117"
										},
										{
											"begin": 6913,
											"end": 7042,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6988,
											"end": 7035,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6988,
											"end": 7035,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "13F8DCEB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6988,
											"end": 7035,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6988,
											"end": 7035,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7534,
											"end": 7536,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 6988,
											"end": 7035,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 6988,
											"end": 7035,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6988,
											"end": 7035,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7516,
											"end": 7537,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 7573,
											"end": 7575,
											"name": "PUSH",
											"source": 14,
											"value": "11"
										},
										{
											"begin": 7553,
											"end": 7571,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 7553,
											"end": 7571,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7553,
											"end": 7571,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7546,
											"end": 7576,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1CD95D105C1C1C9BDD985B119BDC905B1B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7592,
											"end": 7610,
											"name": "PUSH",
											"source": 14,
											"value": "44"
										},
										{
											"begin": 7592,
											"end": 7610,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7592,
											"end": 7610,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7585,
											"end": 7632,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 7649,
											"end": 7667,
											"name": "PUSH",
											"source": 14,
											"value": "64"
										},
										{
											"begin": 7649,
											"end": 7667,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6988,
											"end": 7035,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "156"
										},
										{
											"begin": 7332,
											"end": 7673,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10380,
											"end": 10508,
											"name": "tag",
											"source": 9,
											"value": "124"
										},
										{
											"begin": 10380,
											"end": 10508,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10453,
											"end": 10460,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10479,
											"end": 10501,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "187"
										},
										{
											"begin": 10487,
											"end": 10490,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10492,
											"end": 10500,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10479,
											"end": 10486,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "223"
										},
										{
											"begin": 10479,
											"end": 10501,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3045,
											"end": 3366,
											"name": "tag",
											"source": 9,
											"value": "128"
										},
										{
											"begin": 3045,
											"end": 3366,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3113,
											"end": 3126,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 3180,
											"end": 3209,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "225"
										},
										{
											"begin": 3200,
											"end": 3208,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3180,
											"end": 3199,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "194"
										},
										{
											"begin": 3180,
											"end": 3209,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3180,
											"end": 3209,
											"name": "tag",
											"source": 9,
											"value": "225"
										},
										{
											"begin": 3180,
											"end": 3209,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3252,
											"end": 3253,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3237,
											"end": 3241,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 3231,
											"end": 3249,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3231,
											"end": 3249,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3231,
											"end": 3249,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "226"
										},
										{
											"begin": 3231,
											"end": 3249,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3231,
											"end": 3249,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "227"
										},
										{
											"begin": 3231,
											"end": 3249,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3231,
											"end": 3249,
											"name": "tag",
											"source": 9,
											"value": "226"
										},
										{
											"begin": 3231,
											"end": 3249,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3231,
											"end": 3249,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3231,
											"end": 3249,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3231,
											"end": 3253,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 3231,
											"end": 3359,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "228"
										},
										{
											"begin": 3231,
											"end": 3359,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3231,
											"end": 3359,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3231,
											"end": 3359,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3231,
											"end": 3359,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3231,
											"end": 3359,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3231,
											"end": 3359,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3231,
											"end": 3359,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3231,
											"end": 3359,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3231,
											"end": 3359,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3231,
											"end": 3359,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3231,
											"end": 3359,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3231,
											"end": 3359,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3231,
											"end": 3359,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3231,
											"end": 3359,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "152"
										},
										{
											"begin": 3231,
											"end": 3359,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3231,
											"end": 3359,
											"name": "tag",
											"source": 9,
											"value": "228"
										},
										{
											"begin": 3231,
											"end": 3359,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3280,
											"end": 3284,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 3285,
											"end": 3304,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "230"
										},
										{
											"begin": 3285,
											"end": 3293,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3285,
											"end": 3302,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "231"
										},
										{
											"begin": 3285,
											"end": 3304,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3285,
											"end": 3304,
											"name": "tag",
											"source": 9,
											"value": "230"
										},
										{
											"begin": 3285,
											"end": 3304,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3320,
											"end": 3341,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3320,
											"end": 3341,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3320,
											"end": 3341,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3320,
											"end": 3341,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3320,
											"end": 3331,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 3320,
											"end": 3341,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3320,
											"end": 3341,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3320,
											"end": 3341,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3320,
											"end": 3341,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3320,
											"end": 3341,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 3320,
											"end": 3341,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3320,
											"end": 3352,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "232"
										},
										{
											"begin": 3320,
											"end": 3352,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3320,
											"end": 3350,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "231"
										},
										{
											"begin": 3320,
											"end": 3352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3320,
											"end": 3352,
											"name": "tag",
											"source": 9,
											"value": "232"
										},
										{
											"begin": 3320,
											"end": 3352,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3263,
											"end": 3353,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3263,
											"end": 3353,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3263,
											"end": 3353,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3263,
											"end": 3353,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3263,
											"end": 3353,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "233"
										},
										{
											"begin": 3263,
											"end": 3353,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 3263,
											"end": 3353,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3263,
											"end": 3353,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3263,
											"end": 3353,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3263,
											"end": 3353,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "234"
										},
										{
											"begin": 3263,
											"end": 3353,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3263,
											"end": 3353,
											"name": "tag",
											"source": 9,
											"value": "233"
										},
										{
											"begin": 3263,
											"end": 3353,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3263,
											"end": 3353,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3263,
											"end": 3353,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3263,
											"end": 3353,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3263,
											"end": 3353,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3263,
											"end": 3353,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3263,
											"end": 3353,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3263,
											"end": 3353,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3263,
											"end": 3353,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3263,
											"end": 3353,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3263,
											"end": 3353,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3263,
											"end": 3353,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3263,
											"end": 3353,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3224,
											"end": 3359,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3045,
											"end": 3366,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3045,
											"end": 3366,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4713,
											"end": 4817,
											"name": "tag",
											"source": 9,
											"value": "132"
										},
										{
											"begin": 4713,
											"end": 4817,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4770,
											"end": 4774,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4793,
											"end": 4810,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "152"
										},
										{
											"begin": 4806,
											"end": 4809,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4793,
											"end": 4805,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "176"
										},
										{
											"begin": 4793,
											"end": 4810,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3373,
											"end": 3566,
											"name": "tag",
											"source": 9,
											"value": "137"
										},
										{
											"begin": 3373,
											"end": 3566,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3446,
											"end": 3459,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3471,
											"end": 3475,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 3471,
											"end": 3487,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "240"
										},
										{
											"begin": 3478,
											"end": 3487,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3471,
											"end": 3475,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3471,
											"end": 3487,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "241"
										},
										{
											"begin": 3471,
											"end": 3487,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3471,
											"end": 3487,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "240"
										},
										{
											"begin": 3471,
											"end": 3487,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3471,
											"end": 3487,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3515,
											"end": 3525,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3503,
											"end": 3537,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3503,
											"end": 3537,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "70E6A9DC20D331CE8E747D7DE8444F26F544D9003BEB11D8C46E802AB8D36FC9"
										},
										{
											"begin": 3527,
											"end": 3536,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3503,
											"end": 3537,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3503,
											"end": 3537,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3503,
											"end": 3537,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "242"
										},
										{
											"begin": 3503,
											"end": 3537,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3503,
											"end": 3537,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3503,
											"end": 3537,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "47"
										},
										{
											"begin": 3503,
											"end": 3537,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3503,
											"end": 3537,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "242"
										},
										{
											"begin": 3503,
											"end": 3537,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3503,
											"end": 3537,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3503,
											"end": 3537,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3503,
											"end": 3537,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3503,
											"end": 3537,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3503,
											"end": 3537,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3503,
											"end": 3537,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3503,
											"end": 3537,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 9
										},
										{
											"begin": 3555,
											"end": 3559,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 3548,
											"end": 3559,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3548,
											"end": 3559,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3548,
											"end": 3559,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "243"
										},
										{
											"begin": 3548,
											"end": 3559,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3548,
											"end": 3559,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "227"
										},
										{
											"begin": 3548,
											"end": 3559,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3548,
											"end": 3559,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "243"
										},
										{
											"begin": 3548,
											"end": 3559,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3548,
											"end": 3559,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3548,
											"end": 3559,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 3548,
											"end": 3559,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3548,
											"end": 3559,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3548,
											"end": 3559,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3548,
											"end": 3559,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3548,
											"end": 3559,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 3548,
											"end": 3559,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 3548,
											"end": 3559,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3548,
											"end": 3559,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3548,
											"end": 3559,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3548,
											"end": 3559,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3548,
											"end": 3559,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3548,
											"end": 3559,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3548,
											"end": 3559,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3548,
											"end": 3559,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3548,
											"end": 3559,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3548,
											"end": 3559,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3548,
											"end": 3559,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3548,
											"end": 3559,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3548,
											"end": 3559,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3548,
											"end": 3559,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3548,
											"end": 3559,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3548,
											"end": 3559,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3548,
											"end": 3559,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3548,
											"end": 3559,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3548,
											"end": 3559,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3548,
											"end": 3559,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3548,
											"end": 3559,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3548,
											"end": 3559,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "244"
										},
										{
											"begin": 3548,
											"end": 3559,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3548,
											"end": 3559,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "227"
										},
										{
											"begin": 3548,
											"end": 3559,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3548,
											"end": 3559,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "244"
										},
										{
											"begin": 3548,
											"end": 3559,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3548,
											"end": 3559,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3548,
											"end": 3559,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3548,
											"end": 3559,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "245"
										},
										{
											"begin": 3548,
											"end": 3559,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3548,
											"end": 3559,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3548,
											"end": 3559,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 3548,
											"end": 3559,
											"modifierDepth": 1,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 3548,
											"end": 3559,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "246"
										},
										{
											"begin": 3548,
											"end": 3559,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3548,
											"end": 3559,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 3548,
											"end": 3559,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3548,
											"end": 3559,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3548,
											"end": 3559,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3548,
											"end": 3559,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 3548,
											"end": 3559,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 3548,
											"end": 3559,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3548,
											"end": 3559,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3548,
											"end": 3559,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3548,
											"end": 3559,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3548,
											"end": 3559,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3548,
											"end": 3559,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3548,
											"end": 3559,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "245"
										},
										{
											"begin": 3548,
											"end": 3559,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3548,
											"end": 3559,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "246"
										},
										{
											"begin": 3548,
											"end": 3559,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3548,
											"end": 3559,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3548,
											"end": 3559,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3548,
											"end": 3559,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3548,
											"end": 3559,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3548,
											"end": 3559,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3548,
											"end": 3559,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3548,
											"end": 3559,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3548,
											"end": 3559,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3548,
											"end": 3559,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 3548,
											"end": 3559,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3548,
											"end": 3559,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "247"
										},
										{
											"begin": 3548,
											"end": 3559,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3548,
											"end": 3559,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3548,
											"end": 3559,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3548,
											"end": 3559,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3548,
											"end": 3559,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3548,
											"end": 3559,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3548,
											"end": 3559,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 3548,
											"end": 3559,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3548,
											"end": 3559,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3548,
											"end": 3559,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3548,
											"end": 3559,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3548,
											"end": 3559,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3548,
											"end": 3559,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3548,
											"end": 3559,
											"modifierDepth": 1,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 3548,
											"end": 3559,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "247"
										},
										{
											"begin": 3548,
											"end": 3559,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3548,
											"end": 3559,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3548,
											"end": 3559,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3548,
											"end": 3559,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3548,
											"end": 3559,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 3548,
											"end": 3559,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3548,
											"end": 3559,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3548,
											"end": 3559,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3548,
											"end": 3559,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3548,
											"end": 3559,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "245"
										},
										{
											"begin": 3548,
											"end": 3559,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3548,
											"end": 3559,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3548,
											"end": 3559,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3548,
											"end": 3559,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3548,
											"end": 3559,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3548,
											"end": 3559,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3548,
											"end": 3559,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3548,
											"end": 3559,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1117,
											"end": 1118,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 1117,
											"end": 1118,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3373,
											"end": 3566,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3373,
											"end": 3566,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3373,
											"end": 3566,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3373,
											"end": 3566,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7186,
											"end": 7329,
											"name": "tag",
											"source": 9,
											"value": "145"
										},
										{
											"begin": 7186,
											"end": 7329,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7276,
											"end": 7322,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7276,
											"end": 7322,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "13F8DCEB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7276,
											"end": 7322,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7276,
											"end": 7322,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11857,
											"end": 11859,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 7276,
											"end": 7322,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 7276,
											"end": 7322,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7276,
											"end": 7322,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11839,
											"end": 11860,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 11896,
											"end": 11898,
											"name": "PUSH",
											"source": 14,
											"value": "10"
										},
										{
											"begin": 11876,
											"end": 11894,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 11876,
											"end": 11894,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 11876,
											"end": 11894,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11869,
											"end": 11899,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1A5CD05C1C1C9BDD9959119BDC905B1B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "82"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11915,
											"end": 11933,
											"name": "PUSH",
											"source": 14,
											"value": "44"
										},
										{
											"begin": 11915,
											"end": 11933,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 11915,
											"end": 11933,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11908,
											"end": 11954,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 7253,
											"end": 7257,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7253,
											"end": 7257,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11971,
											"end": 11989,
											"name": "PUSH",
											"source": 14,
											"value": "64"
										},
										{
											"begin": 11971,
											"end": 11989,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7276,
											"end": 7322,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "156"
										},
										{
											"begin": 11655,
											"end": 11995,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2162,
											"end": 2184,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2162,
											"end": 2184,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2154,
											"end": 2227,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2154,
											"end": 2227,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12202,
											"end": 12204,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2154,
											"end": 2227,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12184,
											"end": 12205,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 12241,
											"end": 12243,
											"name": "PUSH",
											"source": 14,
											"value": "26"
										},
										{
											"begin": 12221,
											"end": 12239,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 12221,
											"end": 12239,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 12221,
											"end": 12239,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 12214,
											"end": 12244,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 12280,
											"end": 12314,
											"name": "PUSH",
											"source": 14,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 12260,
											"end": 12278,
											"name": "PUSH",
											"source": 14,
											"value": "44"
										},
										{
											"begin": 12260,
											"end": 12278,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 12260,
											"end": 12278,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 12253,
											"end": 12315,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12331,
											"end": 12349,
											"name": "PUSH",
											"source": 14,
											"value": "64"
										},
										{
											"begin": 12331,
											"end": 12349,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 12331,
											"end": 12349,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 12324,
											"end": 12360,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 12377,
											"end": 12396,
											"name": "PUSH",
											"source": 14,
											"value": "84"
										},
										{
											"begin": 12377,
											"end": 12396,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 12000,
											"end": 12402,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2265,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 2256,
											"end": 2264,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2255,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 2237,
											"end": 2265,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2265,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 2237,
											"end": 2265,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4823,
											"end": 5027,
											"name": "tag",
											"source": 9,
											"value": "176"
										},
										{
											"begin": 4823,
											"end": 5027,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4909,
											"end": 4927,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4909,
											"end": 4927,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4881,
											"end": 4885,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4909,
											"end": 4927,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4909,
											"end": 4927,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4909,
											"end": 4927,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4909,
											"end": 4922,
											"name": "PUSH",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 4909,
											"end": 4927,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4909,
											"end": 4927,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4909,
											"end": 4927,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4909,
											"end": 4927,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4909,
											"end": 4927,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 4909,
											"end": 4927,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 4909,
											"end": 4927,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 4909,
											"end": 4927,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4909,
											"end": 4935,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4909,
											"end": 4935,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4909,
											"end": 4927,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 4909,
											"end": 4935,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4905,
											"end": 4989,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "263"
										},
										{
											"begin": 4905,
											"end": 4989,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4956,
											"end": 4989,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4956,
											"end": 4989,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "904E928B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4956,
											"end": 4989,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4956,
											"end": 4989,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1697,
											"end": 1729,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 1697,
											"end": 1729,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 4956,
											"end": 4989,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4956,
											"end": 4989,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4956,
											"end": 4989,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1679,
											"end": 1730,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1652,
											"end": 1670,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 1652,
											"end": 1670,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4956,
											"end": 4989,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "156"
										},
										{
											"begin": 1533,
											"end": 1736,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4905,
											"end": 4989,
											"name": "tag",
											"source": 9,
											"value": "263"
										},
										{
											"begin": 4905,
											"end": 4989,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5015,
											"end": 5020,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5015,
											"end": 5020,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4823,
											"end": 5027,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4823,
											"end": 5027,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "tag",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1247,
											"end": 1254,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12609,
											"end": 12611,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12591,
											"end": 12612,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 12591,
											"end": 12612,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 12591,
											"end": 12612,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 12628,
											"end": 12646,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 12628,
											"end": 12646,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 12628,
											"end": 12646,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 12621,
											"end": 12651,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 12687,
											"end": 12721,
											"name": "PUSH",
											"source": 14,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 12667,
											"end": 12685,
											"name": "PUSH",
											"source": 14,
											"value": "44"
										},
										{
											"begin": 12667,
											"end": 12685,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 12667,
											"end": 12685,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 12660,
											"end": 12722,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 12739,
											"end": 12757,
											"name": "PUSH",
											"source": 14,
											"value": "64"
										},
										{
											"begin": 12739,
											"end": 12757,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 12407,
											"end": 12763,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7669,
											"end": 8700,
											"name": "tag",
											"source": 9,
											"value": "188"
										},
										{
											"begin": 7669,
											"end": 8700,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7746,
											"end": 7753,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7766,
											"end": 7781,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7784,
											"end": 7795,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 7784,
											"end": 7795,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 7798,
											"end": 7799,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 7784,
											"end": 7799,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "273"
										},
										{
											"begin": 7784,
											"end": 7799,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7784,
											"end": 7799,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7784,
											"end": 7799,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "274"
										},
										{
											"begin": 7784,
											"end": 7799,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7784,
											"end": 7799,
											"name": "tag",
											"source": 9,
											"value": "273"
										},
										{
											"begin": 7784,
											"end": 7799,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7766,
											"end": 7799,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7819,
											"end": 7836,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 7819,
											"end": 7836,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7815,
											"end": 7911,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "275"
										},
										{
											"begin": 7815,
											"end": 7911,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7859,
											"end": 7900,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7859,
											"end": 7900,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "74F5E87D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7859,
											"end": 7900,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7859,
											"end": 7900,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7897,
											"end": 7898,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7859,
											"end": 7900,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 7859,
											"end": 7900,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7859,
											"end": 7900,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1679,
											"end": 1730,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1652,
											"end": 1670,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 1652,
											"end": 1670,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7859,
											"end": 7900,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "156"
										},
										{
											"begin": 1533,
											"end": 1736,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7815,
											"end": 7911,
											"name": "tag",
											"source": 9,
											"value": "275"
										},
										{
											"begin": 7815,
											"end": 7911,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9953,
											"end": 9957,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5902,
											"end": 5919,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5902,
											"end": 5919,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5902,
											"end": 5919,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5902,
											"end": 5909,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 5902,
											"end": 5919,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5902,
											"end": 5919,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5902,
											"end": 5919,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5902,
											"end": 5919,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5902,
											"end": 5919,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 5902,
											"end": 5919,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5902,
											"end": 5919,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 9976,
											"end": 10007,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 7921,
											"end": 8008,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "279"
										},
										{
											"begin": 7921,
											"end": 8008,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7964,
											"end": 7997,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7964,
											"end": 7997,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "79A15EE1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7964,
											"end": 7997,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7964,
											"end": 7997,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7964,
											"end": 7997,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 7964,
											"end": 7997,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7964,
											"end": 7997,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2324,
											"end": 2349,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2324,
											"end": 2349,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2324,
											"end": 2349,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2297,
											"end": 2315,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 2297,
											"end": 2315,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7964,
											"end": 7997,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "156"
										},
										{
											"begin": 2178,
											"end": 2355,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7921,
											"end": 8008,
											"name": "tag",
											"source": 9,
											"value": "279"
										},
										{
											"begin": 7921,
											"end": 8008,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10108,
											"end": 10121,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 10108,
											"end": 10121,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 10085,
											"end": 10089,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10108,
											"end": 10121,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10108,
											"end": 10121,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10108,
											"end": 10121,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10108,
											"end": 10117,
											"name": "PUSH",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 10108,
											"end": 10121,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10108,
											"end": 10121,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10108,
											"end": 10121,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 10108,
											"end": 10121,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10108,
											"end": 10121,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 10108,
											"end": 10121,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 8069,
											"end": 8132,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "283"
										},
										{
											"begin": 8069,
											"end": 8132,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8120,
											"end": 8121,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 8106,
											"end": 8116,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 8106,
											"end": 8116,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8106,
											"end": 8121,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8106,
											"end": 8121,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8106,
											"end": 8121,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 8106,
											"end": 8121,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "284"
										},
										{
											"begin": 8106,
											"end": 8121,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8106,
											"end": 8121,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8106,
											"end": 8121,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "274"
										},
										{
											"begin": 8106,
											"end": 8121,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8106,
											"end": 8121,
											"name": "tag",
											"source": 9,
											"value": "284"
										},
										{
											"begin": 8106,
											"end": 8121,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8106,
											"end": 8121,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8106,
											"end": 8121,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8106,
											"end": 8121,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8069,
											"end": 8132,
											"name": "tag",
											"source": 9,
											"value": "283"
										},
										{
											"begin": 8069,
											"end": 8132,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8166,
											"end": 8180,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 8166,
											"end": 8180,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8166,
											"end": 8180,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8166,
											"end": 8180,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8166,
											"end": 8180,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8166,
											"end": 8180,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8166,
											"end": 8175,
											"name": "PUSH",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 8166,
											"end": 8180,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8166,
											"end": 8180,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8166,
											"end": 8180,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8166,
											"end": 8180,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8166,
											"end": 8180,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8166,
											"end": 8180,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8166,
											"end": 8180,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 8166,
											"end": 8180,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 8166,
											"end": 8185,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8166,
											"end": 8185,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 8184,
											"end": 8185,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 8166,
											"end": 8185,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8166,
											"end": 8185,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8166,
											"end": 8185,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8166,
											"end": 8185,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8166,
											"end": 8185,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 8199,
											"end": 8210,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 8199,
											"end": 8215,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8199,
											"end": 8215,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 8199,
											"end": 8215,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8199,
											"end": 8215,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8199,
											"end": 8215,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8199,
											"end": 8215,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 8239,
											"end": 8255,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 8239,
											"end": 8255,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 8239,
											"end": 8255,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8239,
											"end": 8246,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 8239,
											"end": 8255,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 8239,
											"end": 8255,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8239,
											"end": 8255,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8239,
											"end": 8255,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 8239,
											"end": 8255,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 8239,
											"end": 8261,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8239,
											"end": 8261,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 8239,
											"end": 8261,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8239,
											"end": 8261,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 8239,
											"end": 8261,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 8239,
											"end": 8261,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8239,
											"end": 8261,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 8271,
											"end": 8282,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 8271,
											"end": 8291,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 8271,
											"end": 8291,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8271,
											"end": 8291,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8271,
											"end": 8291,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 8271,
											"end": 8291,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 8271,
											"end": 8304,
											"name": "DUP11",
											"source": 9
										},
										{
											"begin": 8271,
											"end": 8304,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8271,
											"end": 8304,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 8314,
											"end": 8327,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 8314,
											"end": 8336,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 8314,
											"end": 8336,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8314,
											"end": 8336,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8314,
											"end": 8336,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 8314,
											"end": 8336,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 8314,
											"end": 8340,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8314,
											"end": 8340,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8314,
											"end": 8340,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 8389,
											"end": 8406,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 8389,
											"end": 8406,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 8389,
											"end": 8406,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8389,
											"end": 8401,
											"name": "PUSH",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 8389,
											"end": 8406,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8389,
											"end": 8406,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8389,
											"end": 8406,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8389,
											"end": 8406,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 8389,
											"end": 8406,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 8407,
											"end": 8421,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 8407,
											"end": 8421,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8407,
											"end": 8421,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8407,
											"end": 8421,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8407,
											"end": 8421,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 8247,
											"end": 8254,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 8247,
											"end": 8254,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 8389,
											"end": 8406,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8389,
											"end": 8406,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 8166,
											"end": 8180,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8407,
											"end": 8423,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "285"
										},
										{
											"begin": 8407,
											"end": 8423,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8407,
											"end": 8423,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "286"
										},
										{
											"begin": 8407,
											"end": 8423,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8407,
											"end": 8423,
											"name": "tag",
											"source": 9,
											"value": "285"
										},
										{
											"begin": 8407,
											"end": 8423,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8389,
											"end": 8424,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8389,
											"end": 8424,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8389,
											"end": 8424,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8389,
											"end": 8424,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8389,
											"end": 8424,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8389,
											"end": 8424,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8389,
											"end": 8424,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8389,
											"end": 8424,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8389,
											"end": 8424,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8389,
											"end": 8424,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8389,
											"end": 8424,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 8389,
											"end": 8434,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8389,
											"end": 8434,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8389,
											"end": 8434,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 8389,
											"end": 8434,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8497,
											"end": 8507,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8488,
											"end": 8495,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8483,
											"end": 8486,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8466,
											"end": 8508,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8466,
											"end": 8508,
											"name": "PUSH",
											"source": 9,
											"value": "2F00E3CDD69A77BE7ED215EC7B2A36784DD158F921FCA79AC29DEFFA353FE6EE"
										},
										{
											"begin": 8479,
											"end": 8480,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8466,
											"end": 8508,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8466,
											"end": 8508,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 8466,
											"end": 8508,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "287"
										},
										{
											"begin": 8466,
											"end": 8508,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8466,
											"end": 8508,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1697,
											"end": 1729,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1697,
											"end": 1729,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1697,
											"end": 1729,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1697,
											"end": 1729,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 1679,
											"end": 1730,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1679,
											"end": 1730,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1667,
											"end": 1669,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1652,
											"end": 1670,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1652,
											"end": 1670,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1533,
											"end": 1736,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8466,
											"end": 8508,
											"name": "tag",
											"source": 9,
											"value": "287"
										},
										{
											"begin": 8466,
											"end": 8508,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8466,
											"end": 8508,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8466,
											"end": 8508,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 8466,
											"end": 8508,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8466,
											"end": 8508,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8466,
											"end": 8508,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 8466,
											"end": 8508,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8466,
											"end": 8508,
											"name": "LOG4",
											"source": 9
										},
										{
											"begin": 8540,
											"end": 8592,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "288"
										},
										{
											"begin": 8571,
											"end": 8572,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8575,
											"end": 8578,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 8580,
											"end": 8587,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8540,
											"end": 8592,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8540,
											"end": 8592,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 8540,
											"end": 8592,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8540,
											"end": 8592,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8540,
											"end": 8592,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8540,
											"end": 8592,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8540,
											"end": 8592,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8540,
											"end": 8592,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8540,
											"end": 8592,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8540,
											"end": 8592,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8540,
											"end": 8592,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8540,
											"end": 8592,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8540,
											"end": 8562,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "289"
										},
										{
											"begin": 8540,
											"end": 8592,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8540,
											"end": 8592,
											"name": "tag",
											"source": 9,
											"value": "288"
										},
										{
											"begin": 8540,
											"end": 8592,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8519,
											"end": 8668,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "187"
										},
										{
											"begin": 8519,
											"end": 8668,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8519,
											"end": 8668,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8519,
											"end": 8668,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8519,
											"end": 8668,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8519,
											"end": 8668,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13365,
											"end": 13367,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 8519,
											"end": 8668,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 8519,
											"end": 8668,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8519,
											"end": 8668,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13347,
											"end": 13368,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 13404,
											"end": 13406,
											"name": "PUSH",
											"source": 14,
											"value": "32"
										},
										{
											"begin": 13384,
											"end": 13402,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 13384,
											"end": 13402,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 13384,
											"end": 13402,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 13377,
											"end": 13407,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 13443,
											"end": 13477,
											"name": "PUSH",
											"source": 14,
											"value": "4552433732313A207472616E7366657220746F206E6F6E204552433732315265"
										},
										{
											"begin": 13423,
											"end": 13441,
											"name": "PUSH",
											"source": 14,
											"value": "44"
										},
										{
											"begin": 13423,
											"end": 13441,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 13423,
											"end": 13441,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 13416,
											"end": 13478,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "31B2B4BB32B91034B6B83632B6B2B73A32B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13494,
											"end": 13512,
											"name": "PUSH",
											"source": 14,
											"value": "64"
										},
										{
											"begin": 13494,
											"end": 13512,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 13494,
											"end": 13512,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 13487,
											"end": 13535,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 13552,
											"end": 13571,
											"name": "PUSH",
											"source": 14,
											"value": "84"
										},
										{
											"begin": 13552,
											"end": 13571,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8519,
											"end": 8668,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "156"
										},
										{
											"begin": 13163,
											"end": 13577,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5033,
											"end": 5335,
											"name": "tag",
											"source": 9,
											"value": "194"
										},
										{
											"begin": 5033,
											"end": 5335,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9953,
											"end": 9957,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5902,
											"end": 5919,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5902,
											"end": 5919,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5902,
											"end": 5919,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5902,
											"end": 5909,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 5902,
											"end": 5919,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5902,
											"end": 5919,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5902,
											"end": 5919,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5902,
											"end": 5919,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5902,
											"end": 5919,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 5902,
											"end": 5919,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5902,
											"end": 5919,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5191,
											"end": 5287,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "295"
										},
										{
											"begin": 5191,
											"end": 5287,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5236,
											"end": 5276,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5236,
											"end": 5276,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "24476A3F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5236,
											"end": 5276,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5236,
											"end": 5276,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5236,
											"end": 5276,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 5236,
											"end": 5276,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5236,
											"end": 5276,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2324,
											"end": 2349,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2324,
											"end": 2349,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2324,
											"end": 2349,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2297,
											"end": 2315,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 2297,
											"end": 2315,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5236,
											"end": 5276,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "156"
										},
										{
											"begin": 2178,
											"end": 2355,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5191,
											"end": 5287,
											"name": "tag",
											"source": 9,
											"value": "295"
										},
										{
											"begin": 5191,
											"end": 5287,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5310,
											"end": 5327,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5310,
											"end": 5327,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5310,
											"end": 5327,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5310,
											"end": 5327,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5310,
											"end": 5317,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 5310,
											"end": 5327,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5310,
											"end": 5327,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5310,
											"end": 5327,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5310,
											"end": 5327,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5310,
											"end": 5327,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 5310,
											"end": 5327,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 5297,
											"end": 5328,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "212"
										},
										{
											"begin": 5297,
											"end": 5328,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5310,
											"end": 5327,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5297,
											"end": 5309,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "176"
										},
										{
											"begin": 5297,
											"end": 5328,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2426,
											"end": 2613,
											"name": "tag",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 2426,
											"end": 2613,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2489,
											"end": 2613,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2426,
											"end": 2613,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2426,
											"end": 2613,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8909,
											"end": 9138,
											"name": "tag",
											"source": 9,
											"value": "213"
										},
										{
											"begin": 8909,
											"end": 9138,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9026,
											"end": 9057,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "300"
										},
										{
											"begin": 9043,
											"end": 9046,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9048,
											"end": 9056,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9026,
											"end": 9042,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "301"
										},
										{
											"begin": 9026,
											"end": 9057,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9026,
											"end": 9057,
											"name": "tag",
											"source": 9,
											"value": "300"
										},
										{
											"begin": 9026,
											"end": 9057,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9094,
											"end": 9095,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9068,
											"end": 9091,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9068,
											"end": 9091,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9068,
											"end": 9091,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9068,
											"end": 9081,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 9068,
											"end": 9091,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9068,
											"end": 9091,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9068,
											"end": 9091,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9068,
											"end": 9091,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9068,
											"end": 9091,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9068,
											"end": 9091,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 9068,
											"end": 9095,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9068,
											"end": 9095,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9068,
											"end": 9095,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 9111,
											"end": 9131,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 9082,
											"end": 9090,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9082,
											"end": 9090,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9111,
											"end": 9131,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 9111,
											"end": 9131,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 9111,
											"end": 9131,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9111,
											"end": 9131,
											"name": "PUSH",
											"source": 9,
											"value": "154FA90F2D3692DF165AFACDCD7755B2E9D98A892A80CC1DDA63F3A9CC1E64A4"
										},
										{
											"begin": 9111,
											"end": 9131,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9094,
											"end": 9095,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9111,
											"end": 9131,
											"name": "LOG3",
											"source": 9
										},
										{
											"begin": 8909,
											"end": 9138,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8909,
											"end": 9138,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8909,
											"end": 9138,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10518,
											"end": 10860,
											"name": "tag",
											"source": 9,
											"value": "223"
										},
										{
											"begin": 10518,
											"end": 10860,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10583,
											"end": 10590,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10647,
											"end": 10678,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "303"
										},
										{
											"begin": 10664,
											"end": 10667,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10669,
											"end": 10677,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10647,
											"end": 10663,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "301"
										},
										{
											"begin": 10647,
											"end": 10678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10647,
											"end": 10678,
											"name": "tag",
											"source": 9,
											"value": "303"
										},
										{
											"begin": 10647,
											"end": 10678,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10689,
											"end": 10712,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10689,
											"end": 10712,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10689,
											"end": 10712,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10689,
											"end": 10712,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10689,
											"end": 10702,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 10689,
											"end": 10712,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10689,
											"end": 10712,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10689,
											"end": 10712,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 10689,
											"end": 10712,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10689,
											"end": 10712,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 10689,
											"end": 10717,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 10689,
											"end": 10717,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 10716,
											"end": 10717,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 10716,
											"end": 10717,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 10689,
											"end": 10712,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10689,
											"end": 10717,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "304"
										},
										{
											"begin": 10689,
											"end": 10717,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10716,
											"end": 10717,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 10716,
											"end": 10717,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10689,
											"end": 10717,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "274"
										},
										{
											"begin": 10689,
											"end": 10717,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10689,
											"end": 10717,
											"name": "tag",
											"source": 9,
											"value": "304"
										},
										{
											"begin": 10689,
											"end": 10717,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10689,
											"end": 10717,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10689,
											"end": 10717,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10689,
											"end": 10717,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10728,
											"end": 10747,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10751,
											"end": 10774,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10751,
											"end": 10774,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10751,
											"end": 10774,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10751,
											"end": 10764,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 10751,
											"end": 10774,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10751,
											"end": 10774,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10751,
											"end": 10774,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10751,
											"end": 10774,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10751,
											"end": 10774,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 10751,
											"end": 10774,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10751,
											"end": 10774,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10751,
											"end": 10774,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10751,
											"end": 10774,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 10751,
											"end": 10774,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 10790,
											"end": 10824,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10790,
											"end": 10824,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2324,
											"end": 2349,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 2324,
											"end": 2349,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2324,
											"end": 2349,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 10751,
											"end": 10774,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10751,
											"end": 10774,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10790,
											"end": 10824,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 10790,
											"end": 10824,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 10790,
											"end": 10824,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10790,
											"end": 10824,
											"name": "PUSH",
											"source": 9,
											"value": "48FFD7FDB1C1A0561A2D410317F6BB839AAB64898DE6FC73EE703A9C0DC0A36C"
										},
										{
											"begin": 10790,
											"end": 10824,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2297,
											"end": 2315,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10790,
											"end": 10824,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 10790,
											"end": 10824,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 10790,
											"end": 10824,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 10790,
											"end": 10824,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10790,
											"end": 10824,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 10790,
											"end": 10824,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10790,
											"end": 10824,
											"name": "LOG3",
											"source": 9
										},
										{
											"begin": 10842,
											"end": 10853,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 10518,
											"end": 10860,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10518,
											"end": 10860,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 447,
											"end": 1143,
											"name": "tag",
											"source": 4,
											"value": "231"
										},
										{
											"begin": 447,
											"end": 1143,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 503,
											"end": 516,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 552,
											"end": 566,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 569,
											"end": 586,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "307"
										},
										{
											"begin": 580,
											"end": 585,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 569,
											"end": 579,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "308"
										},
										{
											"begin": 569,
											"end": 586,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 569,
											"end": 586,
											"name": "tag",
											"source": 4,
											"value": "307"
										},
										{
											"begin": 569,
											"end": 586,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 589,
											"end": 590,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 569,
											"end": 590,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 552,
											"end": 590,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 552,
											"end": 590,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 604,
											"end": 624,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 638,
											"end": 644,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 627,
											"end": 645,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 627,
											"end": 645,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 627,
											"end": 645,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 627,
											"end": 645,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 627,
											"end": 645,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "310"
										},
										{
											"begin": 627,
											"end": 645,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 627,
											"end": 645,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "310"
										},
										{
											"begin": 627,
											"end": 645,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "311"
										},
										{
											"begin": 627,
											"end": 645,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 627,
											"end": 645,
											"name": "tag",
											"source": 4,
											"value": "310"
										},
										{
											"begin": 627,
											"end": 645,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 627,
											"end": 645,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 627,
											"end": 645,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 627,
											"end": 645,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 627,
											"end": 645,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 627,
											"end": 645,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 627,
											"end": 645,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 627,
											"end": 645,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 627,
											"end": 645,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 627,
											"end": 645,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 627,
											"end": 645,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 627,
											"end": 645,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 627,
											"end": 645,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 627,
											"end": 645,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 627,
											"end": 645,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 627,
											"end": 645,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 627,
											"end": 645,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 627,
											"end": 645,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 627,
											"end": 645,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 627,
											"end": 645,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 627,
											"end": 645,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 627,
											"end": 645,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "312"
										},
										{
											"begin": 627,
											"end": 645,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 627,
											"end": 645,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 627,
											"end": 645,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 627,
											"end": 645,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 627,
											"end": 645,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 627,
											"end": 645,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 627,
											"end": 645,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 627,
											"end": 645,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 627,
											"end": 645,
											"name": "CALLDATACOPY",
											"source": 4
										},
										{
											"begin": 627,
											"end": 645,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 627,
											"end": 645,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 627,
											"end": 645,
											"name": "tag",
											"source": 4,
											"value": "312"
										},
										{
											"begin": 627,
											"end": 645,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 604,
											"end": 645,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 765,
											"end": 793,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 765,
											"end": 793,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 765,
											"end": 793,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 781,
											"end": 783,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 765,
											"end": 793,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 820,
											"end": 1100,
											"name": "tag",
											"source": 4,
											"value": "313"
										},
										{
											"begin": 820,
											"end": 1100,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 851,
											"end": 856,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "181899199A1A9B1B9C1CB0B131B232B3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "81"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 985,
											"end": 987,
											"name": "PUSH",
											"source": 4,
											"value": "A"
										},
										{
											"begin": 974,
											"end": 988,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 974,
											"end": 988,
											"name": "MOD",
											"source": 4
										},
										{
											"begin": 969,
											"end": 999,
											"name": "BYTE",
											"source": 4
										},
										{
											"begin": 851,
											"end": 856,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 956,
											"end": 1000,
											"name": "MSTORE8",
											"source": 4
										},
										{
											"begin": 1044,
											"end": 1046,
											"name": "PUSH",
											"source": 4,
											"value": "A"
										},
										{
											"begin": 1035,
											"end": 1046,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1035,
											"end": 1046,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 1035,
											"end": 1046,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1064,
											"end": 1085,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 820,
											"end": 1100,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "313"
										},
										{
											"begin": 1064,
											"end": 1085,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1120,
											"end": 1126,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 447,
											"end": 1143,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 447,
											"end": 1143,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 12090,
											"end": 12426,
											"name": "tag",
											"source": 9,
											"value": "289"
										},
										{
											"begin": 12090,
											"end": 12426,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12203,
											"end": 12207,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12549,
											"end": 12569,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12549,
											"end": 12569,
											"name": "EXTCODESIZE",
											"source": 9
										},
										{
											"begin": 12219,
											"end": 12276,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "327"
										},
										{
											"begin": 12219,
											"end": 12276,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12261,
											"end": 12265,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 12254,
											"end": 12265,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "324"
										},
										{
											"begin": 12254,
											"end": 12265,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12219,
											"end": 12276,
											"name": "tag",
											"source": 9,
											"value": "327"
										},
										{
											"begin": 12219,
											"end": 12276,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12302,
											"end": 12374,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 12302,
											"end": 12374,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A85BD01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12302,
											"end": 12374,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12302,
											"end": 12374,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12286,
											"end": 12299,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12286,
											"end": 12299,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12302,
											"end": 12338,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 12302,
											"end": 12338,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 12302,
											"end": 12338,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12302,
											"end": 12338,
											"name": "PUSH",
											"source": 9,
											"value": "150B7A02"
										},
										{
											"begin": 12302,
											"end": 12338,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12302,
											"end": 12374,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "329"
										},
										{
											"begin": 12302,
											"end": 12374,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 719,
											"end": 729,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 12353,
											"end": 12357,
											"name": "DUP11",
											"source": 9
										},
										{
											"begin": 12353,
											"end": 12357,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12359,
											"end": 12366,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 12359,
											"end": 12366,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12368,
											"end": 12373,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 12368,
											"end": 12373,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12302,
											"end": 12374,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 12302,
											"end": 12374,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12302,
											"end": 12374,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "330"
										},
										{
											"begin": 12302,
											"end": 12374,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12302,
											"end": 12374,
											"name": "tag",
											"source": 9,
											"value": "329"
										},
										{
											"begin": 12302,
											"end": 12374,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12302,
											"end": 12374,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 12302,
											"end": 12374,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 12302,
											"end": 12374,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 12302,
											"end": 12374,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 12302,
											"end": 12374,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12302,
											"end": 12374,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 12302,
											"end": 12374,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12302,
											"end": 12374,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12302,
											"end": 12374,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 12302,
											"end": 12374,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 12302,
											"end": 12374,
											"name": "CALL",
											"source": 9
										},
										{
											"begin": 12302,
											"end": 12374,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 12302,
											"end": 12374,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 12302,
											"end": 12374,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 12302,
											"end": 12374,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "332"
										},
										{
											"begin": 12302,
											"end": 12374,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 12302,
											"end": 12374,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 12302,
											"end": 12374,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12302,
											"end": 12374,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 12302,
											"end": 12374,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 12302,
											"end": 12374,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 12302,
											"end": 12374,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12302,
											"end": 12374,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 12302,
											"end": 12374,
											"name": "tag",
											"source": 9,
											"value": "332"
										},
										{
											"begin": 12302,
											"end": 12374,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12302,
											"end": 12374,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12302,
											"end": 12374,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12302,
											"end": 12374,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12302,
											"end": 12374,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12302,
											"end": 12374,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 12302,
											"end": 12374,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 12302,
											"end": 12374,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 12302,
											"end": 12374,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 12302,
											"end": 12374,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 12302,
											"end": 12374,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 12302,
											"end": 12374,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12302,
											"end": 12374,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12302,
											"end": 12374,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 12302,
											"end": 12374,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12302,
											"end": 12374,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12302,
											"end": 12374,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 12302,
											"end": 12374,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 12302,
											"end": 12374,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12302,
											"end": 12374,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12302,
											"end": 12374,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12302,
											"end": 12374,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12302,
											"end": 12374,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12302,
											"end": 12374,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "333"
										},
										{
											"begin": 12302,
											"end": 12374,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12302,
											"end": 12374,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12302,
											"end": 12374,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "334"
										},
										{
											"begin": 12302,
											"end": 12374,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12302,
											"end": 12374,
											"name": "tag",
											"source": 9,
											"value": "333"
										},
										{
											"begin": 12302,
											"end": 12374,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 12392,
											"end": 12418,
											"name": "AND",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A85BD01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12392,
											"end": 12418,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 12392,
											"end": 12418,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12090,
											"end": 12426,
											"name": "tag",
											"source": 9,
											"value": "324"
										},
										{
											"begin": 12090,
											"end": 12426,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12090,
											"end": 12426,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 12090,
											"end": 12426,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 12090,
											"end": 12426,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12090,
											"end": 12426,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12090,
											"end": 12426,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12090,
											"end": 12426,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12090,
											"end": 12426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11901,
											"end": 12084,
											"name": "tag",
											"source": 9,
											"value": "301"
										},
										{
											"begin": 11901,
											"end": 12084,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5876,
											"end": 5883,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5902,
											"end": 5919,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5902,
											"end": 5919,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5902,
											"end": 5919,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5902,
											"end": 5909,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 5902,
											"end": 5919,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5902,
											"end": 5919,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5902,
											"end": 5919,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5902,
											"end": 5919,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5902,
											"end": 5919,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 5902,
											"end": 5919,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11991,
											"end": 12014,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11991,
											"end": 12014,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11991,
											"end": 12014,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5902,
											"end": 5919,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5902,
											"end": 5919,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 11991,
											"end": 12014,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 11988,
											"end": 12078,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "212"
										},
										{
											"begin": 11988,
											"end": 12078,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 12037,
											"end": 12067,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 12037,
											"end": 12067,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "50159299"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12037,
											"end": 12067,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12037,
											"end": 12067,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1697,
											"end": 1729,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 1697,
											"end": 1729,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 12037,
											"end": 12067,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 12037,
											"end": 12067,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12037,
											"end": 12067,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1679,
											"end": 1730,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1652,
											"end": 1670,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 1652,
											"end": 1670,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 12037,
											"end": 12067,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "156"
										},
										{
											"begin": 1533,
											"end": 1736,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10139,
											"end": 11055,
											"name": "tag",
											"source": 7,
											"value": "308"
										},
										{
											"begin": 10139,
											"end": 11055,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10192,
											"end": 10199,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10192,
											"end": 10199,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "184F03E93FF9F4DAA797ED6E38ED64BF6A1F01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10267,
											"end": 10284,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10267,
											"end": 10284,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 10263,
											"end": 10366,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "340"
										},
										{
											"begin": 10263,
											"end": 10366,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "184F03E93FF9F4DAA797ED6E38ED64BF6A1F01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10304,
											"end": 10321,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10304,
											"end": 10321,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 10304,
											"end": 10321,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10349,
											"end": 10351,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 10339,
											"end": 10351,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10263,
											"end": 10366,
											"name": "tag",
											"source": 7,
											"value": "340"
										},
										{
											"begin": 10263,
											"end": 10366,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10392,
											"end": 10400,
											"name": "PUSH",
											"source": 7,
											"value": "4EE2D6D415B85ACEF8100000000"
										},
										{
											"begin": 10383,
											"end": 10388,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10383,
											"end": 10400,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 10379,
											"end": 10482,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "343"
										},
										{
											"begin": 10379,
											"end": 10482,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 10429,
											"end": 10437,
											"name": "PUSH",
											"source": 7,
											"value": "4EE2D6D415B85ACEF8100000000"
										},
										{
											"begin": 10420,
											"end": 10437,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10420,
											"end": 10437,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 10420,
											"end": 10437,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10465,
											"end": 10467,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 10455,
											"end": 10467,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10379,
											"end": 10482,
											"name": "tag",
											"source": 7,
											"value": "343"
										},
										{
											"begin": 10379,
											"end": 10482,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10508,
											"end": 10516,
											"name": "PUSH",
											"source": 7,
											"value": "2386F26FC10000"
										},
										{
											"begin": 10499,
											"end": 10504,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10499,
											"end": 10516,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 10495,
											"end": 10598,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "346"
										},
										{
											"begin": 10495,
											"end": 10598,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 10545,
											"end": 10553,
											"name": "PUSH",
											"source": 7,
											"value": "2386F26FC10000"
										},
										{
											"begin": 10536,
											"end": 10553,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10536,
											"end": 10553,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 10536,
											"end": 10553,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10581,
											"end": 10583,
											"name": "PUSH",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 10571,
											"end": 10583,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10495,
											"end": 10598,
											"name": "tag",
											"source": 7,
											"value": "346"
										},
										{
											"begin": 10495,
											"end": 10598,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10624,
											"end": 10631,
											"name": "PUSH",
											"source": 7,
											"value": "5F5E100"
										},
										{
											"begin": 10615,
											"end": 10620,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10615,
											"end": 10631,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 10611,
											"end": 10711,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "349"
										},
										{
											"begin": 10611,
											"end": 10711,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 10660,
											"end": 10667,
											"name": "PUSH",
											"source": 7,
											"value": "5F5E100"
										},
										{
											"begin": 10651,
											"end": 10667,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10651,
											"end": 10667,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 10651,
											"end": 10667,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10695,
											"end": 10696,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 10685,
											"end": 10696,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10611,
											"end": 10711,
											"name": "tag",
											"source": 7,
											"value": "349"
										},
										{
											"begin": 10611,
											"end": 10711,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10737,
											"end": 10744,
											"name": "PUSH",
											"source": 7,
											"value": "2710"
										},
										{
											"begin": 10728,
											"end": 10733,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10728,
											"end": 10744,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 10724,
											"end": 10824,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "352"
										},
										{
											"begin": 10724,
											"end": 10824,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 10773,
											"end": 10780,
											"name": "PUSH",
											"source": 7,
											"value": "2710"
										},
										{
											"begin": 10764,
											"end": 10780,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10764,
											"end": 10780,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 10764,
											"end": 10780,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10808,
											"end": 10809,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 10798,
											"end": 10809,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10724,
											"end": 10824,
											"name": "tag",
											"source": 7,
											"value": "352"
										},
										{
											"begin": 10724,
											"end": 10824,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10850,
											"end": 10857,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 10841,
											"end": 10846,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10841,
											"end": 10857,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 10837,
											"end": 10937,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "355"
										},
										{
											"begin": 10837,
											"end": 10937,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 10886,
											"end": 10893,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 10877,
											"end": 10893,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10877,
											"end": 10893,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 10877,
											"end": 10893,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10921,
											"end": 10922,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 10911,
											"end": 10922,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10837,
											"end": 10937,
											"name": "tag",
											"source": 7,
											"value": "355"
										},
										{
											"begin": 10837,
											"end": 10937,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10963,
											"end": 10970,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 10954,
											"end": 10959,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10954,
											"end": 10970,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 10950,
											"end": 11016,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "152"
										},
										{
											"begin": 10950,
											"end": 11016,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 11000,
											"end": 11001,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 10990,
											"end": 11001,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11042,
											"end": 11048,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 10139,
											"end": 11055,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10139,
											"end": 11055,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14,
											"end": 145,
											"name": "tag",
											"source": 14,
											"value": "361"
										},
										{
											"begin": 14,
											"end": 145,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 88,
											"end": 120,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 88,
											"end": 120,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 78,
											"end": 121,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 78,
											"end": 121,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 68,
											"end": 139,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "258"
										},
										{
											"begin": 68,
											"end": 139,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 135,
											"end": 136,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 132,
											"end": 133,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 125,
											"end": 137,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 150,
											"end": 395,
											"name": "tag",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 150,
											"end": 395,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 208,
											"end": 214,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 261,
											"end": 263,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 249,
											"end": 258,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 240,
											"end": 247,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 236,
											"end": 259,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 232,
											"end": 264,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 229,
											"end": 281,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 229,
											"end": 281,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "374"
										},
										{
											"begin": 229,
											"end": 281,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 277,
											"end": 278,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 274,
											"end": 275,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 267,
											"end": 279,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 229,
											"end": 281,
											"name": "tag",
											"source": 14,
											"value": "374"
										},
										{
											"begin": 229,
											"end": 281,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 316,
											"end": 325,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 303,
											"end": 326,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 335,
											"end": 365,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "187"
										},
										{
											"begin": 359,
											"end": 364,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 335,
											"end": 365,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "361"
										},
										{
											"begin": 335,
											"end": 365,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 592,
											"end": 842,
											"name": "tag",
											"source": 14,
											"value": "362"
										},
										{
											"begin": 592,
											"end": 842,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 677,
											"end": 678,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 687,
											"end": 800,
											"name": "tag",
											"source": 14,
											"value": "378"
										},
										{
											"begin": 687,
											"end": 800,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 701,
											"end": 707,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 698,
											"end": 699,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 695,
											"end": 708,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 687,
											"end": 800,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 687,
											"end": 800,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "380"
										},
										{
											"begin": 687,
											"end": 800,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 777,
											"end": 788,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 777,
											"end": 788,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 777,
											"end": 788,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 771,
											"end": 789,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 758,
											"end": 769,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 758,
											"end": 769,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 758,
											"end": 769,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 751,
											"end": 790,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 723,
											"end": 725,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 716,
											"end": 726,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 687,
											"end": 800,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "378"
										},
										{
											"begin": 687,
											"end": 800,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 687,
											"end": 800,
											"name": "tag",
											"source": 14,
											"value": "380"
										},
										{
											"begin": 687,
											"end": 800,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 834,
											"end": 835,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 816,
											"end": 832,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 816,
											"end": 832,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 809,
											"end": 836,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 592,
											"end": 842,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 847,
											"end": 1118,
											"name": "tag",
											"source": 14,
											"value": "363"
										},
										{
											"begin": 847,
											"end": 1118,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 889,
											"end": 892,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 927,
											"end": 932,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 921,
											"end": 933,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 954,
											"end": 960,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 949,
											"end": 952,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 942,
											"end": 961,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 970,
											"end": 1046,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "382"
										},
										{
											"begin": 1039,
											"end": 1045,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1032,
											"end": 1036,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1027,
											"end": 1030,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 1023,
											"end": 1037,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1016,
											"end": 1020,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1009,
											"end": 1014,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 1005,
											"end": 1021,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 970,
											"end": 1046,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "362"
										},
										{
											"begin": 970,
											"end": 1046,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 970,
											"end": 1046,
											"name": "tag",
											"source": 14,
											"value": "382"
										},
										{
											"begin": 970,
											"end": 1046,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1100,
											"end": 1102,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 1079,
											"end": 1094,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1075,
											"end": 1104,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 1066,
											"end": 1105,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 1066,
											"end": 1105,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1066,
											"end": 1105,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 1066,
											"end": 1105,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1107,
											"end": 1111,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1062,
											"end": 1112,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1062,
											"end": 1112,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 847,
											"end": 1118,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 847,
											"end": 1118,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1123,
											"end": 1343,
											"name": "tag",
											"source": 14,
											"value": "47"
										},
										{
											"begin": 1123,
											"end": 1343,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1272,
											"end": 1274,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1261,
											"end": 1270,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1254,
											"end": 1275,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1235,
											"end": 1239,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1292,
											"end": 1337,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "187"
										},
										{
											"begin": 1333,
											"end": 1335,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1322,
											"end": 1331,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 1318,
											"end": 1336,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1310,
											"end": 1316,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 1292,
											"end": 1337,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "363"
										},
										{
											"begin": 1292,
											"end": 1337,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1348,
											"end": 1528,
											"name": "tag",
											"source": 14,
											"value": "50"
										},
										{
											"begin": 1348,
											"end": 1528,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1407,
											"end": 1413,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1460,
											"end": 1462,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1448,
											"end": 1457,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1439,
											"end": 1446,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 1435,
											"end": 1458,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 1431,
											"end": 1463,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 1428,
											"end": 1480,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 1428,
											"end": 1480,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "386"
										},
										{
											"begin": 1428,
											"end": 1480,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 1476,
											"end": 1477,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1473,
											"end": 1474,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1466,
											"end": 1478,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 1428,
											"end": 1480,
											"name": "tag",
											"source": 14,
											"value": "386"
										},
										{
											"begin": 1428,
											"end": 1480,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1499,
											"end": 1522,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 1499,
											"end": 1522,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1348,
											"end": 1528,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1348,
											"end": 1528,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1741,
											"end": 1914,
											"name": "tag",
											"source": 14,
											"value": "364"
										},
										{
											"begin": 1741,
											"end": 1914,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1809,
											"end": 1829,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1809,
											"end": 1829,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1858,
											"end": 1889,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1858,
											"end": 1889,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 1848,
											"end": 1890,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1848,
											"end": 1890,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 1838,
											"end": 1908,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "239"
										},
										{
											"begin": 1838,
											"end": 1908,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 1904,
											"end": 1905,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1901,
											"end": 1902,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1894,
											"end": 1906,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 1919,
											"end": 2173,
											"name": "tag",
											"source": 14,
											"value": "56"
										},
										{
											"begin": 1919,
											"end": 2173,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1987,
											"end": 1993,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1995,
											"end": 2001,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2048,
											"end": 2050,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 2036,
											"end": 2045,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 2027,
											"end": 2034,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 2023,
											"end": 2046,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 2019,
											"end": 2051,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 2016,
											"end": 2068,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 2016,
											"end": 2068,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "391"
										},
										{
											"begin": 2016,
											"end": 2068,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 2064,
											"end": 2065,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2061,
											"end": 2062,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2054,
											"end": 2066,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 2016,
											"end": 2068,
											"name": "tag",
											"source": 14,
											"value": "391"
										},
										{
											"begin": 2016,
											"end": 2068,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2087,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "392"
										},
										{
											"begin": 2106,
											"end": 2115,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 2087,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "364"
										},
										{
											"begin": 2087,
											"end": 2116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2087,
											"end": 2116,
											"name": "tag",
											"source": 14,
											"value": "392"
										},
										{
											"begin": 2087,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2077,
											"end": 2116,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 2163,
											"end": 2165,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2148,
											"end": 2166,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 2148,
											"end": 2166,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2148,
											"end": 2166,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 2148,
											"end": 2166,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2135,
											"end": 2167,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 2135,
											"end": 2167,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1919,
											"end": 2173,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2360,
											"end": 2520,
											"name": "tag",
											"source": 14,
											"value": "365"
										},
										{
											"begin": 2360,
											"end": 2520,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2425,
											"end": 2445,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2425,
											"end": 2445,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 2481,
											"end": 2494,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2481,
											"end": 2494,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 2474,
											"end": 2495,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 2464,
											"end": 2496,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2464,
											"end": 2496,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 2454,
											"end": 2514,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "239"
										},
										{
											"begin": 2454,
											"end": 2514,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 2510,
											"end": 2511,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2507,
											"end": 2508,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2500,
											"end": 2512,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 2525,
											"end": 2705,
											"name": "tag",
											"source": 14,
											"value": "64"
										},
										{
											"begin": 2525,
											"end": 2705,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2581,
											"end": 2587,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2634,
											"end": 2636,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2622,
											"end": 2631,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2613,
											"end": 2620,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 2609,
											"end": 2632,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 2605,
											"end": 2637,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 2602,
											"end": 2654,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 2602,
											"end": 2654,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "397"
										},
										{
											"begin": 2602,
											"end": 2654,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 2650,
											"end": 2651,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2647,
											"end": 2648,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2640,
											"end": 2652,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 2602,
											"end": 2654,
											"name": "tag",
											"source": 14,
											"value": "397"
										},
										{
											"begin": 2602,
											"end": 2654,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2673,
											"end": 2699,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "187"
										},
										{
											"begin": 2689,
											"end": 2698,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2673,
											"end": 2699,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "365"
										},
										{
											"begin": 2673,
											"end": 2699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2710,
											"end": 2896,
											"name": "tag",
											"source": 14,
											"value": "69"
										},
										{
											"begin": 2710,
											"end": 2896,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2769,
											"end": 2775,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2822,
											"end": 2824,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2810,
											"end": 2819,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2801,
											"end": 2808,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 2797,
											"end": 2820,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 2793,
											"end": 2825,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 2790,
											"end": 2842,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 2790,
											"end": 2842,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "400"
										},
										{
											"begin": 2790,
											"end": 2842,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 2838,
											"end": 2839,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2835,
											"end": 2836,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2828,
											"end": 2840,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 2790,
											"end": 2842,
											"name": "tag",
											"source": 14,
											"value": "400"
										},
										{
											"begin": 2790,
											"end": 2842,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2861,
											"end": 2890,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "187"
										},
										{
											"begin": 2880,
											"end": 2889,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2861,
											"end": 2890,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "364"
										},
										{
											"begin": 2861,
											"end": 2890,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2901,
											"end": 3229,
											"name": "tag",
											"source": 14,
											"value": "74"
										},
										{
											"begin": 2901,
											"end": 3229,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2978,
											"end": 2984,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2986,
											"end": 2992,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2994,
											"end": 3000,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3047,
											"end": 3049,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 3035,
											"end": 3044,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 3026,
											"end": 3033,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 3022,
											"end": 3045,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 3018,
											"end": 3050,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 3015,
											"end": 3067,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 3015,
											"end": 3067,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "403"
										},
										{
											"begin": 3015,
											"end": 3067,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 3063,
											"end": 3064,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3060,
											"end": 3061,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3053,
											"end": 3065,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 3015,
											"end": 3067,
											"name": "tag",
											"source": 14,
											"value": "403"
										},
										{
											"begin": 3015,
											"end": 3067,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3086,
											"end": 3115,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "404"
										},
										{
											"begin": 3105,
											"end": 3114,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 3086,
											"end": 3115,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "364"
										},
										{
											"begin": 3086,
											"end": 3115,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3086,
											"end": 3115,
											"name": "tag",
											"source": 14,
											"value": "404"
										},
										{
											"begin": 3086,
											"end": 3115,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3076,
											"end": 3115,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 3076,
											"end": 3115,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3134,
											"end": 3172,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "405"
										},
										{
											"begin": 3168,
											"end": 3170,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 3157,
											"end": 3166,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 3153,
											"end": 3171,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3134,
											"end": 3172,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "364"
										},
										{
											"begin": 3134,
											"end": 3172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3134,
											"end": 3172,
											"name": "tag",
											"source": 14,
											"value": "405"
										},
										{
											"begin": 3134,
											"end": 3172,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3124,
											"end": 3172,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3124,
											"end": 3172,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3219,
											"end": 3221,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 3208,
											"end": 3217,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 3204,
											"end": 3222,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3191,
											"end": 3223,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 3181,
											"end": 3223,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3181,
											"end": 3223,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2901,
											"end": 3229,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 2901,
											"end": 3229,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2901,
											"end": 3229,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 2901,
											"end": 3229,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2901,
											"end": 3229,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 2901,
											"end": 3229,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3234,
											"end": 3488,
											"name": "tag",
											"source": 14,
											"value": "116"
										},
										{
											"begin": 3234,
											"end": 3488,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3299,
											"end": 3305,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3307,
											"end": 3313,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3360,
											"end": 3362,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 3348,
											"end": 3357,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 3339,
											"end": 3346,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 3335,
											"end": 3358,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 3331,
											"end": 3363,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 3328,
											"end": 3380,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 3328,
											"end": 3380,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "407"
										},
										{
											"begin": 3328,
											"end": 3380,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 3376,
											"end": 3377,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3373,
											"end": 3374,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3366,
											"end": 3378,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 3328,
											"end": 3380,
											"name": "tag",
											"source": 14,
											"value": "407"
										},
										{
											"begin": 3328,
											"end": 3380,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3399,
											"end": 3428,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "408"
										},
										{
											"begin": 3418,
											"end": 3427,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 3399,
											"end": 3428,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "364"
										},
										{
											"begin": 3399,
											"end": 3428,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3399,
											"end": 3428,
											"name": "tag",
											"source": 14,
											"value": "408"
										},
										{
											"begin": 3399,
											"end": 3428,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3389,
											"end": 3428,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3389,
											"end": 3428,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3447,
											"end": 3482,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "409"
										},
										{
											"begin": 3478,
											"end": 3480,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 3467,
											"end": 3476,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 3463,
											"end": 3481,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3447,
											"end": 3482,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "365"
										},
										{
											"begin": 3447,
											"end": 3482,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3447,
											"end": 3482,
											"name": "tag",
											"source": 14,
											"value": "409"
										},
										{
											"begin": 3447,
											"end": 3482,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3437,
											"end": 3482,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3437,
											"end": 3482,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3234,
											"end": 3488,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 3234,
											"end": 3488,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3234,
											"end": 3488,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 3234,
											"end": 3488,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3234,
											"end": 3488,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3234,
											"end": 3488,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3493,
											"end": 4301,
											"name": "tag",
											"source": 14,
											"value": "120"
										},
										{
											"begin": 3493,
											"end": 4301,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3590,
											"end": 3596,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3598,
											"end": 3604,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3606,
											"end": 3612,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3614,
											"end": 3620,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3622,
											"end": 3628,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3675,
											"end": 3678,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 3663,
											"end": 3672,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 3654,
											"end": 3661,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 3650,
											"end": 3673,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 3646,
											"end": 3679,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 3643,
											"end": 3696,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 3643,
											"end": 3696,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "411"
										},
										{
											"begin": 3643,
											"end": 3696,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 3692,
											"end": 3693,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3689,
											"end": 3690,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3682,
											"end": 3694,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 3643,
											"end": 3696,
											"name": "tag",
											"source": 14,
											"value": "411"
										},
										{
											"begin": 3643,
											"end": 3696,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3715,
											"end": 3744,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "412"
										},
										{
											"begin": 3734,
											"end": 3743,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 3715,
											"end": 3744,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "364"
										},
										{
											"begin": 3715,
											"end": 3744,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3715,
											"end": 3744,
											"name": "tag",
											"source": 14,
											"value": "412"
										},
										{
											"begin": 3715,
											"end": 3744,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3705,
											"end": 3744,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 3705,
											"end": 3744,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3763,
											"end": 3801,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "413"
										},
										{
											"begin": 3797,
											"end": 3799,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 3786,
											"end": 3795,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 3782,
											"end": 3800,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3763,
											"end": 3801,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "364"
										},
										{
											"begin": 3763,
											"end": 3801,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3763,
											"end": 3801,
											"name": "tag",
											"source": 14,
											"value": "413"
										},
										{
											"begin": 3763,
											"end": 3801,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3753,
											"end": 3801,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 3753,
											"end": 3801,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3848,
											"end": 3850,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 3837,
											"end": 3846,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 3833,
											"end": 3851,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3820,
											"end": 3852,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 3810,
											"end": 3852,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 3810,
											"end": 3852,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3903,
											"end": 3905,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 3892,
											"end": 3901,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 3888,
											"end": 3906,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3875,
											"end": 3907,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 3926,
											"end": 3944,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3967,
											"end": 3969,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3959,
											"end": 3965,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3956,
											"end": 3970,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 3953,
											"end": 3987,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 3953,
											"end": 3987,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "414"
										},
										{
											"begin": 3953,
											"end": 3987,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 3983,
											"end": 3984,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3980,
											"end": 3981,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3973,
											"end": 3985,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 3953,
											"end": 3987,
											"name": "tag",
											"source": 14,
											"value": "414"
										},
										{
											"begin": 3953,
											"end": 3987,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4021,
											"end": 4027,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4010,
											"end": 4019,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 4006,
											"end": 4028,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3996,
											"end": 4028,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3996,
											"end": 4028,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4066,
											"end": 4073,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 4059,
											"end": 4063,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 4055,
											"end": 4057,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 4051,
											"end": 4064,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4047,
											"end": 4074,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 4037,
											"end": 4092,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "415"
										},
										{
											"begin": 4037,
											"end": 4092,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 4088,
											"end": 4089,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4085,
											"end": 4086,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4078,
											"end": 4090,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 4037,
											"end": 4092,
											"name": "tag",
											"source": 14,
											"value": "415"
										},
										{
											"begin": 4037,
											"end": 4092,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4128,
											"end": 4130,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4115,
											"end": 4131,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 4154,
											"end": 4156,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4146,
											"end": 4152,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4143,
											"end": 4157,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 4140,
											"end": 4174,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 4140,
											"end": 4174,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "416"
										},
										{
											"begin": 4140,
											"end": 4174,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 4170,
											"end": 4171,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4167,
											"end": 4168,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4160,
											"end": 4172,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 4140,
											"end": 4174,
											"name": "tag",
											"source": 14,
											"value": "416"
										},
										{
											"begin": 4140,
											"end": 4174,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4215,
											"end": 4222,
											"name": "DUP10",
											"source": 14
										},
										{
											"begin": 4210,
											"end": 4212,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 4201,
											"end": 4207,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4197,
											"end": 4199,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 4193,
											"end": 4208,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4189,
											"end": 4213,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4186,
											"end": 4223,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 4183,
											"end": 4240,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 4183,
											"end": 4240,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "417"
										},
										{
											"begin": 4183,
											"end": 4240,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 4236,
											"end": 4237,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4233,
											"end": 4234,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4226,
											"end": 4238,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 4183,
											"end": 4240,
											"name": "tag",
											"source": 14,
											"value": "417"
										},
										{
											"begin": 4183,
											"end": 4240,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3493,
											"end": 4301,
											"name": "SWAP7",
											"source": 14
										},
										{
											"begin": 3493,
											"end": 4301,
											"name": "SWAP10",
											"source": 14
										},
										{
											"begin": 3493,
											"end": 4301,
											"name": "SWAP6",
											"source": 14
										},
										{
											"begin": 3493,
											"end": 4301,
											"name": "SWAP9",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3493,
											"end": 4301,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 3493,
											"end": 4301,
											"name": "SWAP7",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4267,
											"end": 4269,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 4259,
											"end": 4270,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4259,
											"end": 4270,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 4289,
											"end": 4295,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 3493,
											"end": 4301,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3493,
											"end": 4301,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4306,
											"end": 4433,
											"name": "tag",
											"source": 14,
											"value": "311"
										},
										{
											"begin": 4306,
											"end": 4433,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4367,
											"end": 4377,
											"name": "PUSH",
											"source": 14,
											"value": "4E487B71"
										},
										{
											"begin": 4362,
											"end": 4365,
											"name": "PUSH",
											"source": 14,
											"value": "E0"
										},
										{
											"begin": 4358,
											"end": 4378,
											"name": "SHL",
											"source": 14
										},
										{
											"begin": 4355,
											"end": 4356,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4348,
											"end": 4379,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 4398,
											"end": 4402,
											"name": "PUSH",
											"source": 14,
											"value": "41"
										},
										{
											"begin": 4395,
											"end": 4396,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 4388,
											"end": 4403,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 4422,
											"end": 4426,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 4419,
											"end": 4420,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4412,
											"end": 4427,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 4438,
											"end": 5360,
											"name": "tag",
											"source": 14,
											"value": "136"
										},
										{
											"begin": 4438,
											"end": 5360,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4507,
											"end": 4513,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4560,
											"end": 4562,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 4548,
											"end": 4557,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4539,
											"end": 4546,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 4535,
											"end": 4558,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 4531,
											"end": 4563,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 4528,
											"end": 4580,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 4528,
											"end": 4580,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "420"
										},
										{
											"begin": 4528,
											"end": 4580,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 4576,
											"end": 4577,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4573,
											"end": 4574,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4566,
											"end": 4578,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 4528,
											"end": 4580,
											"name": "tag",
											"source": 14,
											"value": "420"
										},
										{
											"begin": 4528,
											"end": 4580,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4616,
											"end": 4625,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4603,
											"end": 4626,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 4645,
											"end": 4663,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4686,
											"end": 4688,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4678,
											"end": 4684,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4675,
											"end": 4689,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 4672,
											"end": 4706,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 4672,
											"end": 4706,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "421"
										},
										{
											"begin": 4672,
											"end": 4706,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 4702,
											"end": 4703,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4699,
											"end": 4700,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4692,
											"end": 4704,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 4672,
											"end": 4706,
											"name": "tag",
											"source": 14,
											"value": "421"
										},
										{
											"begin": 4672,
											"end": 4706,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4740,
											"end": 4746,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4729,
											"end": 4738,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 4725,
											"end": 4747,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4715,
											"end": 4747,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4715,
											"end": 4747,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4785,
											"end": 4792,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 4778,
											"end": 4782,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 4774,
											"end": 4776,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 4770,
											"end": 4783,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4766,
											"end": 4793,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 4756,
											"end": 4811,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "422"
										},
										{
											"begin": 4756,
											"end": 4811,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 4807,
											"end": 4808,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4804,
											"end": 4805,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4797,
											"end": 4809,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 4756,
											"end": 4811,
											"name": "tag",
											"source": 14,
											"value": "422"
										},
										{
											"begin": 4756,
											"end": 4811,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4843,
											"end": 4845,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4830,
											"end": 4846,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 4865,
											"end": 4867,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4861,
											"end": 4863,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4858,
											"end": 4868,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 4855,
											"end": 4891,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 4855,
											"end": 4891,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "424"
										},
										{
											"begin": 4855,
											"end": 4891,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 4871,
											"end": 4889,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "424"
										},
										{
											"begin": 4871,
											"end": 4889,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "311"
										},
										{
											"begin": 4871,
											"end": 4889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4871,
											"end": 4889,
											"name": "tag",
											"source": 14,
											"value": "424"
										},
										{
											"begin": 4871,
											"end": 4889,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4946,
											"end": 4948,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 4940,
											"end": 4949,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 4914,
											"end": 4916,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 5000,
											"end": 5013,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5000,
											"end": 5013,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4996,
											"end": 5018,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4996,
											"end": 5018,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4996,
											"end": 5018,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 5020,
											"end": 5022,
											"name": "PUSH",
											"source": 14,
											"value": "3F"
										},
										{
											"begin": 4992,
											"end": 5023,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4988,
											"end": 5028,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 4976,
											"end": 5029,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4976,
											"end": 5029,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4976,
											"end": 5029,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5044,
											"end": 5062,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 5044,
											"end": 5062,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5044,
											"end": 5062,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 5064,
											"end": 5086,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 5064,
											"end": 5086,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 5064,
											"end": 5086,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 5041,
											"end": 5087,
											"name": "OR",
											"source": 14
										},
										{
											"begin": 5038,
											"end": 5110,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 5038,
											"end": 5110,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "426"
										},
										{
											"begin": 5038,
											"end": 5110,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 5090,
											"end": 5108,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "426"
										},
										{
											"begin": 5090,
											"end": 5108,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "311"
										},
										{
											"begin": 5090,
											"end": 5108,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5090,
											"end": 5108,
											"name": "tag",
											"source": 14,
											"value": "426"
										},
										{
											"begin": 5090,
											"end": 5108,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5130,
											"end": 5140,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 5126,
											"end": 5128,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 5119,
											"end": 5141,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 5165,
											"end": 5167,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5157,
											"end": 5163,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 5150,
											"end": 5168,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 5205,
											"end": 5212,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 5200,
											"end": 5202,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 5195,
											"end": 5197,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 5191,
											"end": 5193,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 5187,
											"end": 5198,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5183,
											"end": 5203,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5180,
											"end": 5213,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 5177,
											"end": 5230,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 5177,
											"end": 5230,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "427"
										},
										{
											"begin": 5177,
											"end": 5230,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 5226,
											"end": 5227,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5223,
											"end": 5224,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 5216,
											"end": 5228,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 5177,
											"end": 5230,
											"name": "tag",
											"source": 14,
											"value": "427"
										},
										{
											"begin": 5177,
											"end": 5230,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5282,
											"end": 5284,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5277,
											"end": 5279,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 5273,
											"end": 5275,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 5269,
											"end": 5280,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5264,
											"end": 5266,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 5256,
											"end": 5262,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 5252,
											"end": 5267,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5239,
											"end": 5285,
											"name": "CALLDATACOPY",
											"source": 14
										},
										{
											"begin": 5327,
											"end": 5328,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5305,
											"end": 5320,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 5305,
											"end": 5320,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 5305,
											"end": 5320,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5322,
											"end": 5324,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 5301,
											"end": 5325,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5294,
											"end": 5329,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 5294,
											"end": 5329,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5294,
											"end": 5329,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 5294,
											"end": 5329,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5309,
											"end": 5315,
											"name": "SWAP6",
											"source": 14
										},
										{
											"begin": 4438,
											"end": 5360,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4438,
											"end": 5360,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5365,
											"end": 5625,
											"name": "tag",
											"source": 14,
											"value": "144"
										},
										{
											"begin": 5365,
											"end": 5625,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5433,
											"end": 5439,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5441,
											"end": 5447,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 5494,
											"end": 5496,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 5482,
											"end": 5491,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 5473,
											"end": 5480,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 5469,
											"end": 5492,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 5465,
											"end": 5497,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 5462,
											"end": 5514,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 5462,
											"end": 5514,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "429"
										},
										{
											"begin": 5462,
											"end": 5514,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 5510,
											"end": 5511,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5507,
											"end": 5508,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 5500,
											"end": 5512,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 5462,
											"end": 5514,
											"name": "tag",
											"source": 14,
											"value": "429"
										},
										{
											"begin": 5462,
											"end": 5514,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5533,
											"end": 5562,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "430"
										},
										{
											"begin": 5552,
											"end": 5561,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 5533,
											"end": 5562,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "364"
										},
										{
											"begin": 5533,
											"end": 5562,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5533,
											"end": 5562,
											"name": "tag",
											"source": 14,
											"value": "430"
										},
										{
											"begin": 5533,
											"end": 5562,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5523,
											"end": 5562,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 5523,
											"end": 5562,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5581,
											"end": 5619,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "409"
										},
										{
											"begin": 5615,
											"end": 5617,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 5604,
											"end": 5613,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 5600,
											"end": 5618,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5581,
											"end": 5619,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "364"
										},
										{
											"begin": 5581,
											"end": 5619,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7678,
											"end": 8058,
											"name": "tag",
											"source": 14,
											"value": "227"
										},
										{
											"begin": 7678,
											"end": 8058,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7757,
											"end": 7758,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 7753,
											"end": 7765,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 7753,
											"end": 7765,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 7753,
											"end": 7765,
											"name": "SHR",
											"source": 14
										},
										{
											"begin": 7753,
											"end": 7765,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 7800,
											"end": 7812,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7800,
											"end": 7812,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 7800,
											"end": 7812,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 7821,
											"end": 7882,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "439"
										},
										{
											"begin": 7821,
											"end": 7882,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 7875,
											"end": 7879,
											"name": "PUSH",
											"source": 14,
											"value": "7F"
										},
										{
											"begin": 7867,
											"end": 7873,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7863,
											"end": 7880,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 7853,
											"end": 7880,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 7853,
											"end": 7880,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7821,
											"end": 7882,
											"name": "tag",
											"source": 14,
											"value": "439"
										},
										{
											"begin": 7821,
											"end": 7882,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7928,
											"end": 7930,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 7920,
											"end": 7926,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7917,
											"end": 7931,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 7897,
											"end": 7915,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 7894,
											"end": 7932,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 7891,
											"end": 8052,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "440"
										},
										{
											"begin": 7891,
											"end": 8052,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 7974,
											"end": 7984,
											"name": "PUSH",
											"source": 14,
											"value": "4E487B71"
										},
										{
											"begin": 7969,
											"end": 7972,
											"name": "PUSH",
											"source": 14,
											"value": "E0"
										},
										{
											"begin": 7965,
											"end": 7985,
											"name": "SHL",
											"source": 14
										},
										{
											"begin": 7962,
											"end": 7963,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 7955,
											"end": 7986,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 8009,
											"end": 8013,
											"name": "PUSH",
											"source": 14,
											"value": "22"
										},
										{
											"begin": 8006,
											"end": 8007,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 7999,
											"end": 8014,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 8037,
											"end": 8041,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 8034,
											"end": 8035,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 8027,
											"end": 8042,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 7891,
											"end": 8052,
											"name": "tag",
											"source": 14,
											"value": "440"
										},
										{
											"begin": 7891,
											"end": 8052,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7891,
											"end": 8052,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7678,
											"end": 8058,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 7678,
											"end": 8058,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 7678,
											"end": 8058,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7678,
											"end": 8058,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8189,
											"end": 9572,
											"name": "tag",
											"source": 14,
											"value": "234"
										},
										{
											"begin": 8189,
											"end": 9572,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8514,
											"end": 8517,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 8543,
											"end": 8544,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 8576,
											"end": 8582,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 8570,
											"end": 8583,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 8606,
											"end": 8642,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "443"
										},
										{
											"begin": 8632,
											"end": 8641,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 8606,
											"end": 8642,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "227"
										},
										{
											"begin": 8606,
											"end": 8642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8606,
											"end": 8642,
											"name": "tag",
											"source": 14,
											"value": "443"
										},
										{
											"begin": 8606,
											"end": 8642,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8661,
											"end": 8662,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 8678,
											"end": 8696,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8678,
											"end": 8696,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 8678,
											"end": 8696,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 8705,
											"end": 8838,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 8705,
											"end": 8838,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 8705,
											"end": 8838,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "445"
										},
										{
											"begin": 8705,
											"end": 8838,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 8852,
											"end": 8853,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 8847,
											"end": 9203,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 8847,
											"end": 9203,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 8847,
											"end": 9203,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "446"
										},
										{
											"begin": 8847,
											"end": 9203,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 8671,
											"end": 9203,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "444"
										},
										{
											"begin": 8671,
											"end": 9203,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8705,
											"end": 8838,
											"name": "tag",
											"source": 14,
											"value": "445"
										},
										{
											"begin": 8705,
											"end": 8838,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 8738,
											"end": 8762,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 8738,
											"end": 8762,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 8726,
											"end": 8763,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 8726,
											"end": 8763,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 8811,
											"end": 8825,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8811,
											"end": 8825,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 8804,
											"end": 8826,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 8792,
											"end": 8827,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 8792,
											"end": 8827,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 8783,
											"end": 8828,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 8783,
											"end": 8828,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8783,
											"end": 8828,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8705,
											"end": 8838,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "444"
										},
										{
											"begin": 8705,
											"end": 8838,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8847,
											"end": 9203,
											"name": "tag",
											"source": 14,
											"value": "446"
										},
										{
											"begin": 8847,
											"end": 9203,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8878,
											"end": 8884,
											"name": "DUP10",
											"source": 14
										},
										{
											"begin": 8875,
											"end": 8876,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 8868,
											"end": 8885,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 8908,
											"end": 8912,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 8953,
											"end": 8955,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 8950,
											"end": 8951,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 8940,
											"end": 8956,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 8978,
											"end": 8979,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 8992,
											"end": 9157,
											"name": "tag",
											"source": 14,
											"value": "447"
										},
										{
											"begin": 8992,
											"end": 9157,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9006,
											"end": 9012,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 9003,
											"end": 9004,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 9000,
											"end": 9013,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 8992,
											"end": 9157,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 8992,
											"end": 9157,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "449"
										},
										{
											"begin": 8992,
											"end": 9157,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 9084,
											"end": 9098,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 9084,
											"end": 9098,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 9071,
											"end": 9082,
											"name": "DUP11",
											"source": 14
										},
										{
											"begin": 9071,
											"end": 9082,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 9071,
											"end": 9082,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9064,
											"end": 9099,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 9127,
											"end": 9143,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 9127,
											"end": 9143,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 9127,
											"end": 9143,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9127,
											"end": 9143,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 9021,
											"end": 9031,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 9021,
											"end": 9031,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8992,
											"end": 9157,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "447"
										},
										{
											"begin": 8992,
											"end": 9157,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8992,
											"end": 9157,
											"name": "tag",
											"source": 14,
											"value": "449"
										},
										{
											"begin": 8992,
											"end": 9157,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8996,
											"end": 8999,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8996,
											"end": 8999,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8996,
											"end": 8999,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9186,
											"end": 9192,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 9181,
											"end": 9184,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 9177,
											"end": 9193,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9170,
											"end": 9193,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 9170,
											"end": 9193,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8671,
											"end": 9203,
											"name": "tag",
											"source": 14,
											"value": "444"
										},
										{
											"begin": 8671,
											"end": 9203,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8671,
											"end": 9203,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8671,
											"end": 9203,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8671,
											"end": 9203,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8671,
											"end": 9203,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9234,
											"end": 9240,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 9228,
											"end": 9241,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 9250,
											"end": 9318,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "450"
										},
										{
											"begin": 9309,
											"end": 9317,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 9304,
											"end": 9307,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 9297,
											"end": 9301,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 9289,
											"end": 9295,
											"name": "DUP10",
											"source": 14
										},
										{
											"begin": 9285,
											"end": 9302,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9250,
											"end": 9318,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "362"
										},
										{
											"begin": 9250,
											"end": 9318,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9250,
											"end": 9318,
											"name": "tag",
											"source": 14,
											"value": "450"
										},
										{
											"begin": 9250,
											"end": 9318,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3F746F6B656E547970653D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9340,
											"end": 9358,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 9340,
											"end": 9358,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9367,
											"end": 9395,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 9367,
											"end": 9395,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 9367,
											"end": 9395,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 9420,
											"end": 9433,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 9420,
											"end": 9433,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 9442,
											"end": 9521,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "451"
										},
										{
											"begin": 9420,
											"end": 9433,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 9507,
											"end": 9509,
											"name": "PUSH",
											"source": 14,
											"value": "B"
										},
										{
											"begin": 9496,
											"end": 9510,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 9496,
											"end": 9510,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9489,
											"end": 9493,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 9477,
											"end": 9494,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 9477,
											"end": 9494,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9442,
											"end": 9521,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "362"
										},
										{
											"begin": 9442,
											"end": 9521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9442,
											"end": 9521,
											"name": "tag",
											"source": 14,
											"value": "451"
										},
										{
											"begin": 9442,
											"end": 9521,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9541,
											"end": 9561,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9563,
											"end": 9565,
											"name": "PUSH",
											"source": 14,
											"value": "B"
										},
										{
											"begin": 9537,
											"end": 9566,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9537,
											"end": 9566,
											"name": "SWAP6",
											"source": 14
										},
										{
											"begin": 8189,
											"end": 9572,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8189,
											"end": 9572,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9577,
											"end": 10122,
											"name": "tag",
											"source": 14,
											"value": "367"
										},
										{
											"begin": 9577,
											"end": 10122,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9679,
											"end": 9681,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 9674,
											"end": 9677,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 9671,
											"end": 9682,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 9668,
											"end": 10116,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 9668,
											"end": 10116,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "453"
										},
										{
											"begin": 9668,
											"end": 10116,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 9715,
											"end": 9716,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 9740,
											"end": 9745,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 9736,
											"end": 9738,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 9729,
											"end": 9746,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 9785,
											"end": 9789,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 9781,
											"end": 9783,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 9771,
											"end": 9790,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 9855,
											"end": 9857,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 9843,
											"end": 9853,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 9839,
											"end": 9858,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9836,
											"end": 9837,
											"name": "PUSH",
											"source": 14,
											"value": "5"
										},
										{
											"begin": 9832,
											"end": 9859,
											"name": "SHR",
											"source": 14
										},
										{
											"begin": 9826,
											"end": 9830,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 9822,
											"end": 9860,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9891,
											"end": 9895,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 9879,
											"end": 9889,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 9876,
											"end": 9896,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 9873,
											"end": 9920,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 9873,
											"end": 9920,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "454"
										},
										{
											"begin": 9873,
											"end": 9920,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9914,
											"end": 9918,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 9873,
											"end": 9920,
											"name": "tag",
											"source": 14,
											"value": "454"
										},
										{
											"begin": 9873,
											"end": 9920,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9969,
											"end": 9971,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 9964,
											"end": 9967,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 9960,
											"end": 9972,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9957,
											"end": 9958,
											"name": "PUSH",
											"source": 14,
											"value": "5"
										},
										{
											"begin": 9953,
											"end": 9973,
											"name": "SHR",
											"source": 14
										},
										{
											"begin": 9947,
											"end": 9951,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 9943,
											"end": 9974,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9933,
											"end": 9974,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 9933,
											"end": 9974,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10024,
											"end": 10106,
											"name": "tag",
											"source": 14,
											"value": "455"
										},
										{
											"begin": 10024,
											"end": 10106,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10042,
											"end": 10044,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 10035,
											"end": 10040,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 10032,
											"end": 10045,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 10024,
											"end": 10106,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 10024,
											"end": 10106,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "457"
										},
										{
											"begin": 10024,
											"end": 10106,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 10087,
											"end": 10104,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 10087,
											"end": 10104,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 10087,
											"end": 10104,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": 10068,
											"end": 10069,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 10057,
											"end": 10070,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10024,
											"end": 10106,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "455"
										},
										{
											"begin": 10024,
											"end": 10106,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10024,
											"end": 10106,
											"name": "tag",
											"source": 14,
											"value": "457"
										},
										{
											"begin": 10024,
											"end": 10106,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10028,
											"end": 10031,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10028,
											"end": 10031,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10028,
											"end": 10031,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9668,
											"end": 10116,
											"name": "tag",
											"source": 14,
											"value": "453"
										},
										{
											"begin": 9668,
											"end": 10116,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9577,
											"end": 10122,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9577,
											"end": 10122,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9577,
											"end": 10122,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9577,
											"end": 10122,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10298,
											"end": 11650,
											"name": "tag",
											"source": 14,
											"value": "241"
										},
										{
											"begin": 10298,
											"end": 11650,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10424,
											"end": 10427,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 10418,
											"end": 10428,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 10451,
											"end": 10469,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10443,
											"end": 10449,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 10440,
											"end": 10470,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 10437,
											"end": 10493,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 10437,
											"end": 10493,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "461"
										},
										{
											"begin": 10437,
											"end": 10493,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 10473,
											"end": 10491,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "461"
										},
										{
											"begin": 10473,
											"end": 10491,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "311"
										},
										{
											"begin": 10473,
											"end": 10491,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10473,
											"end": 10491,
											"name": "tag",
											"source": 14,
											"value": "461"
										},
										{
											"begin": 10473,
											"end": 10491,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10502,
											"end": 10599,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "462"
										},
										{
											"begin": 10592,
											"end": 10598,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 10552,
											"end": 10590,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "463"
										},
										{
											"begin": 10584,
											"end": 10588,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 10578,
											"end": 10589,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 10552,
											"end": 10590,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "227"
										},
										{
											"begin": 10552,
											"end": 10590,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10552,
											"end": 10590,
											"name": "tag",
											"source": 14,
											"value": "463"
										},
										{
											"begin": 10552,
											"end": 10590,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10546,
											"end": 10550,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 10502,
											"end": 10599,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "367"
										},
										{
											"begin": 10502,
											"end": 10599,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10502,
											"end": 10599,
											"name": "tag",
											"source": 14,
											"value": "462"
										},
										{
											"begin": 10502,
											"end": 10599,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10654,
											"end": 10658,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 10654,
											"end": 10658,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 10718,
											"end": 10720,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 10707,
											"end": 10721,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 10707,
											"end": 10721,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 10735,
											"end": 10736,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 10730,
											"end": 11393,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 10730,
											"end": 11393,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 10730,
											"end": 11393,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "465"
										},
										{
											"begin": 10730,
											"end": 11393,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 11437,
											"end": 11438,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 11454,
											"end": 11460,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 11451,
											"end": 11540,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 11451,
											"end": 11540,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "466"
										},
										{
											"begin": 11451,
											"end": 11540,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11506,
											"end": 11525,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 11506,
											"end": 11525,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 11506,
											"end": 11525,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11500,
											"end": 11526,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 11451,
											"end": 11540,
											"name": "tag",
											"source": 14,
											"value": "466"
										},
										{
											"begin": 11451,
											"end": 11540,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10255,
											"end": 10256,
											"name": "PUSH",
											"source": 14,
											"value": "3"
										},
										{
											"begin": 10251,
											"end": 10262,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 10251,
											"end": 10262,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 10251,
											"end": 10262,
											"name": "SHL",
											"source": 14
										},
										{
											"begin": 10247,
											"end": 10271,
											"name": "SHR",
											"source": 14
										},
										{
											"begin": 10243,
											"end": 10272,
											"name": "NOT",
											"source": 14
										},
										{
											"begin": 10233,
											"end": 10273,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 10279,
											"end": 10280,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 10275,
											"end": 10286,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 10275,
											"end": 10286,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 10275,
											"end": 10286,
											"name": "SHL",
											"source": 14
										},
										{
											"begin": 10230,
											"end": 10287,
											"name": "OR",
											"source": 14
										},
										{
											"begin": 11553,
											"end": 11634,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 11553,
											"end": 11634,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": 10700,
											"end": 11644,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "457"
										},
										{
											"begin": 10700,
											"end": 11644,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10730,
											"end": 11393,
											"name": "tag",
											"source": 14,
											"value": "465"
										},
										{
											"begin": 10730,
											"end": 11393,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8136,
											"end": 8137,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 8129,
											"end": 8143,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 8129,
											"end": 8143,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 8129,
											"end": 8143,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 8173,
											"end": 8177,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 8160,
											"end": 8178,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 8160,
											"end": 8178,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10766,
											"end": 10786,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 10766,
											"end": 10786,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 10766,
											"end": 10786,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 10884,
											"end": 11120,
											"name": "tag",
											"source": 14,
											"value": "469"
										},
										{
											"begin": 10884,
											"end": 11120,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10898,
											"end": 10905,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 10895,
											"end": 10896,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 10892,
											"end": 10906,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 10884,
											"end": 11120,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 10884,
											"end": 11120,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "471"
										},
										{
											"begin": 10884,
											"end": 11120,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 10987,
											"end": 11006,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 10987,
											"end": 11006,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 10987,
											"end": 11006,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10981,
											"end": 11007,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 10966,
											"end": 11008,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 10966,
											"end": 11008,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": 11079,
											"end": 11106,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 11079,
											"end": 11106,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 11079,
											"end": 11106,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11079,
											"end": 11106,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 11047,
											"end": 11048,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 11035,
											"end": 11049,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 11035,
											"end": 11049,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 11035,
											"end": 11049,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11035,
											"end": 11049,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 10914,
											"end": 10933,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 10914,
											"end": 10933,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10884,
											"end": 11120,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "469"
										},
										{
											"begin": 10884,
											"end": 11120,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10884,
											"end": 11120,
											"name": "tag",
											"source": 14,
											"value": "471"
										},
										{
											"begin": 10884,
											"end": 11120,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10888,
											"end": 10891,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11148,
											"end": 11154,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 11139,
											"end": 11146,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 11136,
											"end": 11155,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 11133,
											"end": 11334,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 11133,
											"end": 11334,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "472"
										},
										{
											"begin": 11133,
											"end": 11334,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 11209,
											"end": 11228,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 11209,
											"end": 11228,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 11209,
											"end": 11228,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11203,
											"end": 11229,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 11292,
											"end": 11293,
											"name": "PUSH",
											"source": 14,
											"value": "3"
										},
										{
											"begin": 11288,
											"end": 11302,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 11288,
											"end": 11302,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 11288,
											"end": 11302,
											"name": "SHL",
											"source": 14
										},
										{
											"begin": 11304,
											"end": 11307,
											"name": "PUSH",
											"source": 14,
											"value": "F8"
										},
										{
											"begin": 11284,
											"end": 11308,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 11280,
											"end": 11317,
											"name": "SHR",
											"source": 14
										},
										{
											"begin": 11276,
											"end": 11318,
											"name": "NOT",
											"source": 14
										},
										{
											"begin": 11261,
											"end": 11319,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 11246,
											"end": 11320,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 11246,
											"end": 11320,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": 11133,
											"end": 11334,
											"name": "tag",
											"source": 14,
											"value": "472"
										},
										{
											"begin": 11133,
											"end": 11334,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11380,
											"end": 11381,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 11364,
											"end": 11378,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 11364,
											"end": 11378,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 11364,
											"end": 11378,
											"name": "SHL",
											"source": 14
										},
										{
											"begin": 11360,
											"end": 11382,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11347,
											"end": 11383,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 11347,
											"end": 11383,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10298,
											"end": 11650,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 12768,
											"end": 12895,
											"name": "tag",
											"source": 14,
											"value": "369"
										},
										{
											"begin": 12768,
											"end": 12895,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12829,
											"end": 12839,
											"name": "PUSH",
											"source": 14,
											"value": "4E487B71"
										},
										{
											"begin": 12824,
											"end": 12827,
											"name": "PUSH",
											"source": 14,
											"value": "E0"
										},
										{
											"begin": 12820,
											"end": 12840,
											"name": "SHL",
											"source": 14
										},
										{
											"begin": 12817,
											"end": 12818,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 12810,
											"end": 12841,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 12860,
											"end": 12864,
											"name": "PUSH",
											"source": 14,
											"value": "11"
										},
										{
											"begin": 12857,
											"end": 12858,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 12850,
											"end": 12865,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 12884,
											"end": 12888,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 12881,
											"end": 12882,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 12874,
											"end": 12889,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 12900,
											"end": 13025,
											"name": "tag",
											"source": 14,
											"value": "274"
										},
										{
											"begin": 12900,
											"end": 13025,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12965,
											"end": 12974,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 12965,
											"end": 12974,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 12965,
											"end": 12974,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 12986,
											"end": 12996,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 12986,
											"end": 12996,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 12986,
											"end": 12996,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 12983,
											"end": 13019,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 12983,
											"end": 13019,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "152"
										},
										{
											"begin": 12983,
											"end": 13019,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 12999,
											"end": 13017,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "152"
										},
										{
											"begin": 12999,
											"end": 13017,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "369"
										},
										{
											"begin": 12999,
											"end": 13017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13030,
											"end": 13158,
											"name": "tag",
											"source": 14,
											"value": "286"
										},
										{
											"begin": 13030,
											"end": 13158,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13097,
											"end": 13106,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 13097,
											"end": 13106,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 13097,
											"end": 13106,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 13118,
											"end": 13129,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 13118,
											"end": 13129,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 13118,
											"end": 13129,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 13115,
											"end": 13152,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 13115,
											"end": 13152,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "152"
										},
										{
											"begin": 13115,
											"end": 13152,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 13132,
											"end": 13150,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "152"
										},
										{
											"begin": 13132,
											"end": 13150,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "369"
										},
										{
											"begin": 13132,
											"end": 13150,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13714,
											"end": 14203,
											"name": "tag",
											"source": 14,
											"value": "330"
										},
										{
											"begin": 13714,
											"end": 14203,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13983,
											"end": 13998,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 13983,
											"end": 13998,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 13983,
											"end": 13998,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 13965,
											"end": 13999,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 13965,
											"end": 13999,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 14035,
											"end": 14050,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 14035,
											"end": 14050,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 14030,
											"end": 14032,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 14015,
											"end": 14033,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 14015,
											"end": 14033,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 14008,
											"end": 14051,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 14082,
											"end": 14084,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 14067,
											"end": 14085,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 14067,
											"end": 14085,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 14060,
											"end": 14094,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 14060,
											"end": 14094,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 14060,
											"end": 14094,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 14130,
											"end": 14133,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 14125,
											"end": 14127,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 14110,
											"end": 14128,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 14110,
											"end": 14128,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 14103,
											"end": 14134,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 14103,
											"end": 14134,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 14103,
											"end": 14134,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 13908,
											"end": 13912,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 13908,
											"end": 13912,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 14151,
											"end": 14197,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "486"
										},
										{
											"begin": 14151,
											"end": 14197,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 14177,
											"end": 14196,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 14177,
											"end": 14196,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 14169,
											"end": 14175,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 14151,
											"end": 14197,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "363"
										},
										{
											"begin": 14151,
											"end": 14197,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 14151,
											"end": 14197,
											"name": "tag",
											"source": 14,
											"value": "486"
										},
										{
											"begin": 14151,
											"end": 14197,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14143,
											"end": 14197,
											"name": "SWAP7",
											"source": 14
										},
										{
											"begin": 13714,
											"end": 14203,
											"name": "SWAP6",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13714,
											"end": 14203,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 14208,
											"end": 14457,
											"name": "tag",
											"source": 14,
											"value": "334"
										},
										{
											"begin": 14208,
											"end": 14457,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14277,
											"end": 14283,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 14330,
											"end": 14332,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 14318,
											"end": 14327,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 14309,
											"end": 14316,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 14305,
											"end": 14328,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 14301,
											"end": 14333,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 14298,
											"end": 14350,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 14298,
											"end": 14350,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "488"
										},
										{
											"begin": 14298,
											"end": 14350,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 14346,
											"end": 14347,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 14343,
											"end": 14344,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 14336,
											"end": 14348,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 14298,
											"end": 14350,
											"name": "tag",
											"source": 14,
											"value": "488"
										},
										{
											"begin": 14298,
											"end": 14350,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14378,
											"end": 14387,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 14372,
											"end": 14388,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 14397,
											"end": 14427,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "187"
										},
										{
											"begin": 14421,
											"end": 14426,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 14397,
											"end": 14427,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "361"
										},
										{
											"begin": 14397,
											"end": 14427,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"v2/contracts/SoulSocietySBT.sol",
								"v2/contracts/interfaces/ISoulSocietyEnumerableSBT.sol",
								"v2/contracts/interfaces/ISoulSocietySBT.sol",
								"v2/contracts/interfaces/ISoulSocietySBTErrors.sol",
								"v2/contracts/interfaces/ISoulSocietySBTMetadata.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"getGrowth(uint256)": "51c18e0c",
							"getProtected(address)": "1f8eb677",
							"getTokenType(uint256)": "76aed2e1",
							"growUp(address,uint256)": "be37e907",
							"isApprovedForAll(address,address)": "e985e9c5",
							"isProtected(address)": "ce35de95",
							"mint(address,uint256)": "40c10f19",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"ownerOf(uint256)": "6352211e",
							"renounceOwnership()": "715018a6",
							"reset(address,uint256)": "9b252852",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"setProtected(bool)": "1c02bc31",
							"setTokenURI(string)": "e0df5b6f",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenOfOwnerByIndex(address,uint256)": "2f745c59",
							"tokenURI(uint256)": "c87b56dd",
							"totalSupply()": "18160ddd",
							"totalUser()": "e1604b70",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"uri_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"SoulSocietySBTExistToken\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"SoulSocietySBTIncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"SoulSocietySBTInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"SoulSocietySBTInvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"SoulSocietySBTInvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"SoulSocietySBTNonexistentToken\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"SoulSocietySBTNotOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"message\",\"type\":\"string\"}],\"name\":\"SoulSocietySBTNotSupported\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"SoulSocietySBTProtectedOwner\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"creationTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"name\":\"ContractCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"growth\",\"type\":\"uint256\"}],\"name\":\"GrowUp\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenType\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Reset\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"name\":\"SetTokenURI\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner_\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId_\",\"type\":\"uint256\"}],\"name\":\"getGrowth\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to_\",\"type\":\"address\"}],\"name\":\"getProtected\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId_\",\"type\":\"uint256\"}],\"name\":\"getTokenType\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId_\",\"type\":\"uint256\"}],\"name\":\"growUp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to_\",\"type\":\"address\"}],\"name\":\"isProtected\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenType_\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId_\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId_\",\"type\":\"uint256\"}],\"name\":\"reset\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"isProtected_\",\"type\":\"bool\"}],\"name\":\"setProtected\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"tokenURI_\",\"type\":\"string\"}],\"name\":\"setTokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index_\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId_\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalUser\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"SoulSocietySBTIncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"SoulSocietySBTInvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"SoulSocietySBTInvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"SoulSocietySBTNonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}],\"SoulSocietySBTNotOwner(address,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"to\":\"Address whose SBT token are being used.\"}}],\"SoulSocietySBTProtectedOwner(address)\":[{\"details\":\"Indicates protected status. Used in token.\",\"params\":{\"owner\":\"Address.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Mint(address,address,uint256,uint256)\":{\"details\":\"Emitted when `tokenId` token is minted from `from(Contract Owner)` to `to`.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"name()\":{\"details\":\"Returns the token collection name.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"Returns a token ID owned by `owner` at a given `index` of its token list. Use along with {balanceOf} to enumerate all of ``owner``'s tokens.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"totalSupply()\":{\"details\":\"Returns the total amount of tokens stored by the contract.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"Implementation contract of Lightweight growth type SBT developed by SoulSociety\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"safeTransferFrom(address,address,uint256,bytes)\":{\"notice\":\"Does not provide a transfer feature.\"}},\"notice\":\"As an implementation of ISoulSocietyLightweightEnumableSTB, only the owner can modify growth.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"v2/contracts/SoulSocietySBT.sol\":\"SoulSocietySBT\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e66dfde185df46104c11bc89d08fa0760737aa59a2b8546a656473d810a8ea4\",\"dweb:/ipfs/QmXvyqtXPaPss2PD7eqPoSao5Szm2n6UMoiG8TZZDjmChR\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]},\"v2/contracts/SoulSocietySBT.sol\":{\"keccak256\":\"0x7dfeddb631d433a16f862b8c4c3a44a31303778febefd29004938c82c95ee2e4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://19f320bbc977c334a4dccf9e96c8a17acfe30689f2ac03bb486cdb46f6f78f39\",\"dweb:/ipfs/Qmdp1XzSXhJ8sBg8DhqmvExk8N47JYrr53ap3DrnywhKes\"]},\"v2/contracts/interfaces/ISoulSocietyEnumerableSBT.sol\":{\"keccak256\":\"0x772348e26a827203c72dcf4e2edc4b801d90346f21725033c690d9fe96e02e77\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a1ebde08178e11afb87e6467fe7682d2a9a6d0ff9300513118b41af1fc82f09e\",\"dweb:/ipfs/Qmc65FPHc1beou6bjDXeQ5bKFvswsDGm8KtegkKPK3fHdV\"]},\"v2/contracts/interfaces/ISoulSocietySBT.sol\":{\"keccak256\":\"0xb81f9ef1e4b599044b89b891575fb0bdf051226a1189da3744d46e7ef3a6f878\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85e612906da6fb3d1bc2bc5a138e081b7d4ec6dfea6e73ab34269a38340cc7d6\",\"dweb:/ipfs/QmNUJ1NNYubWXXDEugFUP3YtGxNHLbBSYHN7X5DwhQmQh5\"]},\"v2/contracts/interfaces/ISoulSocietySBTErrors.sol\":{\"keccak256\":\"0x7afc72b7a710054ce9707a0e09584c90a3f4ff038cec12d37ded1850320067e2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59237520dd6a7ebc6857e8d717993b9546c9a6dbf734ddd57e19b6e6fb23b2c4\",\"dweb:/ipfs/QmNpbyg9fFUbWoVfgrCAWvWywRbLfJnsGNgVnFwHQspiKY\"]},\"v2/contracts/interfaces/ISoulSocietySBTMetadata.sol\":{\"keccak256\":\"0x23118f3ea0f1bba729b85324e2513794f831b2bc49f215368260717b611b1d78\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://63dddbdebe49b44a3890dabbdd440746f535781f04166e226d7bd91c51bc184d\",\"dweb:/ipfs/QmenoR99NCd949pXwAaRKTYo6JTKvk6a3Ju2onynTiHuxy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "v2/contracts/SoulSocietySBT.sol:SoulSocietySBT",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 1542,
								"contract": "v2/contracts/SoulSocietySBT.sol:SoulSocietySBT",
								"label": "_uri",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 1544,
								"contract": "v2/contracts/SoulSocietySBT.sol:SoulSocietySBT",
								"label": "_totalUser",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 1546,
								"contract": "v2/contracts/SoulSocietySBT.sol:SoulSocietySBT",
								"label": "_totalCount",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 1550,
								"contract": "v2/contracts/SoulSocietySBT.sol:SoulSocietySBT",
								"label": "_owners",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 1554,
								"contract": "v2/contracts/SoulSocietySBT.sol:SoulSocietySBT",
								"label": "_tokenTypes",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_uint256,t_uint256)"
							},
							{
								"astId": 1558,
								"contract": "v2/contracts/SoulSocietySBT.sol:SoulSocietySBT",
								"label": "_tokenGrowths",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_uint256,t_uint256)"
							},
							{
								"astId": 1562,
								"contract": "v2/contracts/SoulSocietySBT.sol:SoulSocietySBT",
								"label": "_balances",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1566,
								"contract": "v2/contracts/SoulSocietySBT.sol:SoulSocietySBT",
								"label": "_userProtects",
								"offset": 0,
								"slot": "8",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 1572,
								"contract": "v2/contracts/SoulSocietySBT.sol:SoulSocietySBT",
								"label": "_ownedTokens",
								"offset": 0,
								"slot": "9",
								"type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(uint256 => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_uint256,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_uint256,t_uint256)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"safeTransferFrom(address,address,uint256,bytes)": {
								"notice": "Does not provide a transfer feature."
							}
						},
						"notice": "As an implementation of ISoulSocietyLightweightEnumableSTB, only the owner can modify growth.",
						"version": 1
					}
				}
			},
			"v2/contracts/interfaces/ISoulSocietyEnumerableSBT.sol": {
				"ISoulSocietyEnumableSBT": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "creator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "creationTime",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "symbol",
									"type": "string"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "uri",
									"type": "string"
								}
							],
							"name": "ContractCreated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "growth",
									"type": "uint256"
								}
							],
							"name": "GrowUp",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenType",
									"type": "uint256"
								}
							],
							"name": "Mint",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Reset",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "uri",
									"type": "string"
								}
							],
							"name": "SetTokenURI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getGrowth",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId_",
									"type": "uint256"
								}
							],
							"name": "getTokenType",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "growUp",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "isProtected",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenType",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "reset",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bool",
									"name": "isProtected",
									"type": "bool"
								}
							],
							"name": "setProtected",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "tokenURI",
									"type": "string"
								}
							],
							"name": "setTokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "tokenByIndex",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "tokenOfOwnerByIndex",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalUser",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Mint(address,address,uint256,uint256)": {
								"details": "Emitted when `tokenId` token is minted from `from(Contract Owner)` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"mint(address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							},
							"tokenByIndex(uint256)": {
								"details": "Returns a token ID at a given `index` of all the tokens stored by the contract. Use along with {totalSupply} to enumerate all tokens."
							},
							"tokenOfOwnerByIndex(address,uint256)": {
								"details": "Returns a token ID owned by `owner` at a given `index` of its token list. Use along with {balanceOf} to enumerate all of ``owner``'s tokens."
							},
							"totalSupply()": {
								"details": "Returns the total amount of tokens stored by the contract."
							}
						},
						"title": "Lightweight Growth type SBT interface developed by SoulSociety",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getGrowth(uint256)": "51c18e0c",
							"getTokenType(uint256)": "76aed2e1",
							"growUp(address,uint256)": "be37e907",
							"isProtected(address)": "ce35de95",
							"mint(address,uint256)": "40c10f19",
							"reset(address,uint256)": "9b252852",
							"setProtected(bool)": "1c02bc31",
							"setTokenURI(string)": "e0df5b6f",
							"tokenByIndex(uint256)": "4f6ccce7",
							"tokenOfOwnerByIndex(address,uint256)": "2f745c59",
							"totalSupply()": "18160ddd",
							"totalUser()": "e1604b70"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"creationTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"name\":\"ContractCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"growth\",\"type\":\"uint256\"}],\"name\":\"GrowUp\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenType\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Reset\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"name\":\"SetTokenURI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getGrowth\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId_\",\"type\":\"uint256\"}],\"name\":\"getTokenType\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"growUp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isProtected\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenType\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"reset\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"isProtected\",\"type\":\"bool\"}],\"name\":\"setProtected\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"tokenURI\",\"type\":\"string\"}],\"name\":\"setTokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalUser\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Mint(address,address,uint256,uint256)\":{\"details\":\"Emitted when `tokenId` token is minted from `from(Contract Owner)` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"mint(address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"},\"tokenByIndex(uint256)\":{\"details\":\"Returns a token ID at a given `index` of all the tokens stored by the contract. Use along with {totalSupply} to enumerate all tokens.\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"Returns a token ID owned by `owner` at a given `index` of its token list. Use along with {balanceOf} to enumerate all of ``owner``'s tokens.\"},\"totalSupply()\":{\"details\":\"Returns the total amount of tokens stored by the contract.\"}},\"title\":\"Lightweight Growth type SBT interface developed by SoulSociety\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"There is a part where the gas fee required by Ethereum is too expensive to contain various information.  Therefore, by considering each contract as a piece of information, we tried to implement growth-type SBT through minimum information and minimum gas cost by managing growth in the contract.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"v2/contracts/interfaces/ISoulSocietyEnumerableSBT.sol\":\"ISoulSocietyEnumableSBT\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"v2/contracts/interfaces/ISoulSocietyEnumerableSBT.sol\":{\"keccak256\":\"0x772348e26a827203c72dcf4e2edc4b801d90346f21725033c690d9fe96e02e77\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a1ebde08178e11afb87e6467fe7682d2a9a6d0ff9300513118b41af1fc82f09e\",\"dweb:/ipfs/Qmc65FPHc1beou6bjDXeQ5bKFvswsDGm8KtegkKPK3fHdV\"]},\"v2/contracts/interfaces/ISoulSocietySBT.sol\":{\"keccak256\":\"0xb81f9ef1e4b599044b89b891575fb0bdf051226a1189da3744d46e7ef3a6f878\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85e612906da6fb3d1bc2bc5a138e081b7d4ec6dfea6e73ab34269a38340cc7d6\",\"dweb:/ipfs/QmNUJ1NNYubWXXDEugFUP3YtGxNHLbBSYHN7X5DwhQmQh5\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "There is a part where the gas fee required by Ethereum is too expensive to contain various information.  Therefore, by considering each contract as a piece of information, we tried to implement growth-type SBT through minimum information and minimum gas cost by managing growth in the contract.",
						"version": 1
					}
				}
			},
			"v2/contracts/interfaces/ISoulSocietySBT.sol": {
				"ISoulSocietySBT": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "creator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "creationTime",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "symbol",
									"type": "string"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "uri",
									"type": "string"
								}
							],
							"name": "ContractCreated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "growth",
									"type": "uint256"
								}
							],
							"name": "GrowUp",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenType",
									"type": "uint256"
								}
							],
							"name": "Mint",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Reset",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "uri",
									"type": "string"
								}
							],
							"name": "SetTokenURI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getGrowth",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId_",
									"type": "uint256"
								}
							],
							"name": "getTokenType",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "growUp",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "isProtected",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenType",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "reset",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bool",
									"name": "isProtected",
									"type": "bool"
								}
							],
							"name": "setProtected",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "tokenURI",
									"type": "string"
								}
							],
							"name": "setTokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "tokenOfOwnerByIndex",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalUser",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Mint(address,address,uint256,uint256)": {
								"details": "Emitted when `tokenId` token is minted from `from(Contract Owner)` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"mint(address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							},
							"tokenOfOwnerByIndex(address,uint256)": {
								"details": "Returns a token ID owned by `owner` at a given `index` of its token list. Use along with {balanceOf} to enumerate all of ``owner``'s tokens."
							},
							"totalSupply()": {
								"details": "Returns the total amount of tokens stored by the contract."
							}
						},
						"title": "Growth type Lightweight SBT interface developed by SoulSociety",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getGrowth(uint256)": "51c18e0c",
							"getTokenType(uint256)": "76aed2e1",
							"growUp(address,uint256)": "be37e907",
							"isProtected(address)": "ce35de95",
							"mint(address,uint256)": "40c10f19",
							"reset(address,uint256)": "9b252852",
							"setProtected(bool)": "1c02bc31",
							"setTokenURI(string)": "e0df5b6f",
							"tokenOfOwnerByIndex(address,uint256)": "2f745c59",
							"totalSupply()": "18160ddd",
							"totalUser()": "e1604b70"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"creationTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"name\":\"ContractCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"growth\",\"type\":\"uint256\"}],\"name\":\"GrowUp\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenType\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Reset\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"name\":\"SetTokenURI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getGrowth\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId_\",\"type\":\"uint256\"}],\"name\":\"getTokenType\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"growUp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isProtected\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenType\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"reset\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"isProtected\",\"type\":\"bool\"}],\"name\":\"setProtected\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"tokenURI\",\"type\":\"string\"}],\"name\":\"setTokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalUser\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Mint(address,address,uint256,uint256)\":{\"details\":\"Emitted when `tokenId` token is minted from `from(Contract Owner)` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"mint(address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"Returns a token ID owned by `owner` at a given `index` of its token list. Use along with {balanceOf} to enumerate all of ``owner``'s tokens.\"},\"totalSupply()\":{\"details\":\"Returns the total amount of tokens stored by the contract.\"}},\"title\":\"Growth type Lightweight SBT interface developed by SoulSociety\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"There is a part where the gas fee required by Ethereum is too expensive to contain various information.  Therefore, by considering each contract as a piece of information, we tried to implement growth-type SBT through minimum information and minimum gas cost by managing growth in the contract.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"v2/contracts/interfaces/ISoulSocietySBT.sol\":\"ISoulSocietySBT\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"v2/contracts/interfaces/ISoulSocietySBT.sol\":{\"keccak256\":\"0xb81f9ef1e4b599044b89b891575fb0bdf051226a1189da3744d46e7ef3a6f878\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85e612906da6fb3d1bc2bc5a138e081b7d4ec6dfea6e73ab34269a38340cc7d6\",\"dweb:/ipfs/QmNUJ1NNYubWXXDEugFUP3YtGxNHLbBSYHN7X5DwhQmQh5\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "There is a part where the gas fee required by Ethereum is too expensive to contain various information.  Therefore, by considering each contract as a piece of information, we tried to implement growth-type SBT through minimum information and minimum gas cost by managing growth in the contract.",
						"version": 1
					}
				}
			},
			"v2/contracts/interfaces/ISoulSocietySBTErrors.sol": {
				"ISoulSocietySBTErrors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "SoulSocietySBTExistToken",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "SoulSocietySBTIncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "SoulSocietySBTInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "SoulSocietySBTInvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "SoulSocietySBTInvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "SoulSocietySBTNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "SoulSocietySBTNotOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "message",
									"type": "string"
								}
							],
							"name": "SoulSocietySBTNotSupported",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "SoulSocietySBTProtectedOwner",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard SoulSocietySBT.sol Errors Interface of the ERC6093 custom errors for ERC721 tokens as defined in https://eips.ethereum.org/EIPS/eip-6093",
						"errors": {
							"SoulSocietySBTIncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"SoulSocietySBTInvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"SoulSocietySBTInvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"SoulSocietySBTNonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"SoulSocietySBTNotOwner(address,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"to": "Address whose SBT token are being used."
									}
								}
							],
							"SoulSocietySBTProtectedOwner(address)": [
								{
									"details": "Indicates protected status. Used in token.",
									"params": {
										"owner": "Address."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"SoulSocietySBTExistToken\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"SoulSocietySBTIncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"SoulSocietySBTInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"SoulSocietySBTInvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"SoulSocietySBTInvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"SoulSocietySBTNonexistentToken\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"SoulSocietySBTNotOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"message\",\"type\":\"string\"}],\"name\":\"SoulSocietySBTNotSupported\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"SoulSocietySBTProtectedOwner\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard SoulSocietySBT.sol Errors Interface of the ERC6093 custom errors for ERC721 tokens as defined in https://eips.ethereum.org/EIPS/eip-6093\",\"errors\":{\"SoulSocietySBTIncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"SoulSocietySBTInvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"SoulSocietySBTInvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"SoulSocietySBTNonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}],\"SoulSocietySBTNotOwner(address,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"to\":\"Address whose SBT token are being used.\"}}],\"SoulSocietySBTProtectedOwner(address)\":[{\"details\":\"Indicates protected status. Used in token.\",\"params\":{\"owner\":\"Address.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"v2/contracts/interfaces/ISoulSocietySBTErrors.sol\":\"ISoulSocietySBTErrors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"v2/contracts/interfaces/ISoulSocietySBTErrors.sol\":{\"keccak256\":\"0x7afc72b7a710054ce9707a0e09584c90a3f4ff038cec12d37ded1850320067e2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59237520dd6a7ebc6857e8d717993b9546c9a6dbf734ddd57e19b6e6fb23b2c4\",\"dweb:/ipfs/QmNpbyg9fFUbWoVfgrCAWvWywRbLfJnsGNgVnFwHQspiKY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"v2/contracts/interfaces/ISoulSocietySBTMetadata.sol": {
				"ISoulSocietySBTMetadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "creator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "creationTime",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "symbol",
									"type": "string"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "uri",
									"type": "string"
								}
							],
							"name": "ContractCreated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "growth",
									"type": "uint256"
								}
							],
							"name": "GrowUp",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenType",
									"type": "uint256"
								}
							],
							"name": "Mint",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Reset",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "uri",
									"type": "string"
								}
							],
							"name": "SetTokenURI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getGrowth",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId_",
									"type": "uint256"
								}
							],
							"name": "getTokenType",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "growUp",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "isProtected",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenType",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "reset",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bool",
									"name": "isProtected",
									"type": "bool"
								}
							],
							"name": "setProtected",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "tokenURI",
									"type": "string"
								}
							],
							"name": "setTokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "tokenOfOwnerByIndex",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId_",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalUser",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "See https://eips.ethereum.org/EIPS/eip-721",
						"events": {
							"Mint(address,address,uint256,uint256)": {
								"details": "Emitted when `tokenId` token is minted from `from(Contract Owner)` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"mint(address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenOfOwnerByIndex(address,uint256)": {
								"details": "Returns a token ID owned by `owner` at a given `index` of its token list. Use along with {balanceOf} to enumerate all of ``owner``'s tokens."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"totalSupply()": {
								"details": "Returns the total amount of tokens stored by the contract."
							}
						},
						"title": "ERC-721 Non-Fungible Token Standard, optional metadata extension",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getGrowth(uint256)": "51c18e0c",
							"getTokenType(uint256)": "76aed2e1",
							"growUp(address,uint256)": "be37e907",
							"isProtected(address)": "ce35de95",
							"mint(address,uint256)": "40c10f19",
							"name()": "06fdde03",
							"reset(address,uint256)": "9b252852",
							"setProtected(bool)": "1c02bc31",
							"setTokenURI(string)": "e0df5b6f",
							"symbol()": "95d89b41",
							"tokenOfOwnerByIndex(address,uint256)": "2f745c59",
							"tokenURI(uint256)": "c87b56dd",
							"totalSupply()": "18160ddd",
							"totalUser()": "e1604b70"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"creationTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"name\":\"ContractCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"growth\",\"type\":\"uint256\"}],\"name\":\"GrowUp\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenType\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Reset\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"name\":\"SetTokenURI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getGrowth\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId_\",\"type\":\"uint256\"}],\"name\":\"getTokenType\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"growUp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isProtected\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenType\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"reset\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"isProtected\",\"type\":\"bool\"}],\"name\":\"setProtected\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"tokenURI\",\"type\":\"string\"}],\"name\":\"setTokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId_\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalUser\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"events\":{\"Mint(address,address,uint256,uint256)\":{\"details\":\"Emitted when `tokenId` token is minted from `from(Contract Owner)` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"mint(address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"Returns a token ID owned by `owner` at a given `index` of its token list. Use along with {balanceOf} to enumerate all of ``owner``'s tokens.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"totalSupply()\":{\"details\":\"Returns the total amount of tokens stored by the contract.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"v2/contracts/interfaces/ISoulSocietySBTMetadata.sol\":\"ISoulSocietySBTMetadata\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"v2/contracts/interfaces/ISoulSocietySBT.sol\":{\"keccak256\":\"0xb81f9ef1e4b599044b89b891575fb0bdf051226a1189da3744d46e7ef3a6f878\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85e612906da6fb3d1bc2bc5a138e081b7d4ec6dfea6e73ab34269a38340cc7d6\",\"dweb:/ipfs/QmNUJ1NNYubWXXDEugFUP3YtGxNHLbBSYHN7X5DwhQmQh5\"]},\"v2/contracts/interfaces/ISoulSocietySBTMetadata.sol\":{\"keccak256\":\"0x23118f3ea0f1bba729b85324e2513794f831b2bc49f215368260717b611b1d78\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://63dddbdebe49b44a3890dabbdd440746f535781f04166e226d7bd91c51bc184d\",\"dweb:/ipfs/QmenoR99NCd949pXwAaRKTYo6JTKvk6a3Ju2onynTiHuxy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							268
						],
						"Ownable": [
							112
						]
					},
					"id": 113,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "102:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 113,
							"sourceUnit": 269,
							"src": "127:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "Context",
										"nameLocations": [
											"683:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 268,
										"src": "683:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "683:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "159:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 112,
							"linearizedBaseContracts": [
								112,
								268
							],
							"name": "Ownable",
							"nameLocation": "672:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "713:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 112,
									"src": "697:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "697:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 13,
									"name": "OwnershipTransferred",
									"nameLocation": "732:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "769:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "753:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "753:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "800:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "784:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "784:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "752:57:0"
									},
									"src": "726:84:0"
								},
								{
									"body": {
										"id": 22,
										"nodeType": "Block",
										"src": "926:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 18,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 258,
																"src": "955:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "955:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 17,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "936:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "936:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "936:32:0"
											}
										]
									},
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "816:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 23,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "923:2:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "926:0:0"
									},
									"scope": 112,
									"src": "912:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 30,
										"nodeType": "Block",
										"src": "1084:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 26,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "1094:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 27,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1094:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 28,
												"nodeType": "ExpressionStatement",
												"src": "1094:13:0"
											},
											{
												"id": 29,
												"nodeType": "PlaceholderStatement",
												"src": "1117:1:0"
											}
										]
									},
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "981:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 31,
									"name": "onlyOwner",
									"nameLocation": "1072:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1081:2:0"
									},
									"src": "1063:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 39,
										"nodeType": "Block",
										"src": "1256:30:0",
										"statements": [
											{
												"expression": {
													"id": 37,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "1273:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 36,
												"id": 38,
												"nodeType": "Return",
												"src": "1266:13:0"
											}
										]
									},
									"documentation": {
										"id": 32,
										"nodeType": "StructuredDocumentation",
										"src": "1131:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 40,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1210:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1215:2:0"
									},
									"returnParameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "1247:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 34,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1247:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1246:9:0"
									},
									"scope": 112,
									"src": "1201:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 53,
										"nodeType": "Block",
										"src": "1404:85:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 49,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 45,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "1422:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 46,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1422:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 47,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 258,
																	"src": "1433:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 48,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1433:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1422:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 50,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1447:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 44,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1414:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 51,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1414:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 52,
												"nodeType": "ExpressionStatement",
												"src": "1414:68:0"
											}
										]
									},
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "1292:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 54,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1368:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1379:2:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1404:0:0"
									},
									"scope": 112,
									"src": "1359:130:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 67,
										"nodeType": "Block",
										"src": "1878:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 63,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1915:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 62,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1907:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 61,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1907:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 64,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1907:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 60,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "1888:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1888:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 66,
												"nodeType": "ExpressionStatement",
												"src": "1888:30:0"
											}
										]
									},
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1495:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 68,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 58,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 57,
												"name": "onlyOwner",
												"nameLocations": [
													"1868:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "1868:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1868:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1833:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1850:2:0"
									},
									"returnParameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1878:0:0"
									},
									"scope": 112,
									"src": "1824:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 90,
										"nodeType": "Block",
										"src": "2144:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 82,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 77,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 71,
																"src": "2162:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 80,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2182:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 79,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2174:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 78,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2174:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 81,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2174:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2162:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 83,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2186:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 76,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2154:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 84,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2154:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 85,
												"nodeType": "ExpressionStatement",
												"src": "2154:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 87,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 71,
															"src": "2256:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 86,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "2237:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 88,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2237:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 89,
												"nodeType": "ExpressionStatement",
												"src": "2237:28:0"
											}
										]
									},
									"documentation": {
										"id": 69,
										"nodeType": "StructuredDocumentation",
										"src": "1931:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 91,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 74,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 73,
												"name": "onlyOwner",
												"nameLocations": [
													"2134:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "2134:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2134:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2083:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2109:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "2101:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 70,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2101:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2100:18:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2144:0:0"
									},
									"scope": 112,
									"src": "2074:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 110,
										"nodeType": "Block",
										"src": "2489:124:0",
										"statements": [
											{
												"assignments": [
													98
												],
												"declarations": [
													{
														"constant": false,
														"id": 98,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2507:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 110,
														"src": "2499:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 97,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2499:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 100,
												"initialValue": {
													"id": 99,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "2518:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2499:25:0"
											},
											{
												"expression": {
													"id": 103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 101,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "2534:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 102,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 94,
														"src": "2543:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2534:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 104,
												"nodeType": "ExpressionStatement",
												"src": "2534:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 106,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 98,
															"src": "2587:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 107,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 94,
															"src": "2597:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 105,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "2566:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2566:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 109,
												"nodeType": "EmitStatement",
												"src": "2561:45:0"
											}
										]
									},
									"documentation": {
										"id": 92,
										"nodeType": "StructuredDocumentation",
										"src": "2278:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 111,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2435:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2462:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "2454:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 93,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2454:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2453:18:0"
									},
									"returnParameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2489:0:0"
									},
									"scope": 112,
									"src": "2426:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 113,
							"src": "654:1961:0",
							"usedErrors": [],
							"usedEvents": [
								13
							]
						}
					],
					"src": "102:2514:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
					"exportedSymbols": {
						"IERC165": [
							533
						],
						"IERC721": [
							228
						]
					},
					"id": 229,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 114,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "108:23:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 115,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 229,
							"sourceUnit": 534,
							"src": "133:47:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 117,
										"name": "IERC165",
										"nameLocations": [
											"271:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 533,
										"src": "271:7:1"
									},
									"id": 118,
									"nodeType": "InheritanceSpecifier",
									"src": "271:7:1"
								}
							],
							"canonicalName": "IERC721",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 116,
								"nodeType": "StructuredDocumentation",
								"src": "182:67:1",
								"text": " @dev Required interface of an ERC721 compliant contract."
							},
							"fullyImplemented": false,
							"id": 228,
							"linearizedBaseContracts": [
								228,
								533
							],
							"name": "IERC721",
							"nameLocation": "260:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 119,
										"nodeType": "StructuredDocumentation",
										"src": "285:88:1",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 127,
									"name": "Transfer",
									"nameLocation": "384:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 126,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "409:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 127,
												"src": "393:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 120,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "393:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 123,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "431:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 127,
												"src": "415:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 122,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "415:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 125,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "451:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 127,
												"src": "435:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 124,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "435:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "392:67:1"
									},
									"src": "378:82:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 128,
										"nodeType": "StructuredDocumentation",
										"src": "466:94:1",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 136,
									"name": "Approval",
									"nameLocation": "571:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 135,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 130,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "596:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 136,
												"src": "580:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 129,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "580:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 132,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "619:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 136,
												"src": "603:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 131,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "603:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 134,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "645:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 136,
												"src": "629:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 133,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "629:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "579:74:1"
									},
									"src": "565:89:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 137,
										"nodeType": "StructuredDocumentation",
										"src": "660:117:1",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 145,
									"name": "ApprovalForAll",
									"nameLocation": "788:14:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 144,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 139,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "819:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 145,
												"src": "803:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 138,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "803:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 141,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "842:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 145,
												"src": "826:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 140,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "826:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 143,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "857:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 145,
												"src": "852:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 142,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "852:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "802:64:1"
									},
									"src": "782:85:1"
								},
								{
									"documentation": {
										"id": 146,
										"nodeType": "StructuredDocumentation",
										"src": "873:76:1",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 153,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "963:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 149,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 148,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "981:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 153,
												"src": "973:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 147,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "973:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "972:15:1"
									},
									"returnParameters": {
										"id": 152,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 151,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "1019:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 153,
												"src": "1011:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 150,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1011:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1010:17:1"
									},
									"scope": 228,
									"src": "954:74:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 154,
										"nodeType": "StructuredDocumentation",
										"src": "1034:131:1",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 161,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "1179:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 157,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 156,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1195:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 161,
												"src": "1187:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 155,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1187:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1186:17:1"
									},
									"returnParameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 159,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1235:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 161,
												"src": "1227:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 158,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1227:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1226:15:1"
									},
									"scope": 228,
									"src": "1170:72:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 162,
										"nodeType": "StructuredDocumentation",
										"src": "1248:556:1",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 173,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1818:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 171,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 164,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1843:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 173,
												"src": "1835:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 163,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1835:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 166,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1857:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 173,
												"src": "1849:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 165,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1849:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 168,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1869:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 173,
												"src": "1861:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 167,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1861:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 170,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1893:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 173,
												"src": "1878:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 169,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1878:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1834:64:1"
									},
									"returnParameters": {
										"id": 172,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1907:0:1"
									},
									"scope": 228,
									"src": "1809:99:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 174,
										"nodeType": "StructuredDocumentation",
										"src": "1914:687:1",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 183,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "2615:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2640:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "2632:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 175,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2632:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 178,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2654:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "2646:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 177,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2646:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2666:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "2658:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 179,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2658:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2631:43:1"
									},
									"returnParameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2683:0:1"
									},
									"scope": 228,
									"src": "2606:78:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 184,
										"nodeType": "StructuredDocumentation",
										"src": "2690:732:1",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 193,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3436:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3457:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 193,
												"src": "3449:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3449:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 188,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3471:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 193,
												"src": "3463:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 187,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3463:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 190,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3483:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 193,
												"src": "3475:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 189,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3475:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3448:43:1"
									},
									"returnParameters": {
										"id": 192,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3500:0:1"
									},
									"scope": 228,
									"src": "3427:74:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 194,
										"nodeType": "StructuredDocumentation",
										"src": "3507:452:1",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 201,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3973:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 196,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3989:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 201,
												"src": "3981:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 195,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3981:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4001:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 201,
												"src": "3993:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3993:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3980:29:1"
									},
									"returnParameters": {
										"id": 200,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4018:0:1"
									},
									"scope": 228,
									"src": "3964:55:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 202,
										"nodeType": "StructuredDocumentation",
										"src": "4025:309:1",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 209,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "4348:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 207,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4374:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "4366:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 203,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4366:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 206,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "4389:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "4384:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 205,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4384:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4365:33:1"
									},
									"returnParameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4407:0:1"
									},
									"scope": 228,
									"src": "4339:69:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "4414:139:1",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 217,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "4567:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4587:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "4579:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 211,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4579:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4578:17:1"
									},
									"returnParameters": {
										"id": 216,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4627:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "4619:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 214,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4619:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4618:18:1"
									},
									"scope": 228,
									"src": "4558:79:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 218,
										"nodeType": "StructuredDocumentation",
										"src": "4643:138:1",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 227,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "4795:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4820:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "4812:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 219,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4812:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4835:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "4827:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4827:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4811:33:1"
									},
									"returnParameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "4868:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 224,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4868:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4867:6:1"
									},
									"scope": 228,
									"src": "4786:88:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 229,
							"src": "250:4626:1",
							"usedErrors": [],
							"usedEvents": [
								127,
								136,
								145
							]
						}
					],
					"src": "108:4769:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
					"exportedSymbols": {
						"IERC721Receiver": [
							246
						]
					},
					"id": 247,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 230,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "116:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Receiver",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 231,
								"nodeType": "StructuredDocumentation",
								"src": "142:152:2",
								"text": " @title ERC721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC721 asset contracts."
							},
							"fullyImplemented": false,
							"id": 246,
							"linearizedBaseContracts": [
								246
							],
							"name": "IERC721Receiver",
							"nameLocation": "305:15:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 232,
										"nodeType": "StructuredDocumentation",
										"src": "327:500:2",
										"text": " @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
									},
									"functionSelector": "150b7a02",
									"id": 245,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nameLocation": "841:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 241,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "875:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 245,
												"src": "867:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "867:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 236,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "901:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 245,
												"src": "893:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 235,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "893:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 238,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "923:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 245,
												"src": "915:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 237,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "915:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "955:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 245,
												"src": "940:19:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 239,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "940:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:108:2"
									},
									"returnParameters": {
										"id": 244,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 245,
												"src": "984:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 242,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "984:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "983:8:2"
									},
									"scope": 246,
									"src": "832:160:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 247,
							"src": "295:699:2",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "116:879:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							268
						]
					},
					"id": 269,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 248,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:3"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 249,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:3",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 268,
							"linearizedBaseContracts": [
								268
							],
							"name": "Context",
							"nameLocation": "626:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 257,
										"nodeType": "Block",
										"src": "702:34:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 254,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 255,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "723:6:3",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 253,
												"id": 256,
												"nodeType": "Return",
												"src": "712:17:3"
											}
										]
									},
									"id": 258,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 250,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:3"
									},
									"returnParameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "693:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:3"
									},
									"scope": 268,
									"src": "640:96:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 266,
										"nodeType": "Block",
										"src": "809:32:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 263,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 264,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "830:4:3",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 262,
												"id": 265,
												"nodeType": "Return",
												"src": "819:15:3"
											}
										]
									},
									"id": 267,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 259,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:3"
									},
									"returnParameters": {
										"id": 262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 267,
												"src": "793:14:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 260,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:3"
									},
									"scope": 268,
									"src": "742:99:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 269,
							"src": "608:235:3",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "86:758:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
					"exportedSymbols": {
						"Math": [
							1399
						],
						"SignedMath": [
							1504
						],
						"Strings": [
							497
						]
					},
					"id": 498,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 270,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
							"file": "./math/Math.sol",
							"id": 271,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 498,
							"sourceUnit": 1400,
							"src": "126:25:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SignedMath.sol",
							"file": "./math/SignedMath.sol",
							"id": 272,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 498,
							"sourceUnit": 1505,
							"src": "152:31:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Strings",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 273,
								"nodeType": "StructuredDocumentation",
								"src": "185:34:4",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 497,
							"linearizedBaseContracts": [
								497
							],
							"name": "Strings",
							"nameLocation": "228:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 276,
									"mutability": "constant",
									"name": "_SYMBOLS",
									"nameLocation": "267:8:4",
									"nodeType": "VariableDeclaration",
									"scope": 497,
									"src": "242:54:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 274,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "242:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 275,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "278:18:4",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 279,
									"mutability": "constant",
									"name": "_ADDRESS_LENGTH",
									"nameLocation": "325:15:4",
									"nodeType": "VariableDeclaration",
									"scope": 497,
									"src": "302:43:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 277,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "302:5:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3230",
										"id": 278,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "343:2:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "20"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 326,
										"nodeType": "Block",
										"src": "518:625:4",
										"statements": [
											{
												"id": 325,
												"nodeType": "UncheckedBlock",
												"src": "528:609:4",
												"statements": [
													{
														"assignments": [
															288
														],
														"declarations": [
															{
																"constant": false,
																"id": 288,
																"mutability": "mutable",
																"name": "length",
																"nameLocation": "560:6:4",
																"nodeType": "VariableDeclaration",
																"scope": 325,
																"src": "552:14:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 287,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "552:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 295,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 294,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 291,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 282,
																		"src": "580:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 289,
																		"name": "Math",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1399,
																		"src": "569:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Math_$1399_$",
																			"typeString": "type(library Math)"
																		}
																	},
																	"id": 290,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "574:5:4",
																	"memberName": "log10",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1236,
																	"src": "569:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (uint256)"
																	}
																},
																"id": 292,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "569:17:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 293,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "589:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "569:21:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "552:38:4"
													},
													{
														"assignments": [
															297
														],
														"declarations": [
															{
																"constant": false,
																"id": 297,
																"mutability": "mutable",
																"name": "buffer",
																"nameLocation": "618:6:4",
																"nodeType": "VariableDeclaration",
																"scope": 325,
																"src": "604:20:4",
																"stateVariable": false,
																"storageLocation": "memory",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string"
																},
																"typeName": {
																	"id": 296,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "604:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 302,
														"initialValue": {
															"arguments": [
																{
																	"id": 300,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 288,
																	"src": "638:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 299,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "627:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																},
																"typeName": {
																	"id": 298,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "631:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																}
															},
															"id": 301,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "627:18:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "604:41:4"
													},
													{
														"assignments": [
															304
														],
														"declarations": [
															{
																"constant": false,
																"id": 304,
																"mutability": "mutable",
																"name": "ptr",
																"nameLocation": "667:3:4",
																"nodeType": "VariableDeclaration",
																"scope": 325,
																"src": "659:11:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 303,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "659:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 305,
														"nodeType": "VariableDeclarationStatement",
														"src": "659:11:4"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "740:67:4",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "758:35:4",
																	"value": {
																		"arguments": [
																			{
																				"name": "buffer",
																				"nodeType": "YulIdentifier",
																				"src": "769:6:4"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "781:2:4",
																						"type": "",
																						"value": "32"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "785:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "777:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "777:15:4"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "765:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "765:28:4"
																	},
																	"variableNames": [
																		{
																			"name": "ptr",
																			"nodeType": "YulIdentifier",
																			"src": "758:3:4"
																		}
																	]
																}
															]
														},
														"documentation": "@solidity memory-safe-assembly",
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 297,
																"isOffset": false,
																"isSlot": false,
																"src": "769:6:4",
																"valueSize": 1
															},
															{
																"declaration": 288,
																"isOffset": false,
																"isSlot": false,
																"src": "785:6:4",
																"valueSize": 1
															},
															{
																"declaration": 304,
																"isOffset": false,
																"isSlot": false,
																"src": "758:3:4",
																"valueSize": 1
															}
														],
														"id": 306,
														"nodeType": "InlineAssembly",
														"src": "731:76:4"
													},
													{
														"body": {
															"id": 321,
															"nodeType": "Block",
															"src": "833:267:4",
															"statements": [
																{
																	"expression": {
																		"id": 309,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "--",
																		"prefix": false,
																		"src": "851:5:4",
																		"subExpression": {
																			"id": 308,
																			"name": "ptr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 304,
																			"src": "851:3:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 310,
																	"nodeType": "ExpressionStatement",
																	"src": "851:5:4"
																},
																{
																	"AST": {
																		"nodeType": "YulBlock",
																		"src": "934:84:4",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "ptr",
																							"nodeType": "YulIdentifier",
																							"src": "964:3:4"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nodeType": "YulIdentifier",
																											"src": "978:5:4"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "985:2:4",
																											"type": "",
																											"value": "10"
																										}
																									],
																									"functionName": {
																										"name": "mod",
																										"nodeType": "YulIdentifier",
																										"src": "974:3:4"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "974:14:4"
																								},
																								{
																									"name": "_SYMBOLS",
																									"nodeType": "YulIdentifier",
																									"src": "990:8:4"
																								}
																							],
																							"functionName": {
																								"name": "byte",
																								"nodeType": "YulIdentifier",
																								"src": "969:4:4"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "969:30:4"
																						}
																					],
																					"functionName": {
																						"name": "mstore8",
																						"nodeType": "YulIdentifier",
																						"src": "956:7:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "956:44:4"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "956:44:4"
																			}
																		]
																	},
																	"documentation": "@solidity memory-safe-assembly",
																	"evmVersion": "shanghai",
																	"externalReferences": [
																		{
																			"declaration": 276,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "990:8:4",
																			"valueSize": 1
																		},
																		{
																			"declaration": 304,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "964:3:4",
																			"valueSize": 1
																		},
																		{
																			"declaration": 282,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "978:5:4",
																			"valueSize": 1
																		}
																	],
																	"id": 311,
																	"nodeType": "InlineAssembly",
																	"src": "925:93:4"
																},
																{
																	"expression": {
																		"id": 314,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 312,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 282,
																			"src": "1035:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"hexValue": "3130",
																			"id": 313,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1044:2:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"src": "1035:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 315,
																	"nodeType": "ExpressionStatement",
																	"src": "1035:11:4"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 318,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 316,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 282,
																			"src": "1068:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 317,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1077:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1068:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 320,
																	"nodeType": "IfStatement",
																	"src": "1064:21:4",
																	"trueBody": {
																		"id": 319,
																		"nodeType": "Break",
																		"src": "1080:5:4"
																	}
																}
															]
														},
														"condition": {
															"hexValue": "74727565",
															"id": 307,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "827:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														"id": 322,
														"nodeType": "WhileStatement",
														"src": "820:280:4"
													},
													{
														"expression": {
															"id": 323,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 297,
															"src": "1120:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 286,
														"id": 324,
														"nodeType": "Return",
														"src": "1113:13:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 280,
										"nodeType": "StructuredDocumentation",
										"src": "352:90:4",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 327,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "456:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 283,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 282,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "473:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "465:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 281,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "465:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "464:15:4"
									},
									"returnParameters": {
										"id": 286,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 285,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "503:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 284,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "503:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "502:15:4"
									},
									"scope": 497,
									"src": "447:696:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 354,
										"nodeType": "Block",
										"src": "1313:103:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 341,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 339,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 330,
																			"src": "1354:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 340,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1362:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1354:9:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"hexValue": "",
																		"id": 343,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1372:2:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																			"typeString": "literal_string \"\""
																		},
																		"value": ""
																	},
																	"id": 344,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "1354:20:4",
																	"trueExpression": {
																		"hexValue": "2d",
																		"id": 342,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1366:3:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561",
																			"typeString": "literal_string \"-\""
																		},
																		"value": "-"
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																},
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 348,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 330,
																					"src": "1400:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				],
																				"expression": {
																					"id": 346,
																					"name": "SignedMath",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1504,
																					"src": "1385:10:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_SignedMath_$1504_$",
																						"typeString": "type(library SignedMath)"
																					}
																				},
																				"id": 347,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "1396:3:4",
																				"memberName": "abs",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1503,
																				"src": "1385:14:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_uint256_$",
																					"typeString": "function (int256) pure returns (uint256)"
																				}
																			},
																			"id": 349,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1385:21:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 345,
																		"name": "toString",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			327,
																			355
																		],
																		"referencedDeclaration": 327,
																		"src": "1376:8:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																			"typeString": "function (uint256) pure returns (string memory)"
																		}
																	},
																	"id": 350,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1376:31:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"expression": {
																	"id": 337,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1337:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 338,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1341:12:4",
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "1337:16:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 351,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1337:71:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 336,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1330:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 335,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "1330:6:4",
															"typeDescriptions": {}
														}
													},
													"id": 352,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1330:79:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 334,
												"id": 353,
												"nodeType": "Return",
												"src": "1323:86:4"
											}
										]
									},
									"documentation": {
										"id": 328,
										"nodeType": "StructuredDocumentation",
										"src": "1149:89:4",
										"text": " @dev Converts a `int256` to its ASCII `string` decimal representation."
									},
									"id": 355,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "1252:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 331,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 330,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1268:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "1261:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 329,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1261:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1260:14:4"
									},
									"returnParameters": {
										"id": 334,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 333,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "1298:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 332,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1298:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1297:15:4"
									},
									"scope": 497,
									"src": "1243:173:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 374,
										"nodeType": "Block",
										"src": "1595:100:4",
										"statements": [
											{
												"id": 373,
												"nodeType": "UncheckedBlock",
												"src": "1605:84:4",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 364,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 358,
																	"src": "1648:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 370,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 367,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 358,
																				"src": "1667:5:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 365,
																				"name": "Math",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1399,
																				"src": "1655:4:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_Math_$1399_$",
																					"typeString": "type(library Math)"
																				}
																			},
																			"id": 366,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "1660:6:4",
																			"memberName": "log256",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1359,
																			"src": "1655:11:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (uint256)"
																			}
																		},
																		"id": 368,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1655:18:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 369,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1676:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "1655:22:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 363,
																"name": "toHexString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	375,
																	451,
																	471
																],
																"referencedDeclaration": 451,
																"src": "1636:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256,uint256) pure returns (string memory)"
																}
															},
															"id": 371,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1636:42:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 362,
														"id": 372,
														"nodeType": "Return",
														"src": "1629:49:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 356,
										"nodeType": "StructuredDocumentation",
										"src": "1422:94:4",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 375,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1530:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1550:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 375,
												"src": "1542:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 357,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1542:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1541:15:4"
									},
									"returnParameters": {
										"id": 362,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 361,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 375,
												"src": "1580:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 360,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1580:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1579:15:4"
									},
									"scope": 497,
									"src": "1521:174:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 450,
										"nodeType": "Block",
										"src": "1908:347:4",
										"statements": [
											{
												"assignments": [
													386
												],
												"declarations": [
													{
														"constant": false,
														"id": 386,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "1931:6:4",
														"nodeType": "VariableDeclaration",
														"scope": 450,
														"src": "1918:19:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 385,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1918:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 395,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 393,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 391,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 389,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1950:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 390,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 380,
																	"src": "1954:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1950:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 392,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1963:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "1950:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 388,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "1940:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 387,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1944:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 394,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1940:25:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1918:47:4"
											},
											{
												"expression": {
													"id": 400,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 396,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 386,
															"src": "1975:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 398,
														"indexExpression": {
															"hexValue": "30",
															"id": 397,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1982:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1975:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 399,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1987:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "1975:15:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 401,
												"nodeType": "ExpressionStatement",
												"src": "1975:15:4"
											},
											{
												"expression": {
													"id": 406,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 402,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 386,
															"src": "2000:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 404,
														"indexExpression": {
															"hexValue": "31",
															"id": 403,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2007:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2000:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 405,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2012:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "2000:15:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 407,
												"nodeType": "ExpressionStatement",
												"src": "2000:15:4"
											},
											{
												"body": {
													"id": 436,
													"nodeType": "Block",
													"src": "2070:83:4",
													"statements": [
														{
															"expression": {
																"id": 430,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 422,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 386,
																		"src": "2084:6:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 424,
																	"indexExpression": {
																		"id": 423,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 409,
																		"src": "2091:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2084:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 425,
																		"name": "_SYMBOLS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 276,
																		"src": "2096:8:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 429,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 428,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 426,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 378,
																			"src": "2105:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 427,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2113:3:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "2105:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2096:21:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "2084:33:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 431,
															"nodeType": "ExpressionStatement",
															"src": "2084:33:4"
														},
														{
															"expression": {
																"id": 434,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 432,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 378,
																	"src": "2131:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 433,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2141:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "2131:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 435,
															"nodeType": "ExpressionStatement",
															"src": "2131:11:4"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 418,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 416,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 409,
														"src": "2058:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 417,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2062:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "2058:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 437,
												"initializationExpression": {
													"assignments": [
														409
													],
													"declarations": [
														{
															"constant": false,
															"id": 409,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2038:1:4",
															"nodeType": "VariableDeclaration",
															"scope": 437,
															"src": "2030:9:4",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 408,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2030:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 415,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 414,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 412,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 410,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2042:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 411,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 380,
																"src": "2046:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2042:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 413,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2055:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "2042:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2030:26:4"
												},
												"loopExpression": {
													"expression": {
														"id": 420,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "2065:3:4",
														"subExpression": {
															"id": 419,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 409,
															"src": "2067:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 421,
													"nodeType": "ExpressionStatement",
													"src": "2065:3:4"
												},
												"nodeType": "ForStatement",
												"src": "2025:128:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 441,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 439,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 378,
																"src": "2170:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 440,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2179:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2170:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "537472696e67733a20686578206c656e67746820696e73756666696369656e74",
															"id": 442,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2182:34:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															},
															"value": "Strings: hex length insufficient"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															}
														],
														"id": 438,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2162:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 443,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2162:55:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 444,
												"nodeType": "ExpressionStatement",
												"src": "2162:55:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 447,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 386,
															"src": "2241:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 446,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2234:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 445,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2234:6:4",
															"typeDescriptions": {}
														}
													},
													"id": 448,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2234:14:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 384,
												"id": 449,
												"nodeType": "Return",
												"src": "2227:21:4"
											}
										]
									},
									"documentation": {
										"id": 376,
										"nodeType": "StructuredDocumentation",
										"src": "1701:112:4",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 451,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1827:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 381,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 378,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1847:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 451,
												"src": "1839:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 377,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1839:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 380,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "1862:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 451,
												"src": "1854:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 379,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1854:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1838:31:4"
									},
									"returnParameters": {
										"id": 384,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 383,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 451,
												"src": "1893:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 382,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1893:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1892:15:4"
									},
									"scope": 497,
									"src": "1818:437:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 470,
										"nodeType": "Block",
										"src": "2480:76:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 464,
																			"name": "addr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 454,
																			"src": "2525:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 463,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2517:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 462,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "2517:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 465,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2517:13:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 461,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2509:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 460,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2509:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 466,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2509:22:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 467,
															"name": "_ADDRESS_LENGTH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 279,
															"src": "2533:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 459,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															375,
															451,
															471
														],
														"referencedDeclaration": 451,
														"src": "2497:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 468,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2497:52:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 458,
												"id": 469,
												"nodeType": "Return",
												"src": "2490:59:4"
											}
										]
									},
									"documentation": {
										"id": 452,
										"nodeType": "StructuredDocumentation",
										"src": "2261:141:4",
										"text": " @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation."
									},
									"id": 471,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2416:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 455,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 454,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "2436:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 471,
												"src": "2428:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 453,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2428:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2427:14:4"
									},
									"returnParameters": {
										"id": 458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 471,
												"src": "2465:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 456,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2465:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2464:15:4"
									},
									"scope": 497,
									"src": "2407:149:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 495,
										"nodeType": "Block",
										"src": "2711:66:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													},
													"id": 493,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 484,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 474,
																		"src": "2744:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 483,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2738:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 482,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "2738:5:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 485,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2738:8:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 481,
															"name": "keccak256",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967288,
															"src": "2728:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																"typeString": "function (bytes memory) pure returns (bytes32)"
															}
														},
														"id": 486,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2728:19:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 490,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 476,
																		"src": "2767:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 489,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2761:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 488,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "2761:5:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 491,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2761:8:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 487,
															"name": "keccak256",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967288,
															"src": "2751:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																"typeString": "function (bytes memory) pure returns (bytes32)"
															}
														},
														"id": 492,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2751:19:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "2728:42:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 480,
												"id": 494,
												"nodeType": "Return",
												"src": "2721:49:4"
											}
										]
									},
									"documentation": {
										"id": 472,
										"nodeType": "StructuredDocumentation",
										"src": "2562:66:4",
										"text": " @dev Returns true if the two strings are equal."
									},
									"id": 496,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "equal",
									"nameLocation": "2642:5:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 477,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 474,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2662:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 496,
												"src": "2648:15:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 473,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2648:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 476,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2679:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 496,
												"src": "2665:15:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 475,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2665:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2647:34:4"
									},
									"returnParameters": {
										"id": 480,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 479,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 496,
												"src": "2705:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 478,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2705:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2704:6:4"
									},
									"scope": 497,
									"src": "2633:144:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 498,
							"src": "220:2559:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:2679:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							521
						],
						"IERC165": [
							533
						]
					},
					"id": 522,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 499,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "99:23:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 500,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 522,
							"sourceUnit": 534,
							"src": "124:23:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 502,
										"name": "IERC165",
										"nameLocations": [
											"754:7:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 533,
										"src": "754:7:5"
									},
									"id": 503,
									"nodeType": "InheritanceSpecifier",
									"src": "754:7:5"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 501,
								"nodeType": "StructuredDocumentation",
								"src": "149:576:5",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."
							},
							"fullyImplemented": true,
							"id": 521,
							"linearizedBaseContracts": [
								521,
								533
							],
							"name": "ERC165",
							"nameLocation": "744:6:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										532
									],
									"body": {
										"id": 519,
										"nodeType": "Block",
										"src": "920:64:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 517,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 512,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 506,
														"src": "937:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 514,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 533,
																	"src": "957:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$533_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$533_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 513,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "952:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 515,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "952:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$533",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 516,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "966:11:5",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "952:25:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "937:40:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 511,
												"id": 518,
												"nodeType": "Return",
												"src": "930:47:5"
											}
										]
									},
									"documentation": {
										"id": 504,
										"nodeType": "StructuredDocumentation",
										"src": "768:56:5",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 520,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "838:17:5",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 508,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "896:8:5"
									},
									"parameters": {
										"id": 507,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 506,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "863:11:5",
												"nodeType": "VariableDeclaration",
												"scope": 520,
												"src": "856:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 505,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "856:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "855:20:5"
									},
									"returnParameters": {
										"id": 511,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 510,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 520,
												"src": "914:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 509,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "914:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "913:6:5"
									},
									"scope": 521,
									"src": "829:155:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 522,
							"src": "726:260:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "99:888:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							533
						]
					},
					"id": 534,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 523,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "100:23:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 524,
								"nodeType": "StructuredDocumentation",
								"src": "125:279:6",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 533,
							"linearizedBaseContracts": [
								533
							],
							"name": "IERC165",
							"nameLocation": "415:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 525,
										"nodeType": "StructuredDocumentation",
										"src": "429:340:6",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 532,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "783:17:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 528,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 527,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "808:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 532,
												"src": "801:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 526,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "801:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "800:20:6"
									},
									"returnParameters": {
										"id": 531,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 530,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 532,
												"src": "844:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 529,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "844:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:6:6"
									},
									"scope": 533,
									"src": "774:76:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 534,
							"src": "405:447:6",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "100:753:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
					"exportedSymbols": {
						"Math": [
							1399
						]
					},
					"id": 1400,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 535,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "103:23:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 536,
								"nodeType": "StructuredDocumentation",
								"src": "128:73:7",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 1399,
							"linearizedBaseContracts": [
								1399
							],
							"name": "Math",
							"nameLocation": "210:4:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Math.Rounding",
									"id": 540,
									"members": [
										{
											"id": 537,
											"name": "Down",
											"nameLocation": "245:4:7",
											"nodeType": "EnumValue",
											"src": "245:4:7"
										},
										{
											"id": 538,
											"name": "Up",
											"nameLocation": "287:2:7",
											"nodeType": "EnumValue",
											"src": "287:2:7"
										},
										{
											"id": 539,
											"name": "Zero",
											"nameLocation": "318:4:7",
											"nodeType": "EnumValue",
											"src": "318:4:7"
										}
									],
									"name": "Rounding",
									"nameLocation": "226:8:7",
									"nodeType": "EnumDefinition",
									"src": "221:122:7"
								},
								{
									"body": {
										"id": 557,
										"nodeType": "Block",
										"src": "480:37:7",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 552,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 550,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 543,
															"src": "497:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 551,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 545,
															"src": "501:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "497:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 554,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 545,
														"src": "509:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 555,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "497:13:7",
													"trueExpression": {
														"id": 553,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 543,
														"src": "505:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 549,
												"id": 556,
												"nodeType": "Return",
												"src": "490:20:7"
											}
										]
									},
									"documentation": {
										"id": 541,
										"nodeType": "StructuredDocumentation",
										"src": "349:59:7",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 558,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "422:3:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 546,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 543,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "434:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 558,
												"src": "426:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 542,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 545,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "445:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 558,
												"src": "437:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 544,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "437:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "425:22:7"
									},
									"returnParameters": {
										"id": 549,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 548,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 558,
												"src": "471:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 547,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "471:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "470:9:7"
									},
									"scope": 1399,
									"src": "413:104:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 575,
										"nodeType": "Block",
										"src": "655:37:7",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 570,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 568,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 561,
															"src": "672:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 569,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 563,
															"src": "676:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "672:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 572,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 563,
														"src": "684:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 573,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "672:13:7",
													"trueExpression": {
														"id": 571,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 561,
														"src": "680:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 567,
												"id": 574,
												"nodeType": "Return",
												"src": "665:20:7"
											}
										]
									},
									"documentation": {
										"id": 559,
										"nodeType": "StructuredDocumentation",
										"src": "523:60:7",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 576,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "597:3:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 564,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 561,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "609:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 576,
												"src": "601:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 560,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "601:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 563,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "620:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 576,
												"src": "612:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 562,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "612:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "600:22:7"
									},
									"returnParameters": {
										"id": 567,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 566,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 576,
												"src": "646:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 565,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "646:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "645:9:7"
									},
									"scope": 1399,
									"src": "588:104:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 598,
										"nodeType": "Block",
										"src": "876:82:7",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 596,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 588,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 586,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 579,
																	"src": "931:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 587,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 581,
																	"src": "935:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "931:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 589,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "930:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 595,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 592,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 590,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 579,
																		"src": "941:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 591,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 581,
																		"src": "945:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "941:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 593,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "940:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 594,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "950:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "940:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "930:21:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 585,
												"id": 597,
												"nodeType": "Return",
												"src": "923:28:7"
											}
										]
									},
									"documentation": {
										"id": 577,
										"nodeType": "StructuredDocumentation",
										"src": "698:102:7",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 599,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "814:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 582,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 579,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "830:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 599,
												"src": "822:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 578,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "822:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 581,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "841:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 599,
												"src": "833:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 580,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "833:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "821:22:7"
									},
									"returnParameters": {
										"id": 585,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 584,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 599,
												"src": "867:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 583,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "867:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "866:9:7"
									},
									"scope": 1399,
									"src": "805:153:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 623,
										"nodeType": "Block",
										"src": "1228:123:7",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 611,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 609,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 602,
															"src": "1316:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 610,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1321:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "1316:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 620,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 618,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 615,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 613,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 602,
																			"src": "1330:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 614,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1334:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "1330:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 616,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1329:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 617,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 604,
																"src": "1339:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1329:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 619,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1343:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "1329:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 621,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "1316:28:7",
													"trueExpression": {
														"hexValue": "30",
														"id": 612,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1325:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 608,
												"id": 622,
												"nodeType": "Return",
												"src": "1309:35:7"
											}
										]
									},
									"documentation": {
										"id": 600,
										"nodeType": "StructuredDocumentation",
										"src": "964:188:7",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds up instead\n of rounding down."
									},
									"id": 624,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "1166:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 605,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 602,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1182:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 624,
												"src": "1174:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 601,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1174:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 604,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1193:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 624,
												"src": "1185:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 603,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1185:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1173:22:7"
									},
									"returnParameters": {
										"id": 608,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 607,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 624,
												"src": "1219:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 606,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1219:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1218:9:7"
									},
									"scope": 1399,
									"src": "1157:194:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 746,
										"nodeType": "Block",
										"src": "1765:4115:7",
										"statements": [
											{
												"id": 745,
												"nodeType": "UncheckedBlock",
												"src": "1775:4099:7",
												"statements": [
													{
														"assignments": [
															637
														],
														"declarations": [
															{
																"constant": false,
																"id": 637,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "2104:5:7",
																"nodeType": "VariableDeclaration",
																"scope": 745,
																"src": "2096:13:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 636,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2096:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 638,
														"nodeType": "VariableDeclarationStatement",
														"src": "2096:13:7"
													},
													{
														"assignments": [
															640
														],
														"declarations": [
															{
																"constant": false,
																"id": 640,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "2176:5:7",
																"nodeType": "VariableDeclaration",
																"scope": 745,
																"src": "2168:13:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 639,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2168:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 641,
														"nodeType": "VariableDeclarationStatement",
														"src": "2168:13:7"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "2248:157:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2266:30:7",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "2283:1:7"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "2286:1:7"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2293:1:7",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "2289:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2289:6:7"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nodeType": "YulIdentifier",
																			"src": "2276:6:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2276:20:7"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nodeType": "YulTypedName",
																			"src": "2270:2:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2313:18:7",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "2326:1:7"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "2329:1:7"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "2322:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2322:9:7"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "2313:5:7"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2348:43:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nodeType": "YulIdentifier",
																						"src": "2365:2:7"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "2369:5:7"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "2361:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2361:14:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nodeType": "YulIdentifier",
																						"src": "2380:2:7"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "2384:5:7"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "2377:2:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2377:13:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2357:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2357:34:7"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nodeType": "YulIdentifier",
																			"src": "2348:5:7"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 637,
																"isOffset": false,
																"isSlot": false,
																"src": "2313:5:7",
																"valueSize": 1
															},
															{
																"declaration": 637,
																"isOffset": false,
																"isSlot": false,
																"src": "2369:5:7",
																"valueSize": 1
															},
															{
																"declaration": 637,
																"isOffset": false,
																"isSlot": false,
																"src": "2384:5:7",
																"valueSize": 1
															},
															{
																"declaration": 640,
																"isOffset": false,
																"isSlot": false,
																"src": "2348:5:7",
																"valueSize": 1
															},
															{
																"declaration": 627,
																"isOffset": false,
																"isSlot": false,
																"src": "2283:1:7",
																"valueSize": 1
															},
															{
																"declaration": 627,
																"isOffset": false,
																"isSlot": false,
																"src": "2326:1:7",
																"valueSize": 1
															},
															{
																"declaration": 629,
																"isOffset": false,
																"isSlot": false,
																"src": "2286:1:7",
																"valueSize": 1
															},
															{
																"declaration": 629,
																"isOffset": false,
																"isSlot": false,
																"src": "2329:1:7",
																"valueSize": 1
															}
														],
														"id": 642,
														"nodeType": "InlineAssembly",
														"src": "2239:166:7"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 645,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 643,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 640,
																"src": "2486:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 644,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2495:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2486:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 651,
														"nodeType": "IfStatement",
														"src": "2482:368:7",
														"trueBody": {
															"id": 650,
															"nodeType": "Block",
															"src": "2498:352:7",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 648,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 646,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 637,
																			"src": "2816:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 647,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 631,
																			"src": "2824:11:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "2816:19:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 635,
																	"id": 649,
																	"nodeType": "Return",
																	"src": "2809:26:7"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 655,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 653,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 631,
																		"src": "2960:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"id": 654,
																		"name": "prod1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 640,
																		"src": "2974:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2960:19:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"hexValue": "4d6174683a206d756c446976206f766572666c6f77",
																	"id": 656,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2981:23:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851",
																		"typeString": "literal_string \"Math: mulDiv overflow\""
																	},
																	"value": "Math: mulDiv overflow"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851",
																		"typeString": "literal_string \"Math: mulDiv overflow\""
																	}
																],
																"id": 652,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "2952:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 657,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2952:53:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 658,
														"nodeType": "ExpressionStatement",
														"src": "2952:53:7"
													},
													{
														"assignments": [
															660
														],
														"declarations": [
															{
																"constant": false,
																"id": 660,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "3269:9:7",
																"nodeType": "VariableDeclaration",
																"scope": 745,
																"src": "3261:17:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 659,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "3261:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 661,
														"nodeType": "VariableDeclarationStatement",
														"src": "3261:17:7"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "3301:291:7",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "3370:38:7",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "3390:1:7"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "3393:1:7"
																			},
																			{
																				"name": "denominator",
																				"nodeType": "YulIdentifier",
																				"src": "3396:11:7"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nodeType": "YulIdentifier",
																			"src": "3383:6:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3383:25:7"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nodeType": "YulIdentifier",
																			"src": "3370:9:7"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3490:41:7",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nodeType": "YulIdentifier",
																				"src": "3503:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nodeType": "YulIdentifier",
																						"src": "3513:9:7"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "3524:5:7"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nodeType": "YulIdentifier",
																					"src": "3510:2:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3510:20:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3499:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3499:32:7"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nodeType": "YulIdentifier",
																			"src": "3490:5:7"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3548:30:7",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nodeType": "YulIdentifier",
																				"src": "3561:5:7"
																			},
																			{
																				"name": "remainder",
																				"nodeType": "YulIdentifier",
																				"src": "3568:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3557:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3557:21:7"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "3548:5:7"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 631,
																"isOffset": false,
																"isSlot": false,
																"src": "3396:11:7",
																"valueSize": 1
															},
															{
																"declaration": 637,
																"isOffset": false,
																"isSlot": false,
																"src": "3524:5:7",
																"valueSize": 1
															},
															{
																"declaration": 637,
																"isOffset": false,
																"isSlot": false,
																"src": "3548:5:7",
																"valueSize": 1
															},
															{
																"declaration": 637,
																"isOffset": false,
																"isSlot": false,
																"src": "3561:5:7",
																"valueSize": 1
															},
															{
																"declaration": 640,
																"isOffset": false,
																"isSlot": false,
																"src": "3490:5:7",
																"valueSize": 1
															},
															{
																"declaration": 640,
																"isOffset": false,
																"isSlot": false,
																"src": "3503:5:7",
																"valueSize": 1
															},
															{
																"declaration": 660,
																"isOffset": false,
																"isSlot": false,
																"src": "3370:9:7",
																"valueSize": 1
															},
															{
																"declaration": 660,
																"isOffset": false,
																"isSlot": false,
																"src": "3513:9:7",
																"valueSize": 1
															},
															{
																"declaration": 660,
																"isOffset": false,
																"isSlot": false,
																"src": "3568:9:7",
																"valueSize": 1
															},
															{
																"declaration": 627,
																"isOffset": false,
																"isSlot": false,
																"src": "3390:1:7",
																"valueSize": 1
															},
															{
																"declaration": 629,
																"isOffset": false,
																"isSlot": false,
																"src": "3393:1:7",
																"valueSize": 1
															}
														],
														"id": 662,
														"nodeType": "InlineAssembly",
														"src": "3292:300:7"
													},
													{
														"assignments": [
															664
														],
														"declarations": [
															{
																"constant": false,
																"id": 664,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "3907:4:7",
																"nodeType": "VariableDeclaration",
																"scope": 745,
																"src": "3899:12:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 663,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "3899:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 672,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 671,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 665,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 631,
																"src": "3914:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 669,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 667,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "~",
																			"prefix": true,
																			"src": "3929:12:7",
																			"subExpression": {
																				"id": 666,
																				"name": "denominator",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 631,
																				"src": "3930:11:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 668,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3944:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "3929:16:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 670,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3928:18:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3914:32:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "3899:47:7"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "3969:362:7",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "4034:37:7",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nodeType": "YulIdentifier",
																				"src": "4053:11:7"
																			},
																			{
																				"name": "twos",
																				"nodeType": "YulIdentifier",
																				"src": "4066:4:7"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "4049:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4049:22:7"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nodeType": "YulIdentifier",
																			"src": "4034:11:7"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4138:25:7",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nodeType": "YulIdentifier",
																				"src": "4151:5:7"
																			},
																			{
																				"name": "twos",
																				"nodeType": "YulIdentifier",
																				"src": "4158:4:7"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "4147:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4147:16:7"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "4138:5:7"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4278:39:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4298:1:7",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nodeType": "YulIdentifier",
																								"src": "4301:4:7"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "4294:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4294:12:7"
																					},
																					{
																						"name": "twos",
																						"nodeType": "YulIdentifier",
																						"src": "4308:4:7"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "4290:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4290:23:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4315:1:7",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4286:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4286:31:7"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nodeType": "YulIdentifier",
																			"src": "4278:4:7"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 631,
																"isOffset": false,
																"isSlot": false,
																"src": "4034:11:7",
																"valueSize": 1
															},
															{
																"declaration": 631,
																"isOffset": false,
																"isSlot": false,
																"src": "4053:11:7",
																"valueSize": 1
															},
															{
																"declaration": 637,
																"isOffset": false,
																"isSlot": false,
																"src": "4138:5:7",
																"valueSize": 1
															},
															{
																"declaration": 637,
																"isOffset": false,
																"isSlot": false,
																"src": "4151:5:7",
																"valueSize": 1
															},
															{
																"declaration": 664,
																"isOffset": false,
																"isSlot": false,
																"src": "4066:4:7",
																"valueSize": 1
															},
															{
																"declaration": 664,
																"isOffset": false,
																"isSlot": false,
																"src": "4158:4:7",
																"valueSize": 1
															},
															{
																"declaration": 664,
																"isOffset": false,
																"isSlot": false,
																"src": "4278:4:7",
																"valueSize": 1
															},
															{
																"declaration": 664,
																"isOffset": false,
																"isSlot": false,
																"src": "4301:4:7",
																"valueSize": 1
															},
															{
																"declaration": 664,
																"isOffset": false,
																"isSlot": false,
																"src": "4308:4:7",
																"valueSize": 1
															}
														],
														"id": 673,
														"nodeType": "InlineAssembly",
														"src": "3960:371:7"
													},
													{
														"expression": {
															"id": 678,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 674,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 637,
																"src": "4397:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 677,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 675,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 640,
																	"src": "4406:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 676,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 664,
																	"src": "4414:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4406:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4397:21:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 679,
														"nodeType": "ExpressionStatement",
														"src": "4397:21:7"
													},
													{
														"assignments": [
															681
														],
														"declarations": [
															{
																"constant": false,
																"id": 681,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "4744:7:7",
																"nodeType": "VariableDeclaration",
																"scope": 745,
																"src": "4736:15:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 680,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4736:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 688,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 687,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 684,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 682,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4755:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 683,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 631,
																			"src": "4759:11:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4755:15:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 685,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "4754:17:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 686,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4774:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "4754:21:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4736:39:7"
													},
													{
														"expression": {
															"id": 695,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 689,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 681,
																"src": "4992:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 694,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 690,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5003:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 693,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 691,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 631,
																		"src": "5007:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 692,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 681,
																		"src": "5021:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5007:21:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5003:25:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4992:36:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 696,
														"nodeType": "ExpressionStatement",
														"src": "4992:36:7"
													},
													{
														"expression": {
															"id": 703,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 697,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 681,
																"src": "5061:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 702,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 698,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5072:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 701,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 699,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 631,
																		"src": "5076:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 700,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 681,
																		"src": "5090:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5076:21:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5072:25:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5061:36:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 704,
														"nodeType": "ExpressionStatement",
														"src": "5061:36:7"
													},
													{
														"expression": {
															"id": 711,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 705,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 681,
																"src": "5131:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 710,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 706,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5142:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 709,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 707,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 631,
																		"src": "5146:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 708,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 681,
																		"src": "5160:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5146:21:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5142:25:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5131:36:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 712,
														"nodeType": "ExpressionStatement",
														"src": "5131:36:7"
													},
													{
														"expression": {
															"id": 719,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 713,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 681,
																"src": "5201:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 718,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 714,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5212:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 717,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 715,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 631,
																		"src": "5216:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 716,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 681,
																		"src": "5230:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5216:21:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5212:25:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5201:36:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 720,
														"nodeType": "ExpressionStatement",
														"src": "5201:36:7"
													},
													{
														"expression": {
															"id": 727,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 721,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 681,
																"src": "5271:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 726,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 722,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5282:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 725,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 723,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 631,
																		"src": "5286:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 724,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 681,
																		"src": "5300:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5286:21:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5282:25:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5271:36:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 728,
														"nodeType": "ExpressionStatement",
														"src": "5271:36:7"
													},
													{
														"expression": {
															"id": 735,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 729,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 681,
																"src": "5342:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 734,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 730,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5353:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 733,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 731,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 631,
																		"src": "5357:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 732,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 681,
																		"src": "5371:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5357:21:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5353:25:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5342:36:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 736,
														"nodeType": "ExpressionStatement",
														"src": "5342:36:7"
													},
													{
														"expression": {
															"id": 741,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 737,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 634,
																"src": "5812:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 740,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 738,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 637,
																	"src": "5821:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 739,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 681,
																	"src": "5829:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5821:15:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5812:24:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 742,
														"nodeType": "ExpressionStatement",
														"src": "5812:24:7"
													},
													{
														"expression": {
															"id": 743,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 634,
															"src": "5857:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 635,
														"id": 744,
														"nodeType": "Return",
														"src": "5850:13:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 625,
										"nodeType": "StructuredDocumentation",
										"src": "1357:305:7",
										"text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n with further edits by Uniswap Labs also under MIT license."
									},
									"id": 747,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "1676:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 632,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 627,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "1691:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 747,
												"src": "1683:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 626,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1683:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 629,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "1702:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 747,
												"src": "1694:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 628,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1694:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 631,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "1713:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 747,
												"src": "1705:19:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 630,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1705:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1682:43:7"
									},
									"returnParameters": {
										"id": 635,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 634,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "1757:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 747,
												"src": "1749:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 633,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1749:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1748:16:7"
									},
									"scope": 1399,
									"src": "1667:4213:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 790,
										"nodeType": "Block",
										"src": "6122:189:7",
										"statements": [
											{
												"assignments": [
													763
												],
												"declarations": [
													{
														"constant": false,
														"id": 763,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "6140:6:7",
														"nodeType": "VariableDeclaration",
														"scope": 790,
														"src": "6132:14:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 762,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6132:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 769,
												"initialValue": {
													"arguments": [
														{
															"id": 765,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 750,
															"src": "6156:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 766,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 752,
															"src": "6159:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 767,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 754,
															"src": "6162:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 764,
														"name": "mulDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															747,
															791
														],
														"referencedDeclaration": 747,
														"src": "6149:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 768,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6149:25:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6132:42:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 781,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_enum$_Rounding_$540",
															"typeString": "enum Math.Rounding"
														},
														"id": 773,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 770,
															"name": "rounding",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 757,
															"src": "6188:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Rounding_$540",
																"typeString": "enum Math.Rounding"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"id": 771,
																"name": "Rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 540,
																"src": "6200:8:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_Rounding_$540_$",
																	"typeString": "type(enum Math.Rounding)"
																}
															},
															"id": 772,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "6209:2:7",
															"memberName": "Up",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 538,
															"src": "6200:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Rounding_$540",
																"typeString": "enum Math.Rounding"
															}
														},
														"src": "6188:23:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 780,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 775,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 750,
																	"src": "6222:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 776,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 752,
																	"src": "6225:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 777,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 754,
																	"src": "6228:11:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 774,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967280,
																"src": "6215:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 778,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6215:25:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 779,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6243:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "6215:29:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6188:56:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 787,
												"nodeType": "IfStatement",
												"src": "6184:98:7",
												"trueBody": {
													"id": 786,
													"nodeType": "Block",
													"src": "6246:36:7",
													"statements": [
														{
															"expression": {
																"id": 784,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 782,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 763,
																	"src": "6260:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 783,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6270:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "6260:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 785,
															"nodeType": "ExpressionStatement",
															"src": "6260:11:7"
														}
													]
												}
											},
											{
												"expression": {
													"id": 788,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 763,
													"src": "6298:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 761,
												"id": 789,
												"nodeType": "Return",
												"src": "6291:13:7"
											}
										]
									},
									"documentation": {
										"id": 748,
										"nodeType": "StructuredDocumentation",
										"src": "5886:121:7",
										"text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 791,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "6021:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 750,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "6036:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 791,
												"src": "6028:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 749,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6028:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 752,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "6047:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 791,
												"src": "6039:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 751,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6039:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 754,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "6058:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 791,
												"src": "6050:19:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 753,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6050:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 757,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "6080:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 791,
												"src": "6071:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$540",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 756,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 755,
														"name": "Rounding",
														"nameLocations": [
															"6071:8:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 540,
														"src": "6071:8:7"
													},
													"referencedDeclaration": 540,
													"src": "6071:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$540",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6027:62:7"
									},
									"returnParameters": {
										"id": 761,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 760,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 791,
												"src": "6113:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 759,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6113:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6112:9:7"
									},
									"scope": 1399,
									"src": "6012:299:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 902,
										"nodeType": "Block",
										"src": "6587:1585:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 801,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 799,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 794,
														"src": "6601:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 800,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6606:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6601:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 805,
												"nodeType": "IfStatement",
												"src": "6597:45:7",
												"trueBody": {
													"id": 804,
													"nodeType": "Block",
													"src": "6609:33:7",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 802,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6630:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 798,
															"id": 803,
															"nodeType": "Return",
															"src": "6623:8:7"
														}
													]
												}
											},
											{
												"assignments": [
													807
												],
												"declarations": [
													{
														"constant": false,
														"id": 807,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "7329:6:7",
														"nodeType": "VariableDeclaration",
														"scope": 902,
														"src": "7321:14:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 806,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7321:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 816,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 815,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 808,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7338:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 813,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 810,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 794,
																			"src": "7349:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 809,
																		"name": "log2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			1071,
																			1107
																		],
																		"referencedDeclaration": 1071,
																		"src": "7344:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 811,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7344:7:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 812,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7355:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7344:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 814,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "7343:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7338:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7321:36:7"
											},
											{
												"id": 901,
												"nodeType": "UncheckedBlock",
												"src": "7758:408:7",
												"statements": [
													{
														"expression": {
															"id": 826,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 817,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 807,
																"src": "7782:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 825,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 822,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 818,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 807,
																				"src": "7792:6:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 821,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 819,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 794,
																					"src": "7801:1:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 820,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 807,
																					"src": "7805:6:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7801:10:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7792:19:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 823,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7791:21:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 824,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7816:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7791:26:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7782:35:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 827,
														"nodeType": "ExpressionStatement",
														"src": "7782:35:7"
													},
													{
														"expression": {
															"id": 837,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 828,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 807,
																"src": "7831:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 836,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 833,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 829,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 807,
																				"src": "7841:6:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 832,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 830,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 794,
																					"src": "7850:1:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 831,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 807,
																					"src": "7854:6:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7850:10:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7841:19:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 834,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7840:21:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 835,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7865:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7840:26:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7831:35:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 838,
														"nodeType": "ExpressionStatement",
														"src": "7831:35:7"
													},
													{
														"expression": {
															"id": 848,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 839,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 807,
																"src": "7880:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 847,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 844,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 840,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 807,
																				"src": "7890:6:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 843,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 841,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 794,
																					"src": "7899:1:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 842,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 807,
																					"src": "7903:6:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7899:10:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7890:19:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 845,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7889:21:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 846,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7914:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7889:26:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7880:35:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 849,
														"nodeType": "ExpressionStatement",
														"src": "7880:35:7"
													},
													{
														"expression": {
															"id": 859,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 850,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 807,
																"src": "7929:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 858,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 855,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 851,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 807,
																				"src": "7939:6:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 854,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 852,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 794,
																					"src": "7948:1:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 853,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 807,
																					"src": "7952:6:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7948:10:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7939:19:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 856,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7938:21:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 857,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7963:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7938:26:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7929:35:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 860,
														"nodeType": "ExpressionStatement",
														"src": "7929:35:7"
													},
													{
														"expression": {
															"id": 870,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 861,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 807,
																"src": "7978:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 869,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 866,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 862,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 807,
																				"src": "7988:6:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 865,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 863,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 794,
																					"src": "7997:1:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 864,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 807,
																					"src": "8001:6:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7997:10:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7988:19:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 867,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7987:21:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 868,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8012:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7987:26:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7978:35:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 871,
														"nodeType": "ExpressionStatement",
														"src": "7978:35:7"
													},
													{
														"expression": {
															"id": 881,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 872,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 807,
																"src": "8027:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 880,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 877,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 873,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 807,
																				"src": "8037:6:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 876,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 874,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 794,
																					"src": "8046:1:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 875,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 807,
																					"src": "8050:6:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8046:10:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "8037:19:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 878,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "8036:21:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 879,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8061:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8036:26:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8027:35:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 882,
														"nodeType": "ExpressionStatement",
														"src": "8027:35:7"
													},
													{
														"expression": {
															"id": 892,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 883,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 807,
																"src": "8076:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 891,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 888,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 884,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 807,
																				"src": "8086:6:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 887,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 885,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 794,
																					"src": "8095:1:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 886,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 807,
																					"src": "8099:6:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8095:10:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "8086:19:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 889,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "8085:21:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 890,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8110:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8085:26:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8076:35:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 893,
														"nodeType": "ExpressionStatement",
														"src": "8076:35:7"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 895,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 807,
																	"src": "8136:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 898,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 896,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 794,
																		"src": "8144:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 897,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 807,
																		"src": "8148:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8144:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 894,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 576,
																"src": "8132:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 899,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8132:23:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 798,
														"id": 900,
														"nodeType": "Return",
														"src": "8125:30:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 792,
										"nodeType": "StructuredDocumentation",
										"src": "6317:208:7",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."
									},
									"id": 903,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "6539:4:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 795,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 794,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6552:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 903,
												"src": "6544:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 793,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6544:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6543:11:7"
									},
									"returnParameters": {
										"id": 798,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 797,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 903,
												"src": "6578:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 796,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6578:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6577:9:7"
									},
									"scope": 1399,
									"src": "6530:1642:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 938,
										"nodeType": "Block",
										"src": "8348:161:7",
										"statements": [
											{
												"id": 937,
												"nodeType": "UncheckedBlock",
												"src": "8358:145:7",
												"statements": [
													{
														"assignments": [
															915
														],
														"declarations": [
															{
																"constant": false,
																"id": 915,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "8390:6:7",
																"nodeType": "VariableDeclaration",
																"scope": 937,
																"src": "8382:14:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 914,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "8382:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 919,
														"initialValue": {
															"arguments": [
																{
																	"id": 917,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 906,
																	"src": "8404:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 916,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	903,
																	939
																],
																"referencedDeclaration": 903,
																"src": "8399:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 918,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8399:7:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "8382:24:7"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 935,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 920,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 915,
																"src": "8427:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 930,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$540",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 924,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 921,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 909,
																					"src": "8437:8:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$540",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 922,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 540,
																						"src": "8449:8:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$540_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 923,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "8458:2:7",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 538,
																					"src": "8449:11:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$540",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "8437:23:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 929,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 927,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 925,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 915,
																						"src": "8464:6:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 926,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 915,
																						"src": "8473:6:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "8464:15:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 928,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 906,
																					"src": "8482:1:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8464:19:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "8437:46:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 932,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8490:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 933,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "8437:54:7",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 931,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8486:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 934,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "8436:56:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "8427:65:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 913,
														"id": 936,
														"nodeType": "Return",
														"src": "8420:72:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 904,
										"nodeType": "StructuredDocumentation",
										"src": "8178:89:7",
										"text": " @notice Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 939,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "8281:4:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 910,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 906,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8294:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 939,
												"src": "8286:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 905,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8286:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 909,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "8306:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 939,
												"src": "8297:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$540",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 908,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 907,
														"name": "Rounding",
														"nameLocations": [
															"8297:8:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 540,
														"src": "8297:8:7"
													},
													"referencedDeclaration": 540,
													"src": "8297:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$540",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8285:30:7"
									},
									"returnParameters": {
										"id": 913,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 912,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 939,
												"src": "8339:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 911,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8339:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8338:9:7"
									},
									"scope": 1399,
									"src": "8272:237:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1070,
										"nodeType": "Block",
										"src": "8694:922:7",
										"statements": [
											{
												"assignments": [
													948
												],
												"declarations": [
													{
														"constant": false,
														"id": 948,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "8712:6:7",
														"nodeType": "VariableDeclaration",
														"scope": 1070,
														"src": "8704:14:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 947,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8704:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 950,
												"initialValue": {
													"hexValue": "30",
													"id": 949,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "8721:1:7",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8704:18:7"
											},
											{
												"id": 1067,
												"nodeType": "UncheckedBlock",
												"src": "8732:855:7",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 955,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 953,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 951,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 942,
																	"src": "8760:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 952,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8769:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "8760:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 954,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8775:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8760:16:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 965,
														"nodeType": "IfStatement",
														"src": "8756:99:7",
														"trueBody": {
															"id": 964,
															"nodeType": "Block",
															"src": "8778:77:7",
															"statements": [
																{
																	"expression": {
																		"id": 958,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 956,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 942,
																			"src": "8796:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 957,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8806:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "8796:13:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 959,
																	"nodeType": "ExpressionStatement",
																	"src": "8796:13:7"
																},
																{
																	"expression": {
																		"id": 962,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 960,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 948,
																			"src": "8827:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 961,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8837:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "8827:13:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 963,
																	"nodeType": "ExpressionStatement",
																	"src": "8827:13:7"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 970,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 968,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 966,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 942,
																	"src": "8872:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 967,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8881:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "8872:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 969,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8886:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8872:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 980,
														"nodeType": "IfStatement",
														"src": "8868:96:7",
														"trueBody": {
															"id": 979,
															"nodeType": "Block",
															"src": "8889:75:7",
															"statements": [
																{
																	"expression": {
																		"id": 973,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 971,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 942,
																			"src": "8907:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 972,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8917:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "8907:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 974,
																	"nodeType": "ExpressionStatement",
																	"src": "8907:12:7"
																},
																{
																	"expression": {
																		"id": 977,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 975,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 948,
																			"src": "8937:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 976,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8947:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "8937:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 978,
																	"nodeType": "ExpressionStatement",
																	"src": "8937:12:7"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 985,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 983,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 981,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 942,
																	"src": "8981:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 982,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8990:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "8981:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 984,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8995:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8981:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 995,
														"nodeType": "IfStatement",
														"src": "8977:96:7",
														"trueBody": {
															"id": 994,
															"nodeType": "Block",
															"src": "8998:75:7",
															"statements": [
																{
																	"expression": {
																		"id": 988,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 986,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 942,
																			"src": "9016:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 987,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9026:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "9016:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 989,
																	"nodeType": "ExpressionStatement",
																	"src": "9016:12:7"
																},
																{
																	"expression": {
																		"id": 992,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 990,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 948,
																			"src": "9046:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 991,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9056:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "9046:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 993,
																	"nodeType": "ExpressionStatement",
																	"src": "9046:12:7"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1000,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 998,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 996,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 942,
																	"src": "9090:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 997,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9099:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "9090:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 999,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9104:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9090:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1010,
														"nodeType": "IfStatement",
														"src": "9086:96:7",
														"trueBody": {
															"id": 1009,
															"nodeType": "Block",
															"src": "9107:75:7",
															"statements": [
																{
																	"expression": {
																		"id": 1003,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1001,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 942,
																			"src": "9125:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1002,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9135:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "9125:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1004,
																	"nodeType": "ExpressionStatement",
																	"src": "9125:12:7"
																},
																{
																	"expression": {
																		"id": 1007,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1005,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 948,
																			"src": "9155:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1006,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9165:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "9155:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1008,
																	"nodeType": "ExpressionStatement",
																	"src": "9155:12:7"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1015,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1013,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1011,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 942,
																	"src": "9199:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 1012,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9208:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "9199:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1014,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9212:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9199:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1025,
														"nodeType": "IfStatement",
														"src": "9195:93:7",
														"trueBody": {
															"id": 1024,
															"nodeType": "Block",
															"src": "9215:73:7",
															"statements": [
																{
																	"expression": {
																		"id": 1018,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1016,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 942,
																			"src": "9233:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1017,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9243:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "9233:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1019,
																	"nodeType": "ExpressionStatement",
																	"src": "9233:11:7"
																},
																{
																	"expression": {
																		"id": 1022,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1020,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 948,
																			"src": "9262:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1021,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9272:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "9262:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1023,
																	"nodeType": "ExpressionStatement",
																	"src": "9262:11:7"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1030,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1028,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1026,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 942,
																	"src": "9305:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 1027,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9314:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "9305:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1029,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9318:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9305:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1040,
														"nodeType": "IfStatement",
														"src": "9301:93:7",
														"trueBody": {
															"id": 1039,
															"nodeType": "Block",
															"src": "9321:73:7",
															"statements": [
																{
																	"expression": {
																		"id": 1033,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1031,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 942,
																			"src": "9339:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1032,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9349:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "9339:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1034,
																	"nodeType": "ExpressionStatement",
																	"src": "9339:11:7"
																},
																{
																	"expression": {
																		"id": 1037,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1035,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 948,
																			"src": "9368:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1036,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9378:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "9368:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1038,
																	"nodeType": "ExpressionStatement",
																	"src": "9368:11:7"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1045,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1043,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1041,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 942,
																	"src": "9411:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 1042,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9420:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "9411:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1044,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9424:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9411:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1055,
														"nodeType": "IfStatement",
														"src": "9407:93:7",
														"trueBody": {
															"id": 1054,
															"nodeType": "Block",
															"src": "9427:73:7",
															"statements": [
																{
																	"expression": {
																		"id": 1048,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1046,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 942,
																			"src": "9445:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1047,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9455:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "9445:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1049,
																	"nodeType": "ExpressionStatement",
																	"src": "9445:11:7"
																},
																{
																	"expression": {
																		"id": 1052,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1050,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 948,
																			"src": "9474:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1051,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9484:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "9474:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1053,
																	"nodeType": "ExpressionStatement",
																	"src": "9474:11:7"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1060,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1058,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1056,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 942,
																	"src": "9517:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1057,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9526:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9517:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1059,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9530:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9517:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1066,
														"nodeType": "IfStatement",
														"src": "9513:64:7",
														"trueBody": {
															"id": 1065,
															"nodeType": "Block",
															"src": "9533:44:7",
															"statements": [
																{
																	"expression": {
																		"id": 1063,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1061,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 948,
																			"src": "9551:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1062,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9561:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "9551:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1064,
																	"nodeType": "ExpressionStatement",
																	"src": "9551:11:7"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 1068,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 948,
													"src": "9603:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 946,
												"id": 1069,
												"nodeType": "Return",
												"src": "9596:13:7"
											}
										]
									},
									"documentation": {
										"id": 940,
										"nodeType": "StructuredDocumentation",
										"src": "8515:113:7",
										"text": " @dev Return the log in base 2, rounded down, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1071,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "8642:4:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 943,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 942,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8655:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1071,
												"src": "8647:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 941,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8647:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8646:15:7"
									},
									"returnParameters": {
										"id": 946,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 945,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1071,
												"src": "8685:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 944,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8685:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8684:9:7"
									},
									"scope": 1399,
									"src": "8633:983:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1106,
										"nodeType": "Block",
										"src": "9849:165:7",
										"statements": [
											{
												"id": 1105,
												"nodeType": "UncheckedBlock",
												"src": "9859:149:7",
												"statements": [
													{
														"assignments": [
															1083
														],
														"declarations": [
															{
																"constant": false,
																"id": 1083,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "9891:6:7",
																"nodeType": "VariableDeclaration",
																"scope": 1105,
																"src": "9883:14:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1082,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "9883:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1087,
														"initialValue": {
															"arguments": [
																{
																	"id": 1085,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1074,
																	"src": "9905:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1084,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1071,
																	1107
																],
																"referencedDeclaration": 1071,
																"src": "9900:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1086,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9900:11:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "9883:28:7"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1103,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1088,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1083,
																"src": "9932:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1098,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$540",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 1092,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1089,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1077,
																					"src": "9942:8:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$540",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 1090,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 540,
																						"src": "9954:8:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$540_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 1091,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "9963:2:7",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 538,
																					"src": "9954:11:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$540",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "9942:23:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1097,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1095,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 1093,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "9969:1:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"id": 1094,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1083,
																						"src": "9974:6:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "9969:11:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1096,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1074,
																					"src": "9983:5:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9969:19:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "9942:46:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1100,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9995:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1101,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "9942:54:7",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1099,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9991:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1102,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "9941:56:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "9932:65:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1081,
														"id": 1104,
														"nodeType": "Return",
														"src": "9925:72:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1072,
										"nodeType": "StructuredDocumentation",
										"src": "9622:142:7",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1107,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "9778:4:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1078,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1074,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9791:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1107,
												"src": "9783:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1073,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9783:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1077,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "9807:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1107,
												"src": "9798:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$540",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1076,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1075,
														"name": "Rounding",
														"nameLocations": [
															"9798:8:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 540,
														"src": "9798:8:7"
													},
													"referencedDeclaration": 540,
													"src": "9798:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$540",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9782:34:7"
									},
									"returnParameters": {
										"id": 1081,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1080,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1107,
												"src": "9840:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1079,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9840:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9839:9:7"
									},
									"scope": 1399,
									"src": "9769:245:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1235,
										"nodeType": "Block",
										"src": "10201:854:7",
										"statements": [
											{
												"assignments": [
													1116
												],
												"declarations": [
													{
														"constant": false,
														"id": 1116,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "10219:6:7",
														"nodeType": "VariableDeclaration",
														"scope": 1235,
														"src": "10211:14:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1115,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10211:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1118,
												"initialValue": {
													"hexValue": "30",
													"id": 1117,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "10228:1:7",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10211:18:7"
											},
											{
												"id": 1232,
												"nodeType": "UncheckedBlock",
												"src": "10239:787:7",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1123,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1119,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1110,
																"src": "10267:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 1122,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1120,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10276:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 1121,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10282:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "10276:8:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "10267:17:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1135,
														"nodeType": "IfStatement",
														"src": "10263:103:7",
														"trueBody": {
															"id": 1134,
															"nodeType": "Block",
															"src": "10286:80:7",
															"statements": [
																{
																	"expression": {
																		"id": 1128,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1124,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1110,
																			"src": "10304:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 1127,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1125,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10313:2:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 1126,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10319:2:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "10313:8:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "10304:17:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1129,
																	"nodeType": "ExpressionStatement",
																	"src": "10304:17:7"
																},
																{
																	"expression": {
																		"id": 1132,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1130,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1116,
																			"src": "10339:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1131,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10349:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "10339:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1133,
																	"nodeType": "ExpressionStatement",
																	"src": "10339:12:7"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1140,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1136,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1110,
																"src": "10383:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 1139,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1137,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10392:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 1138,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10398:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "10392:8:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "10383:17:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1152,
														"nodeType": "IfStatement",
														"src": "10379:103:7",
														"trueBody": {
															"id": 1151,
															"nodeType": "Block",
															"src": "10402:80:7",
															"statements": [
																{
																	"expression": {
																		"id": 1145,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1141,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1110,
																			"src": "10420:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 1144,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1142,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10429:2:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 1143,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10435:2:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "10429:8:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "10420:17:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1146,
																	"nodeType": "ExpressionStatement",
																	"src": "10420:17:7"
																},
																{
																	"expression": {
																		"id": 1149,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1147,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1116,
																			"src": "10455:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1148,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10465:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "10455:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1150,
																	"nodeType": "ExpressionStatement",
																	"src": "10455:12:7"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1157,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1153,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1110,
																"src": "10499:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 1156,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1154,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10508:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 1155,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10514:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "10508:8:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "10499:17:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1169,
														"nodeType": "IfStatement",
														"src": "10495:103:7",
														"trueBody": {
															"id": 1168,
															"nodeType": "Block",
															"src": "10518:80:7",
															"statements": [
																{
																	"expression": {
																		"id": 1162,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1158,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1110,
																			"src": "10536:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 1161,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1159,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10545:2:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 1160,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10551:2:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "10545:8:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "10536:17:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1163,
																	"nodeType": "ExpressionStatement",
																	"src": "10536:17:7"
																},
																{
																	"expression": {
																		"id": 1166,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1164,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1116,
																			"src": "10571:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1165,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10581:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "10571:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1167,
																	"nodeType": "ExpressionStatement",
																	"src": "10571:12:7"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1174,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1170,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1110,
																"src": "10615:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 1173,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1171,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10624:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 1172,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10630:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "10624:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "10615:16:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1186,
														"nodeType": "IfStatement",
														"src": "10611:100:7",
														"trueBody": {
															"id": 1185,
															"nodeType": "Block",
															"src": "10633:78:7",
															"statements": [
																{
																	"expression": {
																		"id": 1179,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1175,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1110,
																			"src": "10651:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 1178,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1176,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10660:2:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 1177,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10666:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "10660:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "10651:16:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1180,
																	"nodeType": "ExpressionStatement",
																	"src": "10651:16:7"
																},
																{
																	"expression": {
																		"id": 1183,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1181,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1116,
																			"src": "10685:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1182,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10695:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "10685:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1184,
																	"nodeType": "ExpressionStatement",
																	"src": "10685:11:7"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1191,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1187,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1110,
																"src": "10728:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 1190,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1188,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10737:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 1189,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10743:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "10737:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "10728:16:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1203,
														"nodeType": "IfStatement",
														"src": "10724:100:7",
														"trueBody": {
															"id": 1202,
															"nodeType": "Block",
															"src": "10746:78:7",
															"statements": [
																{
																	"expression": {
																		"id": 1196,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1192,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1110,
																			"src": "10764:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 1195,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1193,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10773:2:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 1194,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10779:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "10773:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "10764:16:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1197,
																	"nodeType": "ExpressionStatement",
																	"src": "10764:16:7"
																},
																{
																	"expression": {
																		"id": 1200,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1198,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1116,
																			"src": "10798:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1199,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10808:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "10798:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1201,
																	"nodeType": "ExpressionStatement",
																	"src": "10798:11:7"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1208,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1204,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1110,
																"src": "10841:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 1207,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1205,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10850:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 1206,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10856:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "10850:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "10841:16:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1220,
														"nodeType": "IfStatement",
														"src": "10837:100:7",
														"trueBody": {
															"id": 1219,
															"nodeType": "Block",
															"src": "10859:78:7",
															"statements": [
																{
																	"expression": {
																		"id": 1213,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1209,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1110,
																			"src": "10877:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 1212,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1210,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10886:2:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 1211,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10892:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "10886:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "10877:16:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1214,
																	"nodeType": "ExpressionStatement",
																	"src": "10877:16:7"
																},
																{
																	"expression": {
																		"id": 1217,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1215,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1116,
																			"src": "10911:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1216,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10921:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "10911:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1218,
																	"nodeType": "ExpressionStatement",
																	"src": "10911:11:7"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1225,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1221,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1110,
																"src": "10954:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 1224,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1222,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10963:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1223,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10969:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10963:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "10954:16:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1231,
														"nodeType": "IfStatement",
														"src": "10950:66:7",
														"trueBody": {
															"id": 1230,
															"nodeType": "Block",
															"src": "10972:44:7",
															"statements": [
																{
																	"expression": {
																		"id": 1228,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1226,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1116,
																			"src": "10990:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1227,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11000:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "10990:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1229,
																	"nodeType": "ExpressionStatement",
																	"src": "10990:11:7"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 1233,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1116,
													"src": "11042:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1114,
												"id": 1234,
												"nodeType": "Return",
												"src": "11035:13:7"
											}
										]
									},
									"documentation": {
										"id": 1108,
										"nodeType": "StructuredDocumentation",
										"src": "10020:114:7",
										"text": " @dev Return the log in base 10, rounded down, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1236,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "10148:5:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1110,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10162:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1236,
												"src": "10154:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1109,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10154:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10153:15:7"
									},
									"returnParameters": {
										"id": 1114,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1113,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1236,
												"src": "10192:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1112,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10192:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10191:9:7"
									},
									"scope": 1399,
									"src": "10139:916:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1271,
										"nodeType": "Block",
										"src": "11290:167:7",
										"statements": [
											{
												"id": 1270,
												"nodeType": "UncheckedBlock",
												"src": "11300:151:7",
												"statements": [
													{
														"assignments": [
															1248
														],
														"declarations": [
															{
																"constant": false,
																"id": 1248,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "11332:6:7",
																"nodeType": "VariableDeclaration",
																"scope": 1270,
																"src": "11324:14:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1247,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "11324:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1252,
														"initialValue": {
															"arguments": [
																{
																	"id": 1250,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1239,
																	"src": "11347:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1249,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1236,
																	1272
																],
																"referencedDeclaration": 1236,
																"src": "11341:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1251,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11341:12:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "11324:29:7"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1268,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1253,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1248,
																"src": "11374:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1263,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$540",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 1257,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1254,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1242,
																					"src": "11384:8:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$540",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 1255,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 540,
																						"src": "11396:8:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$540_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 1256,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "11405:2:7",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 538,
																					"src": "11396:11:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$540",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "11384:23:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1262,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1260,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 1258,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "11411:2:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"id": 1259,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1248,
																						"src": "11417:6:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "11411:12:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1261,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1239,
																					"src": "11426:5:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11411:20:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "11384:47:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1265,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11438:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1266,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "11384:55:7",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1264,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11434:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1267,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "11383:57:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "11374:66:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1246,
														"id": 1269,
														"nodeType": "Return",
														"src": "11367:73:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1237,
										"nodeType": "StructuredDocumentation",
										"src": "11061:143:7",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1272,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "11218:5:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1239,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11232:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1272,
												"src": "11224:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1238,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11224:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1242,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "11248:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1272,
												"src": "11239:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$540",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1241,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1240,
														"name": "Rounding",
														"nameLocations": [
															"11239:8:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 540,
														"src": "11239:8:7"
													},
													"referencedDeclaration": 540,
													"src": "11239:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$540",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11223:34:7"
									},
									"returnParameters": {
										"id": 1246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1245,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1272,
												"src": "11281:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11281:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11280:9:7"
									},
									"scope": 1399,
									"src": "11209:248:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1358,
										"nodeType": "Block",
										"src": "11771:600:7",
										"statements": [
											{
												"assignments": [
													1281
												],
												"declarations": [
													{
														"constant": false,
														"id": 1281,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "11789:6:7",
														"nodeType": "VariableDeclaration",
														"scope": 1358,
														"src": "11781:14:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1280,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11781:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1283,
												"initialValue": {
													"hexValue": "30",
													"id": 1282,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "11798:1:7",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11781:18:7"
											},
											{
												"id": 1355,
												"nodeType": "UncheckedBlock",
												"src": "11809:533:7",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1288,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1286,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1284,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1275,
																	"src": "11837:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 1285,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11846:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "11837:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1287,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11852:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11837:16:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1298,
														"nodeType": "IfStatement",
														"src": "11833:98:7",
														"trueBody": {
															"id": 1297,
															"nodeType": "Block",
															"src": "11855:76:7",
															"statements": [
																{
																	"expression": {
																		"id": 1291,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1289,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1275,
																			"src": "11873:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 1290,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11883:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "11873:13:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1292,
																	"nodeType": "ExpressionStatement",
																	"src": "11873:13:7"
																},
																{
																	"expression": {
																		"id": 1295,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1293,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1281,
																			"src": "11904:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1294,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11914:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11904:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1296,
																	"nodeType": "ExpressionStatement",
																	"src": "11904:12:7"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1303,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1301,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1299,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1275,
																	"src": "11948:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 1300,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11957:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "11948:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1302,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11962:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11948:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1313,
														"nodeType": "IfStatement",
														"src": "11944:95:7",
														"trueBody": {
															"id": 1312,
															"nodeType": "Block",
															"src": "11965:74:7",
															"statements": [
																{
																	"expression": {
																		"id": 1306,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1304,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1275,
																			"src": "11983:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1305,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11993:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "11983:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1307,
																	"nodeType": "ExpressionStatement",
																	"src": "11983:12:7"
																},
																{
																	"expression": {
																		"id": 1310,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1308,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1281,
																			"src": "12013:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1309,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12023:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "12013:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1311,
																	"nodeType": "ExpressionStatement",
																	"src": "12013:11:7"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1318,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1316,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1314,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1275,
																	"src": "12056:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 1315,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12065:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "12056:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1317,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12070:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "12056:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1328,
														"nodeType": "IfStatement",
														"src": "12052:95:7",
														"trueBody": {
															"id": 1327,
															"nodeType": "Block",
															"src": "12073:74:7",
															"statements": [
																{
																	"expression": {
																		"id": 1321,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1319,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1275,
																			"src": "12091:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1320,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12101:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "12091:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1322,
																	"nodeType": "ExpressionStatement",
																	"src": "12091:12:7"
																},
																{
																	"expression": {
																		"id": 1325,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1323,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1281,
																			"src": "12121:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1324,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12131:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "12121:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1326,
																	"nodeType": "ExpressionStatement",
																	"src": "12121:11:7"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1333,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1331,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1329,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1275,
																	"src": "12164:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 1330,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12173:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "12164:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1332,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12178:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "12164:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1343,
														"nodeType": "IfStatement",
														"src": "12160:95:7",
														"trueBody": {
															"id": 1342,
															"nodeType": "Block",
															"src": "12181:74:7",
															"statements": [
																{
																	"expression": {
																		"id": 1336,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1334,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1275,
																			"src": "12199:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1335,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12209:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "12199:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1337,
																	"nodeType": "ExpressionStatement",
																	"src": "12199:12:7"
																},
																{
																	"expression": {
																		"id": 1340,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1338,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1281,
																			"src": "12229:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1339,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12239:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "12229:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1341,
																	"nodeType": "ExpressionStatement",
																	"src": "12229:11:7"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1348,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1346,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1344,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1275,
																	"src": "12272:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 1345,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12281:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "12272:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1347,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12285:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "12272:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1354,
														"nodeType": "IfStatement",
														"src": "12268:64:7",
														"trueBody": {
															"id": 1353,
															"nodeType": "Block",
															"src": "12288:44:7",
															"statements": [
																{
																	"expression": {
																		"id": 1351,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1349,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1281,
																			"src": "12306:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1350,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12316:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "12306:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1352,
																	"nodeType": "ExpressionStatement",
																	"src": "12306:11:7"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 1356,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1281,
													"src": "12358:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1279,
												"id": 1357,
												"nodeType": "Return",
												"src": "12351:13:7"
											}
										]
									},
									"documentation": {
										"id": 1273,
										"nodeType": "StructuredDocumentation",
										"src": "11463:240:7",
										"text": " @dev Return the log in base 256, rounded down, of a positive value.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 1359,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "11717:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1276,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1275,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11732:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1359,
												"src": "11724:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1274,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11724:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11723:15:7"
									},
									"returnParameters": {
										"id": 1279,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1278,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1359,
												"src": "11762:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1277,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11762:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11761:9:7"
									},
									"scope": 1399,
									"src": "11708:663:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1397,
										"nodeType": "Block",
										"src": "12608:174:7",
										"statements": [
											{
												"id": 1396,
												"nodeType": "UncheckedBlock",
												"src": "12618:158:7",
												"statements": [
													{
														"assignments": [
															1371
														],
														"declarations": [
															{
																"constant": false,
																"id": 1371,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "12650:6:7",
																"nodeType": "VariableDeclaration",
																"scope": 1396,
																"src": "12642:14:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1370,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "12642:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1375,
														"initialValue": {
															"arguments": [
																{
																	"id": 1373,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1362,
																	"src": "12666:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1372,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1359,
																	1398
																],
																"referencedDeclaration": 1359,
																"src": "12659:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1374,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12659:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "12642:30:7"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1394,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1376,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1371,
																"src": "12693:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1389,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$540",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 1380,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1377,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1365,
																					"src": "12703:8:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$540",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 1378,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 540,
																						"src": "12715:8:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$540_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 1379,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "12724:2:7",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 538,
																					"src": "12715:11:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$540",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "12703:23:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1388,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1386,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 1381,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "12730:1:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 1384,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 1382,
																									"name": "result",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1371,
																									"src": "12736:6:7",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "<<",
																								"rightExpression": {
																									"hexValue": "33",
																									"id": 1383,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "12746:1:7",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_3_by_1",
																										"typeString": "int_const 3"
																									},
																									"value": "3"
																								},
																								"src": "12736:11:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 1385,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "12735:13:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "12730:18:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1387,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1362,
																					"src": "12751:5:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12730:26:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "12703:53:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1391,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12763:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1392,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "12703:61:7",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1390,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12759:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1393,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "12702:63:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "12693:72:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1369,
														"id": 1395,
														"nodeType": "Return",
														"src": "12686:79:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1360,
										"nodeType": "StructuredDocumentation",
										"src": "12377:144:7",
										"text": " @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1398,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "12535:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1366,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1362,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12550:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1398,
												"src": "12542:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1361,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12542:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1365,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "12566:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1398,
												"src": "12557:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$540",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1364,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1363,
														"name": "Rounding",
														"nameLocations": [
															"12557:8:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 540,
														"src": "12557:8:7"
													},
													"referencedDeclaration": 540,
													"src": "12557:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$540",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12541:34:7"
									},
									"returnParameters": {
										"id": 1369,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1368,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1398,
												"src": "12599:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1367,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12599:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12598:9:7"
									},
									"scope": 1399,
									"src": "12526:256:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1400,
							"src": "202:12582:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "103:12682:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SignedMath.sol",
					"exportedSymbols": {
						"SignedMath": [
							1504
						]
					},
					"id": 1505,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1401,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "109:23:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SignedMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1402,
								"nodeType": "StructuredDocumentation",
								"src": "134:80:8",
								"text": " @dev Standard signed math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 1504,
							"linearizedBaseContracts": [
								1504
							],
							"name": "SignedMath",
							"nameLocation": "223:10:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1419,
										"nodeType": "Block",
										"src": "375:37:8",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 1414,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1412,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1405,
															"src": "392:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 1413,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1407,
															"src": "396:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "392:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1416,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1407,
														"src": "404:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 1417,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "392:13:8",
													"trueExpression": {
														"id": 1415,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1405,
														"src": "400:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 1411,
												"id": 1418,
												"nodeType": "Return",
												"src": "385:20:8"
											}
										]
									},
									"documentation": {
										"id": 1403,
										"nodeType": "StructuredDocumentation",
										"src": "240:66:8",
										"text": " @dev Returns the largest of two signed numbers."
									},
									"id": 1420,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "320:3:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1408,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1405,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "331:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1420,
												"src": "324:8:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1404,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "324:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1407,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "341:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1420,
												"src": "334:8:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1406,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "334:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "323:20:8"
									},
									"returnParameters": {
										"id": 1411,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1410,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1420,
												"src": "367:6:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1409,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "367:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "366:8:8"
									},
									"scope": 1504,
									"src": "311:101:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1437,
										"nodeType": "Block",
										"src": "554:37:8",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 1432,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1430,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1423,
															"src": "571:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 1431,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1425,
															"src": "575:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "571:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1434,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1425,
														"src": "583:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 1435,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "571:13:8",
													"trueExpression": {
														"id": 1433,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1423,
														"src": "579:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 1429,
												"id": 1436,
												"nodeType": "Return",
												"src": "564:20:8"
											}
										]
									},
									"documentation": {
										"id": 1421,
										"nodeType": "StructuredDocumentation",
										"src": "418:67:8",
										"text": " @dev Returns the smallest of two signed numbers."
									},
									"id": 1438,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "499:3:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1426,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1423,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "510:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1438,
												"src": "503:8:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1422,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "503:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1425,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "520:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1438,
												"src": "513:8:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1424,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "513:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "502:20:8"
									},
									"returnParameters": {
										"id": 1429,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1428,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1438,
												"src": "546:6:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1427,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "546:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "545:8:8"
									},
									"scope": 1504,
									"src": "490:101:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1481,
										"nodeType": "Block",
										"src": "796:162:8",
										"statements": [
											{
												"assignments": [
													1449
												],
												"declarations": [
													{
														"constant": false,
														"id": 1449,
														"mutability": "mutable",
														"name": "x",
														"nameLocation": "865:1:8",
														"nodeType": "VariableDeclaration",
														"scope": 1481,
														"src": "858:8:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 1448,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "858:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1462,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 1461,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 1452,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1450,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1441,
																	"src": "870:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 1451,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1443,
																	"src": "874:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "870:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 1453,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "869:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 1459,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 1456,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1454,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1441,
																				"src": "881:1:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 1455,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1443,
																				"src": "885:1:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "881:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 1457,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "880:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1458,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "891:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "880:12:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 1460,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "879:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "869:24:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "858:35:8"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 1479,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1463,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1449,
														"src": "910:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 1477,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1471,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 1468,
																						"name": "x",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1449,
																						"src": "930:1:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					],
																					"id": 1467,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "922:7:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 1466,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "922:7:8",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 1469,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "922:10:8",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">>",
																			"rightExpression": {
																				"hexValue": "323535",
																				"id": 1470,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "936:3:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_255_by_1",
																					"typeString": "int_const 255"
																				},
																				"value": "255"
																			},
																			"src": "922:17:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1465,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "915:6:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int256_$",
																			"typeString": "type(int256)"
																		},
																		"typeName": {
																			"id": 1464,
																			"name": "int256",
																			"nodeType": "ElementaryTypeName",
																			"src": "915:6:8",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1472,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "915:25:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 1475,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1473,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1441,
																				"src": "944:1:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 1474,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1443,
																				"src": "948:1:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "944:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 1476,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "943:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "915:35:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 1478,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "914:37:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "910:41:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 1447,
												"id": 1480,
												"nodeType": "Return",
												"src": "903:48:8"
											}
										]
									},
									"documentation": {
										"id": 1439,
										"nodeType": "StructuredDocumentation",
										"src": "597:126:8",
										"text": " @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."
									},
									"id": 1482,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "737:7:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1444,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1441,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "752:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1482,
												"src": "745:8:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1440,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "745:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1443,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "762:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1482,
												"src": "755:8:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1442,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "755:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "744:20:8"
									},
									"returnParameters": {
										"id": 1447,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1446,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1482,
												"src": "788:6:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1445,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "788:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "787:8:8"
									},
									"scope": 1504,
									"src": "728:230:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1502,
										"nodeType": "Block",
										"src": "1102:158:8",
										"statements": [
											{
												"id": 1501,
												"nodeType": "UncheckedBlock",
												"src": "1112:142:8",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 1494,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1492,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1485,
																			"src": "1227:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1493,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1232:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1227:6:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"id": 1497,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "-",
																		"prefix": true,
																		"src": "1240:2:8",
																		"subExpression": {
																			"id": 1496,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1485,
																			"src": "1241:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"id": 1498,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "1227:15:8",
																	"trueExpression": {
																		"id": 1495,
																		"name": "n",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1485,
																		"src": "1236:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																],
																"id": 1491,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1219:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 1490,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1219:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 1499,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1219:24:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1489,
														"id": 1500,
														"nodeType": "Return",
														"src": "1212:31:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1483,
										"nodeType": "StructuredDocumentation",
										"src": "964:78:8",
										"text": " @dev Returns the absolute unsigned value of a signed value."
									},
									"id": 1503,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "abs",
									"nameLocation": "1056:3:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1486,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1485,
												"mutability": "mutable",
												"name": "n",
												"nameLocation": "1067:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1503,
												"src": "1060:8:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1484,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1060:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1059:10:8"
									},
									"returnParameters": {
										"id": 1489,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1488,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1503,
												"src": "1093:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1487,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1093:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1092:9:8"
									},
									"scope": 1504,
									"src": "1047:213:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1505,
							"src": "215:1047:8",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "109:1154:8"
				},
				"id": 8
			},
			"v2/contracts/SoulSocietySBT.sol": {
				"ast": {
					"absolutePath": "v2/contracts/SoulSocietySBT.sol",
					"exportedSymbols": {
						"Context": [
							268
						],
						"ERC165": [
							521
						],
						"IERC165": [
							533
						],
						"IERC721": [
							228
						],
						"IERC721Receiver": [
							246
						],
						"ISoulSocietyEnumableSBT": [
							2439
						],
						"ISoulSocietySBT": [
							2568
						],
						"ISoulSocietySBTErrors": [
							2620
						],
						"ISoulSocietySBTMetadata": [
							2647
						],
						"Ownable": [
							112
						],
						"SoulSocietySBT": [
							2403
						],
						"Strings": [
							497
						]
					},
					"id": 2404,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1506,
							"literals": [
								"solidity",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:9"
						},
						{
							"absolutePath": "v2/contracts/interfaces/ISoulSocietyEnumerableSBT.sol",
							"file": "v2/contracts/interfaces/ISoulSocietyEnumerableSBT.sol",
							"id": 1507,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2404,
							"sourceUnit": 2440,
							"src": "57:63:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "v2/contracts/interfaces/ISoulSocietySBTMetadata.sol",
							"file": "v2/contracts/interfaces/ISoulSocietySBTMetadata.sol",
							"id": 1508,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2404,
							"sourceUnit": 2648,
							"src": "121:61:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "v2/contracts/interfaces/ISoulSocietySBTErrors.sol",
							"file": "v2/contracts/interfaces/ISoulSocietySBTErrors.sol",
							"id": 1509,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2404,
							"sourceUnit": 2621,
							"src": "183:59:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 1510,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2404,
							"sourceUnit": 113,
							"src": "243:52:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
							"file": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
							"id": 1511,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2404,
							"sourceUnit": 247,
							"src": "296:66:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
							"file": "@openzeppelin/contracts/utils/Strings.sol",
							"id": 1513,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2404,
							"sourceUnit": 498,
							"src": "363:66:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1512,
										"name": "Strings",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 497,
										"src": "371:7:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"id": 1515,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2404,
							"sourceUnit": 229,
							"src": "430:73:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1514,
										"name": "IERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 228,
										"src": "438:7:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"id": 1518,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2404,
							"sourceUnit": 522,
							"src": "504:87:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1516,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 533,
										"src": "512:7:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								},
								{
									"foreign": {
										"id": 1517,
										"name": "ERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 521,
										"src": "521:6:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1520,
										"name": "ISoulSocietySBT",
										"nameLocations": [
											"818:15:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2568,
										"src": "818:15:9"
									},
									"id": 1521,
									"nodeType": "InheritanceSpecifier",
									"src": "818:15:9"
								},
								{
									"baseName": {
										"id": 1522,
										"name": "ISoulSocietySBTMetadata",
										"nameLocations": [
											"835:23:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2647,
										"src": "835:23:9"
									},
									"id": 1523,
									"nodeType": "InheritanceSpecifier",
									"src": "835:23:9"
								},
								{
									"baseName": {
										"id": 1524,
										"name": "ISoulSocietySBTErrors",
										"nameLocations": [
											"860:21:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2620,
										"src": "860:21:9"
									},
									"id": 1525,
									"nodeType": "InheritanceSpecifier",
									"src": "860:21:9"
								},
								{
									"baseName": {
										"id": 1526,
										"name": "IERC721",
										"nameLocations": [
											"884:7:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 228,
										"src": "884:7:9"
									},
									"id": 1527,
									"nodeType": "InheritanceSpecifier",
									"src": "884:7:9"
								},
								{
									"baseName": {
										"id": 1528,
										"name": "ERC165",
										"nameLocations": [
											"893:6:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 521,
										"src": "893:6:9"
									},
									"id": 1529,
									"nodeType": "InheritanceSpecifier",
									"src": "893:6:9"
								},
								{
									"baseName": {
										"id": 1530,
										"name": "Ownable",
										"nameLocations": [
											"901:7:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 112,
										"src": "901:7:9"
									},
									"id": 1531,
									"nodeType": "InheritanceSpecifier",
									"src": "901:7:9"
								}
							],
							"canonicalName": "SoulSocietySBT",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1519,
								"nodeType": "StructuredDocumentation",
								"src": "594:197:9",
								"text": "@title Implementation contract of Lightweight growth type SBT developed by SoulSociety\n @notice As an implementation of ISoulSocietyLightweightEnumableSTB, only the owner can modify growth."
							},
							"fullyImplemented": true,
							"id": 2403,
							"linearizedBaseContracts": [
								2403,
								112,
								268,
								521,
								228,
								533,
								2620,
								2647,
								2568
							],
							"name": "SoulSocietySBT",
							"nameLocation": "800:14:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1534,
									"libraryName": {
										"id": 1532,
										"name": "Strings",
										"nameLocations": [
											"922:7:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 497,
										"src": "922:7:9"
									},
									"nodeType": "UsingForDirective",
									"src": "916:26:9",
									"typeName": {
										"id": 1533,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "934:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": true,
									"id": 1537,
									"mutability": "constant",
									"name": "_name",
									"nameLocation": "990:5:9",
									"nodeType": "VariableDeclaration",
									"scope": 2403,
									"src": "966:40:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 1535,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "966:6:9",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "484f4e534254",
										"id": 1536,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "998:8:9",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_40e65b95cb10171f671107a51277972938f63684a111d2f28d03e50a8e1318a4",
											"typeString": "literal_string \"HONSBT\""
										},
										"value": "HONSBT"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1540,
									"mutability": "constant",
									"name": "_symbol",
									"nameLocation": "1057:7:9",
									"nodeType": "VariableDeclaration",
									"scope": 2403,
									"src": "1033:42:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 1538,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1033:6:9",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "484f4e534254",
										"id": 1539,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1067:8:9",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_40e65b95cb10171f671107a51277972938f63684a111d2f28d03e50a8e1318a4",
											"typeString": "literal_string \"HONSBT\""
										},
										"value": "HONSBT"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1542,
									"mutability": "mutable",
									"name": "_uri",
									"nameLocation": "1119:4:9",
									"nodeType": "VariableDeclaration",
									"scope": 2403,
									"src": "1104:19:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 1541,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1104:6:9",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1544,
									"mutability": "mutable",
									"name": "_totalUser",
									"nameLocation": "1186:10:9",
									"nodeType": "VariableDeclaration",
									"scope": 2403,
									"src": "1170:26:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1543,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1170:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1546,
									"mutability": "mutable",
									"name": "_totalCount",
									"nameLocation": "1253:11:9",
									"nodeType": "VariableDeclaration",
									"scope": 2403,
									"src": "1237:27:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1545,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1237:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1550,
									"mutability": "mutable",
									"name": "_owners",
									"nameLocation": "1351:7:9",
									"nodeType": "VariableDeclaration",
									"scope": 2403,
									"src": "1315:43:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 1549,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1547,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1323:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1315:27:9",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1548,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1334:7:9",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1554,
									"mutability": "mutable",
									"name": "_tokenTypes",
									"nameLocation": "1442:11:9",
									"nodeType": "VariableDeclaration",
									"scope": 2403,
									"src": "1406:47:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
										"typeString": "mapping(uint256 => uint256)"
									},
									"typeName": {
										"id": 1553,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1551,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1414:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1406:27:9",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
											"typeString": "mapping(uint256 => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1552,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1425:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1558,
									"mutability": "mutable",
									"name": "_tokenGrowths",
									"nameLocation": "1541:13:9",
									"nodeType": "VariableDeclaration",
									"scope": 2403,
									"src": "1505:49:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
										"typeString": "mapping(uint256 => uint256)"
									},
									"typeName": {
										"id": 1557,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1555,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1513:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1505:27:9",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
											"typeString": "mapping(uint256 => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1556,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1524:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1562,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1640:9:9",
									"nodeType": "VariableDeclaration",
									"scope": 2403,
									"src": "1604:45:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1561,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1559,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1612:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1604:27:9",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1560,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1623:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1566,
									"mutability": "mutable",
									"name": "_userProtects",
									"nameLocation": "1740:13:9",
									"nodeType": "VariableDeclaration",
									"scope": 2403,
									"src": "1707:46:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 1565,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1563,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1715:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1707:24:9",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1564,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "1726:4:9",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1572,
									"mutability": "mutable",
									"name": "_ownedTokens",
									"nameLocation": "1869:12:9",
									"nodeType": "VariableDeclaration",
									"scope": 2403,
									"src": "1813:68:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(uint256 => uint256))"
									},
									"typeName": {
										"id": 1571,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1567,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1821:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1813:47:9",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(uint256 => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1570,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 1568,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1840:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"nodeType": "Mapping",
											"src": "1832:27:9",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
												"typeString": "mapping(uint256 => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 1569,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1851:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1577,
									"mutability": "constant",
									"name": "_ERC721_RECEIVED",
									"nameLocation": "1960:16:9",
									"nodeType": "VariableDeclaration",
									"scope": 2403,
									"src": "1936:84:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes4",
										"typeString": "bytes4"
									},
									"typeName": {
										"id": 1573,
										"name": "bytes4",
										"nodeType": "ElementaryTypeName",
										"src": "1936:6:9",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes4",
											"typeString": "bytes4"
										}
									},
									"value": {
										"expression": {
											"expression": {
												"id": 1574,
												"name": "IERC721Receiver",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 246,
												"src": "1979:15:9",
												"typeDescriptions": {
													"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$246_$",
													"typeString": "type(contract IERC721Receiver)"
												}
											},
											"id": 1575,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"memberLocation": "1995:16:9",
											"memberName": "onERC721Received",
											"nodeType": "MemberAccess",
											"referencedDeclaration": 245,
											"src": "1979:32:9",
											"typeDescriptions": {
												"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
												"typeString": "function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"
											}
										},
										"id": 1576,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"memberLocation": "2012:8:9",
										"memberName": "selector",
										"nodeType": "MemberAccess",
										"src": "1979:41:9",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes4",
											"typeString": "bytes4"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 1596,
										"nodeType": "Block",
										"src": "2059:110:9",
										"statements": [
											{
												"expression": {
													"id": 1584,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1582,
														"name": "_uri",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1542,
														"src": "2069:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1583,
														"name": "uri_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1579,
														"src": "2076:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2069:11:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 1585,
												"nodeType": "ExpressionStatement",
												"src": "2069:11:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1587,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2112:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1588,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2116:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2112:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1589,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "2124:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1590,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2130:9:9",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "2124:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1591,
															"name": "_name",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1537,
															"src": "2141:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"id": 1592,
															"name": "_symbol",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1540,
															"src": "2148:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"id": 1593,
															"name": "_uri",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1542,
															"src": "2157:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage",
																"typeString": "string storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_string_storage",
																"typeString": "string storage ref"
															}
														],
														"id": 1586,
														"name": "ContractCreated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2454,
														"src": "2096:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,string memory,string memory,string memory)"
														}
													},
													"id": 1594,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2096:66:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1595,
												"nodeType": "EmitStatement",
												"src": "2091:71:9"
											}
										]
									},
									"id": 1597,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1580,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1579,
												"mutability": "mutable",
												"name": "uri_",
												"nameLocation": "2053:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1597,
												"src": "2039:18:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1578,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2039:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2038:20:9"
									},
									"returnParameters": {
										"id": 1581,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2059:0:9"
									},
									"scope": 2403,
									"src": "2027:142:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										520,
										532
									],
									"body": {
										"id": 1620,
										"nodeType": "Block",
										"src": "2344:129:9",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1618,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 1613,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1608,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1600,
															"src": "2374:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1610,
																		"name": "IERC721",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 228,
																		"src": "2394:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IERC721_$228_$",
																			"typeString": "type(contract IERC721)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_contract$_IERC721_$228_$",
																			"typeString": "type(contract IERC721)"
																		}
																	],
																	"id": 1609,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "2389:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1611,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2389:13:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721_$228",
																	"typeString": "type(contract IERC721)"
																}
															},
															"id": 1612,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "2403:11:9",
															"memberName": "interfaceId",
															"nodeType": "MemberAccess",
															"src": "2389:25:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "2374:40:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 1616,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1600,
																"src": "2454:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 1614,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "2430:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_SoulSocietySBT_$2403_$",
																	"typeString": "type(contract super SoulSocietySBT)"
																}
															},
															"id": 1615,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2436:17:9",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 520,
															"src": "2430:23:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 1617,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2430:36:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2374:92:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1607,
												"id": 1619,
												"nodeType": "Return",
												"src": "2354:112:9"
											}
										]
									},
									"documentation": {
										"id": 1598,
										"nodeType": "StructuredDocumentation",
										"src": "2175:56:9",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 1621,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "2245:17:9",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1604,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 1602,
												"name": "ERC165",
												"nameLocations": [
													"2312:6:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 521,
												"src": "2312:6:9"
											},
											{
												"id": 1603,
												"name": "IERC165",
												"nameLocations": [
													"2320:7:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 533,
												"src": "2320:7:9"
											}
										],
										"src": "2303:25:9"
									},
									"parameters": {
										"id": 1601,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1600,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "2270:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 1621,
												"src": "2263:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1599,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2263:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2262:20:9"
									},
									"returnParameters": {
										"id": 1607,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1606,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1621,
												"src": "2338:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1605,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2338:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2337:6:9"
									},
									"scope": 2403,
									"src": "2236:237:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2632
									],
									"body": {
										"id": 1628,
										"nodeType": "Block",
										"src": "2794:29:9",
										"statements": [
											{
												"expression": {
													"id": 1626,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1537,
													"src": "2811:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1625,
												"id": 1627,
												"nodeType": "Return",
												"src": "2804:12:9"
											}
										]
									},
									"functionSelector": "06fdde03",
									"id": 1629,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2741:4:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1622,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2745:2:9"
									},
									"returnParameters": {
										"id": 1625,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1624,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1629,
												"src": "2779:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1623,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2779:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2778:15:9"
									},
									"scope": 2403,
									"src": "2732:91:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										2638
									],
									"body": {
										"id": 1636,
										"nodeType": "Block",
										"src": "2913:31:9",
										"statements": [
											{
												"expression": {
													"id": 1634,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1540,
													"src": "2930:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1633,
												"id": 1635,
												"nodeType": "Return",
												"src": "2923:14:9"
											}
										]
									},
									"functionSelector": "95d89b41",
									"id": 1637,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2858:6:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1630,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2864:2:9"
									},
									"returnParameters": {
										"id": 1633,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1632,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1637,
												"src": "2898:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1631,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2898:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2897:15:9"
									},
									"scope": 2403,
									"src": "2849:95:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										2646
									],
									"body": {
										"id": 1675,
										"nodeType": "Block",
										"src": "3128:238:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1646,
															"name": "tokenId_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1640,
															"src": "3200:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1645,
														"name": "_isProtectedTokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1843,
														"src": "3180:19:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$__$",
															"typeString": "function (uint256) view"
														}
													},
													"id": 1647,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3180:29:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1648,
												"nodeType": "ExpressionStatement",
												"src": "3180:29:9"
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1655,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1651,
																		"name": "_uri",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1542,
																		"src": "3237:4:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_storage",
																			"typeString": "string storage ref"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_storage",
																			"typeString": "string storage ref"
																		}
																	],
																	"id": 1650,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3231:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1649,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3231:5:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 1652,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3231:11:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_storage_ptr",
																	"typeString": "bytes storage pointer"
																}
															},
															"id": 1653,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3243:6:9",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3231:18:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 1654,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3252:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "3231:22:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "",
														"id": 1672,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3357:2:9",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
															"typeString": "literal_string \"\""
														},
														"value": ""
													},
													"id": 1673,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "3231:128:9",
													"trueExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1660,
																		"name": "_uri",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1542,
																		"src": "3280:4:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_storage",
																			"typeString": "string storage ref"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"expression": {
																				"id": 1661,
																				"name": "tokenId_",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1640,
																				"src": "3285:8:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1662,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "3294:8:9",
																			"memberName": "toString",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 327,
																			"src": "3285:17:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (string memory)"
																			}
																		},
																		"id": 1663,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3285:19:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	},
																	{
																		"hexValue": "3f746f6b656e547970653d",
																		"id": 1664,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3305:13:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_1b93835a866fd99c0445b12e9173965af6f17da5913478ef85289575b751276a",
																			"typeString": "literal_string \"?tokenType=\""
																		},
																		"value": "?tokenType="
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"expression": {
																				"baseExpression": {
																					"id": 1665,
																					"name": "_tokenTypes",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1554,
																					"src": "3320:11:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																						"typeString": "mapping(uint256 => uint256)"
																					}
																				},
																				"id": 1667,
																				"indexExpression": {
																					"id": 1666,
																					"name": "tokenId_",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1640,
																					"src": "3332:8:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "3320:21:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1668,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "3342:8:9",
																			"memberName": "toString",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 327,
																			"src": "3320:30:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (string memory)"
																			}
																		},
																		"id": 1669,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3320:32:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_storage",
																			"typeString": "string storage ref"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_1b93835a866fd99c0445b12e9173965af6f17da5913478ef85289575b751276a",
																			"typeString": "literal_string \"?tokenType=\""
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"expression": {
																		"id": 1658,
																		"name": "abi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967295,
																		"src": "3263:3:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_abi",
																			"typeString": "abi"
																		}
																	},
																	"id": 1659,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "3267:12:9",
																	"memberName": "encodePacked",
																	"nodeType": "MemberAccess",
																	"src": "3263:16:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function () pure returns (bytes memory)"
																	}
																},
																"id": 1670,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3263:90:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 1657,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3256:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																"typeString": "type(string storage pointer)"
															},
															"typeName": {
																"id": 1656,
																"name": "string",
																"nodeType": "ElementaryTypeName",
																"src": "3256:6:9",
																"typeDescriptions": {}
															}
														},
														"id": 1671,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3256:98:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1644,
												"id": 1674,
												"nodeType": "Return",
												"src": "3224:135:9"
											}
										]
									},
									"documentation": {
										"id": 1638,
										"nodeType": "StructuredDocumentation",
										"src": "2950:90:9",
										"text": " @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."
									},
									"functionSelector": "c87b56dd",
									"id": 1676,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "3054:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1641,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1640,
												"mutability": "mutable",
												"name": "tokenId_",
												"nameLocation": "3071:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1676,
												"src": "3063:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1639,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3063:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3062:18:9"
									},
									"returnParameters": {
										"id": 1644,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1643,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1676,
												"src": "3113:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1642,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3113:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3112:15:9"
									},
									"scope": 2403,
									"src": "3045:321:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										2503
									],
									"body": {
										"id": 1697,
										"nodeType": "Block",
										"src": "3461:105:9",
										"statements": [
											{
												"expression": {
													"id": 1687,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1685,
														"name": "_uri",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1542,
														"src": "3471:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1686,
														"name": "tokenURI_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1678,
														"src": "3478:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "3471:16:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 1688,
												"nodeType": "ExpressionStatement",
												"src": "3471:16:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1690,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3515:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1691,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3519:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3515:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1692,
															"name": "tokenURI_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1678,
															"src": "3527:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1689,
														"name": "SetTokenURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2460,
														"src": "3503:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (address,string memory)"
														}
													},
													"id": 1693,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3503:34:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1694,
												"nodeType": "EmitStatement",
												"src": "3498:39:9"
											},
											{
												"expression": {
													"id": 1695,
													"name": "_uri",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1542,
													"src": "3555:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 1684,
												"id": 1696,
												"nodeType": "Return",
												"src": "3548:11:9"
											}
										]
									},
									"functionSelector": "e0df5b6f",
									"id": 1698,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1681,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1680,
												"name": "onlyOwner",
												"nameLocations": [
													"3428:9:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "3428:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "3428:9:9"
										}
									],
									"name": "setTokenURI",
									"nameLocation": "3382:11:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1679,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1678,
												"mutability": "mutable",
												"name": "tokenURI_",
												"nameLocation": "3408:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1698,
												"src": "3394:23:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1677,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3394:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3393:25:9"
									},
									"returnParameters": {
										"id": 1684,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1683,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1698,
												"src": "3446:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1682,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3446:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3445:15:9"
									},
									"scope": 2403,
									"src": "3373:193:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										2496
									],
									"body": {
										"id": 1705,
										"nodeType": "Block",
										"src": "3624:34:9",
										"statements": [
											{
												"expression": {
													"id": 1703,
													"name": "_totalUser",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1544,
													"src": "3641:10:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1702,
												"id": 1704,
												"nodeType": "Return",
												"src": "3634:17:9"
											}
										]
									},
									"functionSelector": "e1604b70",
									"id": 1706,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalUser",
									"nameLocation": "3581:9:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1699,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3590:2:9"
									},
									"returnParameters": {
										"id": 1702,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1701,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1706,
												"src": "3615:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1700,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3615:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3614:9:9"
									},
									"scope": 2403,
									"src": "3572:86:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2491
									],
									"body": {
										"id": 1713,
										"nodeType": "Block",
										"src": "3718:35:9",
										"statements": [
											{
												"expression": {
													"id": 1711,
													"name": "_totalCount",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1546,
													"src": "3735:11:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1710,
												"id": 1712,
												"nodeType": "Return",
												"src": "3728:18:9"
											}
										]
									},
									"functionSelector": "18160ddd",
									"id": 1714,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3673:11:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1707,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3684:2:9"
									},
									"returnParameters": {
										"id": 1710,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1709,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1714,
												"src": "3709:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1708,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3709:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3708:9:9"
									},
									"scope": 2403,
									"src": "3664:89:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2533
									],
									"body": {
										"id": 1729,
										"nodeType": "Block",
										"src": "3830:86:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1722,
															"name": "tokenId_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1716,
															"src": "3861:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1721,
														"name": "_isProtectedTokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1843,
														"src": "3841:19:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$__$",
															"typeString": "function (uint256) view"
														}
													},
													"id": 1723,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3841:29:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1724,
												"nodeType": "ExpressionStatement",
												"src": "3841:29:9"
											},
											{
												"expression": {
													"baseExpression": {
														"id": 1725,
														"name": "_tokenTypes",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1554,
														"src": "3888:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
															"typeString": "mapping(uint256 => uint256)"
														}
													},
													"id": 1727,
													"indexExpression": {
														"id": 1726,
														"name": "tokenId_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1716,
														"src": "3900:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3888:21:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1720,
												"id": 1728,
												"nodeType": "Return",
												"src": "3881:28:9"
											}
										]
									},
									"functionSelector": "76aed2e1",
									"id": 1730,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTokenType",
									"nameLocation": "3769:12:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1717,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1716,
												"mutability": "mutable",
												"name": "tokenId_",
												"nameLocation": "3790:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1730,
												"src": "3782:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1715,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3782:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3781:18:9"
									},
									"returnParameters": {
										"id": 1720,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1719,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1730,
												"src": "3821:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1718,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3821:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3820:9:9"
									},
									"scope": 2403,
									"src": "3760:156:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2557
									],
									"body": {
										"id": 1764,
										"nodeType": "Block",
										"src": "4214:214:9",
										"statements": [
											{
												"condition": {
													"id": 1744,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4228:29:9",
													"subExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1742,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"expression": {
																				"id": 1738,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "4241:3:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 1739,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "4245:6:9",
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "4241:10:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1737,
																		"name": "_balanceOf",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1902,
																		"src": "4230:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																			"typeString": "function (address) view returns (uint256)"
																		}
																	},
																	"id": 1740,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4230:22:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1741,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4255:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "4230:26:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 1743,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "4229:28:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1751,
												"nodeType": "IfStatement",
												"src": "4224:105:9",
												"trueBody": {
													"id": 1750,
													"nodeType": "Block",
													"src": "4259:70:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1746,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "4307:3:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1747,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4311:6:9",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "4307:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1745,
																	"name": "SoulSocietySBTInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2575,
																	"src": "4280:26:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1748,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4280:38:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1749,
															"nodeType": "RevertStatement",
															"src": "4273:45:9"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1757,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1752,
															"name": "_userProtects",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1566,
															"src": "4339:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1755,
														"indexExpression": {
															"expression": {
																"id": 1753,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4353:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1754,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4357:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4353:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4339:25:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1756,
														"name": "isProtected_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1732,
														"src": "4367:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4339:40:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1758,
												"nodeType": "ExpressionStatement",
												"src": "4339:40:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1760,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4410:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1761,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4414:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4410:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1759,
														"name": "getProtected",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1777,
														"src": "4397:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
															"typeString": "function (address) view returns (bool)"
														}
													},
													"id": 1762,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4397:24:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1736,
												"id": 1763,
												"nodeType": "Return",
												"src": "4390:31:9"
											}
										]
									},
									"functionSelector": "1c02bc31",
									"id": 1765,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setProtected",
									"nameLocation": "4159:12:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1733,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1732,
												"mutability": "mutable",
												"name": "isProtected_",
												"nameLocation": "4177:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 1765,
												"src": "4172:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1731,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4172:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4171:19:9"
									},
									"returnParameters": {
										"id": 1736,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1735,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1765,
												"src": "4208:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1734,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4208:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4207:6:9"
									},
									"scope": 2403,
									"src": "4150:278:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1776,
										"nodeType": "Block",
										"src": "4495:42:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1773,
															"name": "to_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1767,
															"src": "4526:3:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1772,
														"name": "_getProtected",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1789,
														"src": "4512:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
															"typeString": "function (address) view returns (bool)"
														}
													},
													"id": 1774,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4512:18:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1771,
												"id": 1775,
												"nodeType": "Return",
												"src": "4505:25:9"
											}
										]
									},
									"functionSelector": "1f8eb677",
									"id": 1777,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getProtected",
									"nameLocation": "4443:12:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1768,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1767,
												"mutability": "mutable",
												"name": "to_",
												"nameLocation": "4464:3:9",
												"nodeType": "VariableDeclaration",
												"scope": 1777,
												"src": "4456:11:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1766,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4456:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4455:13:9"
									},
									"returnParameters": {
										"id": 1771,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1770,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1777,
												"src": "4489:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1769,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4489:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4488:6:9"
									},
									"scope": 2403,
									"src": "4434:103:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1788,
										"nodeType": "Block",
										"src": "4608:99:9",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 1784,
														"name": "_userProtects",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1566,
														"src": "4682:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 1786,
													"indexExpression": {
														"id": 1785,
														"name": "to_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1779,
														"src": "4696:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4682:18:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1783,
												"id": 1787,
												"nodeType": "Return",
												"src": "4675:25:9"
											}
										]
									},
									"id": 1789,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getProtected",
									"nameLocation": "4552:13:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1780,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1779,
												"mutability": "mutable",
												"name": "to_",
												"nameLocation": "4574:3:9",
												"nodeType": "VariableDeclaration",
												"scope": 1789,
												"src": "4566:11:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1778,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4566:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4565:13:9"
									},
									"returnParameters": {
										"id": 1783,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1782,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1789,
												"src": "4602:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1781,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4602:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4601:6:9"
									},
									"scope": 2403,
									"src": "4543:164:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										2550
									],
									"body": {
										"id": 1800,
										"nodeType": "Block",
										"src": "4776:41:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1797,
															"name": "to_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1791,
															"src": "4806:3:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1796,
														"name": "_isProtected",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1821,
														"src": "4793:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
															"typeString": "function (address) view returns (bool)"
														}
													},
													"id": 1798,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4793:17:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1795,
												"id": 1799,
												"nodeType": "Return",
												"src": "4786:24:9"
											}
										]
									},
									"functionSelector": "ce35de95",
									"id": 1801,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isProtected",
									"nameLocation": "4722:11:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1792,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1791,
												"mutability": "mutable",
												"name": "to_",
												"nameLocation": "4742:3:9",
												"nodeType": "VariableDeclaration",
												"scope": 1801,
												"src": "4734:11:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1790,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4734:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4733:13:9"
									},
									"returnParameters": {
										"id": 1795,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1794,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1801,
												"src": "4770:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1793,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4770:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4769:6:9"
									},
									"scope": 2403,
									"src": "4713:104:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1820,
										"nodeType": "Block",
										"src": "4887:140:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1812,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 1808,
															"name": "_userProtects",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1566,
															"src": "4909:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1810,
														"indexExpression": {
															"id": 1809,
															"name": "to_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1803,
															"src": "4923:3:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4909:18:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "74727565",
														"id": 1811,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4931:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "4909:26:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1817,
												"nodeType": "IfStatement",
												"src": "4905:84:9",
												"trueBody": {
													"errorCall": {
														"arguments": [
															{
																"id": 1814,
																"name": "to_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1803,
																"src": "4985:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1813,
															"name": "SoulSocietySBTProtectedOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2615,
															"src": "4956:28:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																"typeString": "function (address) pure"
															}
														},
														"id": 1815,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4956:33:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1816,
													"nodeType": "RevertStatement",
													"src": "4949:40:9"
												}
											},
											{
												"expression": {
													"hexValue": "66616c7365",
													"id": 1818,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5015:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "false"
												},
												"functionReturnParameters": 1807,
												"id": 1819,
												"nodeType": "Return",
												"src": "5008:12:9"
											}
										]
									},
									"id": 1821,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isProtected",
									"nameLocation": "4832:12:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1804,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1803,
												"mutability": "mutable",
												"name": "to_",
												"nameLocation": "4853:3:9",
												"nodeType": "VariableDeclaration",
												"scope": 1821,
												"src": "4845:11:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1802,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4845:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4844:13:9"
									},
									"returnParameters": {
										"id": 1807,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1806,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1821,
												"src": "4881:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1805,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4881:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4880:6:9"
									},
									"scope": 2403,
									"src": "4823:204:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1842,
										"nodeType": "Block",
										"src": "5094:241:9",
										"statements": [
											{
												"condition": {
													"id": 1829,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "5195:18:9",
													"subExpression": {
														"arguments": [
															{
																"id": 1827,
																"name": "tokenId_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1823,
																"src": "5204:8:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1826,
															"name": "_exists",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2211,
															"src": "5196:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (uint256) view returns (bool)"
															}
														},
														"id": 1828,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5196:17:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1835,
												"nodeType": "IfStatement",
												"src": "5191:96:9",
												"trueBody": {
													"id": 1834,
													"nodeType": "Block",
													"src": "5215:72:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1831,
																		"name": "tokenId_",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1823,
																		"src": "5267:8:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1830,
																	"name": "SoulSocietySBTNonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2580,
																	"src": "5236:30:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) pure"
																	}
																},
																"id": 1832,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5236:40:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1833,
															"nodeType": "RevertStatement",
															"src": "5229:47:9"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"id": 1837,
																"name": "_owners",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1550,
																"src": "5310:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																	"typeString": "mapping(uint256 => address)"
																}
															},
															"id": 1839,
															"indexExpression": {
																"id": 1838,
																"name": "tokenId_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1823,
																"src": "5318:8:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5310:17:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1836,
														"name": "_isProtected",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1821,
														"src": "5297:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
															"typeString": "function (address) view returns (bool)"
														}
													},
													"id": 1840,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5297:31:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1841,
												"nodeType": "ExpressionStatement",
												"src": "5297:31:9"
											}
										]
									},
									"id": 1843,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isProtectedTokenId",
									"nameLocation": "5042:19:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1824,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1823,
												"mutability": "mutable",
												"name": "tokenId_",
												"nameLocation": "5070:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1843,
												"src": "5062:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1822,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5062:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5061:18:9"
									},
									"returnParameters": {
										"id": 1825,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5094:0:9"
									},
									"scope": 2403,
									"src": "5033:302:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										161
									],
									"body": {
										"id": 1860,
										"nodeType": "Block",
										"src": "5549:158:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1853,
															"name": "tokenId_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1846,
															"src": "5656:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1852,
														"name": "_isProtectedTokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1843,
														"src": "5636:19:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$__$",
															"typeString": "function (uint256) view"
														}
													},
													"id": 1854,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5636:29:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1855,
												"nodeType": "ExpressionStatement",
												"src": "5636:29:9"
											},
											{
												"expression": {
													"baseExpression": {
														"id": 1856,
														"name": "_owners",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1550,
														"src": "5683:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 1858,
													"indexExpression": {
														"id": 1857,
														"name": "tokenId_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1846,
														"src": "5691:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5683:17:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1851,
												"id": 1859,
												"nodeType": "Return",
												"src": "5676:24:9"
											}
										]
									},
									"documentation": {
										"id": 1844,
										"nodeType": "StructuredDocumentation",
										"src": "5367:98:9",
										"text": " @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist"
									},
									"functionSelector": "6352211e",
									"id": 1861,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "5479:7:9",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1848,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5521:8:9"
									},
									"parameters": {
										"id": 1847,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1846,
												"mutability": "mutable",
												"name": "tokenId_",
												"nameLocation": "5495:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1861,
												"src": "5487:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1845,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5487:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5486:18:9"
									},
									"returnParameters": {
										"id": 1851,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1850,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1861,
												"src": "5540:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1849,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5540:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5539:9:9"
									},
									"scope": 2403,
									"src": "5470:237:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1873,
										"nodeType": "Block",
										"src": "5885:41:9",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 1869,
														"name": "_owners",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1550,
														"src": "5902:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 1871,
													"indexExpression": {
														"id": 1870,
														"name": "tokenId_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1864,
														"src": "5910:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5902:17:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1868,
												"id": 1872,
												"nodeType": "Return",
												"src": "5895:24:9"
											}
										]
									},
									"documentation": {
										"id": 1862,
										"nodeType": "StructuredDocumentation",
										"src": "5713:98:9",
										"text": " @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist"
									},
									"id": 1874,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_ownerOf",
									"nameLocation": "5825:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1865,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1864,
												"mutability": "mutable",
												"name": "tokenId_",
												"nameLocation": "5842:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1874,
												"src": "5834:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1863,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5834:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5833:18:9"
									},
									"returnParameters": {
										"id": 1868,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1867,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1874,
												"src": "5876:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1866,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5876:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5875:9:9"
									},
									"scope": 2403,
									"src": "5816:110:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										153
									],
									"body": {
										"id": 1889,
										"nodeType": "Block",
										"src": "6001:158:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1882,
															"name": "owner_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1876,
															"src": "6101:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1881,
														"name": "_isProtected",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1821,
														"src": "6088:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
															"typeString": "function (address) view returns (bool)"
														}
													},
													"id": 1883,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6088:20:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1884,
												"nodeType": "ExpressionStatement",
												"src": "6088:20:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1886,
															"name": "owner_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1876,
															"src": "6145:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1885,
														"name": "_balanceOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1902,
														"src": "6134:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 1887,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6134:18:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1880,
												"id": 1888,
												"nodeType": "Return",
												"src": "6127:25:9"
											}
										]
									},
									"functionSelector": "70a08231",
									"id": 1890,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "5941:9:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1877,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1876,
												"mutability": "mutable",
												"name": "owner_",
												"nameLocation": "5959:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1890,
												"src": "5951:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1875,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5951:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5950:16:9"
									},
									"returnParameters": {
										"id": 1880,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1879,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1890,
												"src": "5992:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1878,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5992:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5991:9:9"
									},
									"scope": 2403,
									"src": "5932:227:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1901,
										"nodeType": "Block",
										"src": "6233:41:9",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 1897,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1562,
														"src": "6250:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1899,
													"indexExpression": {
														"id": 1898,
														"name": "owner_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1892,
														"src": "6260:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6250:17:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1896,
												"id": 1900,
												"nodeType": "Return",
												"src": "6243:24:9"
											}
										]
									},
									"id": 1902,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_balanceOf",
									"nameLocation": "6174:10:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1893,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1892,
												"mutability": "mutable",
												"name": "owner_",
												"nameLocation": "6193:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1902,
												"src": "6185:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1891,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6185:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6184:16:9"
									},
									"returnParameters": {
										"id": 1896,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1895,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1902,
												"src": "6224:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1894,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6224:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6223:9:9"
									},
									"scope": 2403,
									"src": "6165:109:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										173
									],
									"body": {
										"id": 1918,
										"nodeType": "Block",
										"src": "6427:79:9",
										"statements": [
											{
												"errorCall": {
													"arguments": [
														{
															"hexValue": "736166655472616e7366657246726f6d",
															"id": 1915,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6480:18:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c59d59d013d4aa1a8b1ce4c8299086f070733b453c02d0dc46e735edc04d6444",
																"typeString": "literal_string \"safeTransferFrom\""
															},
															"value": "safeTransferFrom"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c59d59d013d4aa1a8b1ce4c8299086f070733b453c02d0dc46e735edc04d6444",
																"typeString": "literal_string \"safeTransferFrom\""
															}
														],
														"id": 1914,
														"name": "SoulSocietySBTNotSupported",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2619,
														"src": "6453:26:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_error_pure$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory) pure"
														}
													},
													"id": 1916,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6453:46:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1917,
												"nodeType": "RevertStatement",
												"src": "6446:53:9"
											}
										]
									},
									"documentation": {
										"id": 1903,
										"nodeType": "StructuredDocumentation",
										"src": "6280:56:9",
										"text": "  Does not provide a transfer feature."
									},
									"functionSelector": "b88d4fde",
									"id": 1919,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "6350:16:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1912,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1905,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1919,
												"src": "6367:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1904,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6367:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1907,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1919,
												"src": "6377:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1906,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6377:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1909,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1919,
												"src": "6387:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1908,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6387:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1911,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1919,
												"src": "6397:14:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1910,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6397:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6366:46:9"
									},
									"returnParameters": {
										"id": 1913,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6427:0:9"
									},
									"scope": 2403,
									"src": "6341:165:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										183
									],
									"body": {
										"id": 1932,
										"nodeType": "Block",
										"src": "6582:70:9",
										"statements": [
											{
												"errorCall": {
													"arguments": [
														{
															"hexValue": "736166655472616e7366657246726f6d",
															"id": 1929,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6626:18:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c59d59d013d4aa1a8b1ce4c8299086f070733b453c02d0dc46e735edc04d6444",
																"typeString": "literal_string \"safeTransferFrom\""
															},
															"value": "safeTransferFrom"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c59d59d013d4aa1a8b1ce4c8299086f070733b453c02d0dc46e735edc04d6444",
																"typeString": "literal_string \"safeTransferFrom\""
															}
														],
														"id": 1928,
														"name": "SoulSocietySBTNotSupported",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2619,
														"src": "6599:26:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_error_pure$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory) pure"
														}
													},
													"id": 1930,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6599:46:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1931,
												"nodeType": "RevertStatement",
												"src": "6592:53:9"
											}
										]
									},
									"functionSelector": "42842e0e",
									"id": 1933,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "6521:16:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1926,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1921,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1933,
												"src": "6538:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1920,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6538:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1923,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1933,
												"src": "6548:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1922,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6548:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1925,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1933,
												"src": "6558:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1924,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6558:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6537:30:9"
									},
									"returnParameters": {
										"id": 1927,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6582:0:9"
									},
									"scope": 2403,
									"src": "6512:140:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										193
									],
									"body": {
										"id": 1946,
										"nodeType": "Block",
										"src": "6724:66:9",
										"statements": [
											{
												"errorCall": {
													"arguments": [
														{
															"hexValue": "7472616e7366657246726f6d",
															"id": 1943,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6768:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0c41b033f4a31df8067c24d1e9b550a2ce75fd4a29e1147af9752174f0e6cb20",
																"typeString": "literal_string \"transferFrom\""
															},
															"value": "transferFrom"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_0c41b033f4a31df8067c24d1e9b550a2ce75fd4a29e1147af9752174f0e6cb20",
																"typeString": "literal_string \"transferFrom\""
															}
														],
														"id": 1942,
														"name": "SoulSocietySBTNotSupported",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2619,
														"src": "6741:26:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_error_pure$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory) pure"
														}
													},
													"id": 1944,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6741:42:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1945,
												"nodeType": "RevertStatement",
												"src": "6734:49:9"
											}
										]
									},
									"functionSelector": "23b872dd",
									"id": 1947,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "6667:12:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1940,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1935,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1947,
												"src": "6680:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1934,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6680:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1937,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1947,
												"src": "6690:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1936,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6690:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1939,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1947,
												"src": "6700:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1938,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6700:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6679:30:9"
									},
									"returnParameters": {
										"id": 1941,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6724:0:9"
									},
									"scope": 2403,
									"src": "6658:132:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										201
									],
									"body": {
										"id": 1958,
										"nodeType": "Block",
										"src": "6846:61:9",
										"statements": [
											{
												"errorCall": {
													"arguments": [
														{
															"hexValue": "617070726f7665",
															"id": 1955,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6890:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5219209e083275171774dab1df80982e9df2096516f06319c5c6d71ae0a8480c",
																"typeString": "literal_string \"approve\""
															},
															"value": "approve"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_5219209e083275171774dab1df80982e9df2096516f06319c5c6d71ae0a8480c",
																"typeString": "literal_string \"approve\""
															}
														],
														"id": 1954,
														"name": "SoulSocietySBTNotSupported",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2619,
														"src": "6863:26:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_error_pure$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory) pure"
														}
													},
													"id": 1956,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6863:37:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1957,
												"nodeType": "RevertStatement",
												"src": "6856:44:9"
											}
										]
									},
									"functionSelector": "095ea7b3",
									"id": 1959,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "6805:7:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1952,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1949,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1959,
												"src": "6813:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1948,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6813:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1951,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1959,
												"src": "6823:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1950,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6823:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6812:20:9"
									},
									"returnParameters": {
										"id": 1953,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6846:0:9"
									},
									"scope": 2403,
									"src": "6796:111:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										209
									],
									"body": {
										"id": 1970,
										"nodeType": "Block",
										"src": "6971:71:9",
										"statements": [
											{
												"errorCall": {
													"arguments": [
														{
															"hexValue": "736574417070726f76616c466f72416c6c",
															"id": 1967,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7015:19:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_bad4c8ea4c8fb9f571d1f6f9b7692fff8e5ceaf73b1df98e7da8c1109b39ae9a",
																"typeString": "literal_string \"setApprovalForAll\""
															},
															"value": "setApprovalForAll"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_bad4c8ea4c8fb9f571d1f6f9b7692fff8e5ceaf73b1df98e7da8c1109b39ae9a",
																"typeString": "literal_string \"setApprovalForAll\""
															}
														],
														"id": 1966,
														"name": "SoulSocietySBTNotSupported",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2619,
														"src": "6988:26:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_error_pure$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory) pure"
														}
													},
													"id": 1968,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6988:47:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1969,
												"nodeType": "RevertStatement",
												"src": "6981:54:9"
											}
										]
									},
									"functionSelector": "a22cb465",
									"id": 1971,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "6922:17:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1964,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1961,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1971,
												"src": "6940:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1960,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6940:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1963,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1971,
												"src": "6950:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1962,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6950:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6939:17:9"
									},
									"returnParameters": {
										"id": 1965,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6971:0:9"
									},
									"scope": 2403,
									"src": "6913:129:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										217
									],
									"body": {
										"id": 1982,
										"nodeType": "Block",
										"src": "7113:67:9",
										"statements": [
											{
												"errorCall": {
													"arguments": [
														{
															"hexValue": "676574417070726f766564",
															"id": 1979,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7157:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_08b180e2fe9f14914416216da76338ac0beb980443725c802af615f8431fdb1e",
																"typeString": "literal_string \"getApproved\""
															},
															"value": "getApproved"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_08b180e2fe9f14914416216da76338ac0beb980443725c802af615f8431fdb1e",
																"typeString": "literal_string \"getApproved\""
															}
														],
														"id": 1978,
														"name": "SoulSocietySBTNotSupported",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2619,
														"src": "7130:26:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_error_pure$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory) pure"
														}
													},
													"id": 1980,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7130:41:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1981,
												"nodeType": "RevertStatement",
												"src": "7123:48:9"
											}
										]
									},
									"functionSelector": "081812fc",
									"id": 1983,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "7057:11:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1974,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1973,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1983,
												"src": "7069:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1972,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7069:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7068:10:9"
									},
									"returnParameters": {
										"id": 1977,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1976,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1983,
												"src": "7102:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1975,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7102:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7101:10:9"
									},
									"scope": 2403,
									"src": "7048:132:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										227
									],
									"body": {
										"id": 1996,
										"nodeType": "Block",
										"src": "7259:70:9",
										"statements": [
											{
												"errorCall": {
													"arguments": [
														{
															"hexValue": "6973417070726f766564466f72416c6c",
															"id": 1993,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7303:18:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_921cdf9aedfed41bc4485ae779fda471feca12075d9127a0fc70ac6b3b3d9c30",
																"typeString": "literal_string \"isApprovedForAll\""
															},
															"value": "isApprovedForAll"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_921cdf9aedfed41bc4485ae779fda471feca12075d9127a0fc70ac6b3b3d9c30",
																"typeString": "literal_string \"isApprovedForAll\""
															}
														],
														"id": 1992,
														"name": "SoulSocietySBTNotSupported",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2619,
														"src": "7276:26:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_error_pure$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory) pure"
														}
													},
													"id": 1994,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7276:46:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1995,
												"nodeType": "RevertStatement",
												"src": "7269:53:9"
											}
										]
									},
									"functionSelector": "e985e9c5",
									"id": 1997,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "7195:16:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1988,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1985,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1997,
												"src": "7212:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1984,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7212:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1987,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1997,
												"src": "7222:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1986,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7222:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7211:20:9"
									},
									"returnParameters": {
										"id": 1991,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1990,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1997,
												"src": "7253:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1989,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7253:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7252:6:9"
									},
									"scope": 2403,
									"src": "7186:143:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2543
									],
									"body": {
										"id": 2013,
										"nodeType": "Block",
										"src": "7613:50:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2009,
															"name": "to_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1999,
															"src": "7640:3:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2010,
															"name": "tokenType_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2001,
															"src": "7645:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2008,
														"name": "_safeMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2130,
														"src": "7630:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (address,uint256) returns (uint256)"
														}
													},
													"id": 2011,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7630:26:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2007,
												"id": 2012,
												"nodeType": "Return",
												"src": "7623:33:9"
											}
										]
									},
									"functionSelector": "40c10f19",
									"id": 2014,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2004,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2003,
												"name": "onlyOwner",
												"nameLocations": [
													"7586:9:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "7586:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "7586:9:9"
										}
									],
									"name": "mint",
									"nameLocation": "7533:4:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2002,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1999,
												"mutability": "mutable",
												"name": "to_",
												"nameLocation": "7546:3:9",
												"nodeType": "VariableDeclaration",
												"scope": 2014,
												"src": "7538:11:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1998,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7538:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2001,
												"mutability": "mutable",
												"name": "tokenType_",
												"nameLocation": "7559:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 2014,
												"src": "7551:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2000,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7551:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7537:33:9"
									},
									"returnParameters": {
										"id": 2007,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2006,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2014,
												"src": "7604:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2005,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7604:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7603:9:9"
									},
									"scope": 2403,
									"src": "7524:139:9",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2129,
										"nodeType": "Block",
										"src": "7755:945:9",
										"statements": [
											{
												"assignments": [
													2024
												],
												"declarations": [
													{
														"constant": false,
														"id": 2024,
														"mutability": "mutable",
														"name": "tokenId",
														"nameLocation": "7774:7:9",
														"nodeType": "VariableDeclaration",
														"scope": 2129,
														"src": "7766:15:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2023,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7766:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2028,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2027,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2025,
														"name": "_totalCount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1546,
														"src": "7784:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"hexValue": "31",
														"id": 2026,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7798:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "7784:15:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7766:33:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2034,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2029,
														"name": "to_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2016,
														"src": "7819:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2032,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7834:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2031,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7826:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2030,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7826:7:9",
																"typeDescriptions": {}
															}
														},
														"id": 2033,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7826:10:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7819:17:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2043,
												"nodeType": "IfStatement",
												"src": "7815:96:9",
												"trueBody": {
													"id": 2042,
													"nodeType": "Block",
													"src": "7838:73:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 2038,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7897:1:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 2037,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7889:7:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 2036,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7889:7:9",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2039,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7889:10:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2035,
																	"name": "SoulSocietySBTInvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2610,
																	"src": "7859:29:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 2040,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7859:41:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2041,
															"nodeType": "RevertStatement",
															"src": "7852:48:9"
														}
													]
												}
											},
											{
												"condition": {
													"arguments": [
														{
															"id": 2045,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2024,
															"src": "7933:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2044,
														"name": "_exists",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2211,
														"src": "7925:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (uint256) view returns (bool)"
														}
													},
													"id": 2046,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7925:16:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2052,
												"nodeType": "IfStatement",
												"src": "7921:87:9",
												"trueBody": {
													"id": 2051,
													"nodeType": "Block",
													"src": "7943:65:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 2048,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2024,
																		"src": "7989:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2047,
																	"name": "SoulSocietySBTExistToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2600,
																	"src": "7964:24:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) pure"
																	}
																},
																"id": 2049,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7964:33:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2050,
															"nodeType": "RevertStatement",
															"src": "7957:40:9"
														}
													]
												}
											},
											{
												"condition": {
													"id": 2056,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "8072:18:9",
													"subExpression": {
														"arguments": [
															{
																"id": 2054,
																"name": "to_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2016,
																"src": "8086:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 2053,
															"name": "_existsOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2225,
															"src": "8073:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																"typeString": "function (address) view returns (bool)"
															}
														},
														"id": 2055,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8073:17:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2062,
												"nodeType": "IfStatement",
												"src": "8069:63:9",
												"trueBody": {
													"id": 2061,
													"nodeType": "Block",
													"src": "8092:40:9",
													"statements": [
														{
															"expression": {
																"id": 2059,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2057,
																	"name": "_totalUser",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1544,
																	"src": "8106:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 2058,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8120:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8106:15:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2060,
															"nodeType": "ExpressionStatement",
															"src": "8106:15:9"
														}
													]
												}
											},
											{
												"id": 2073,
												"nodeType": "UncheckedBlock",
												"src": "8142:87:9",
												"statements": [
													{
														"expression": {
															"id": 2067,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 2063,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1562,
																	"src": "8166:9:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 2065,
																"indexExpression": {
																	"id": 2064,
																	"name": "to_",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2016,
																	"src": "8176:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "8166:14:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"hexValue": "31",
																"id": 2066,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8184:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "8166:19:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2068,
														"nodeType": "ExpressionStatement",
														"src": "8166:19:9"
													},
													{
														"expression": {
															"id": 2071,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2069,
																"name": "_totalCount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1546,
																"src": "8199:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"hexValue": "31",
																"id": 2070,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8214:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "8199:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2072,
														"nodeType": "ExpressionStatement",
														"src": "8199:16:9"
													}
												]
											},
											{
												"expression": {
													"id": 2078,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2074,
															"name": "_owners",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1550,
															"src": "8239:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 2076,
														"indexExpression": {
															"id": 2075,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2024,
															"src": "8247:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8239:16:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2077,
														"name": "to_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2016,
														"src": "8258:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8239:22:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2079,
												"nodeType": "ExpressionStatement",
												"src": "8239:22:9"
											},
											{
												"expression": {
													"id": 2084,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2080,
															"name": "_tokenTypes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1554,
															"src": "8271:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 2082,
														"indexExpression": {
															"id": 2081,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2024,
															"src": "8283:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8271:20:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2083,
														"name": "tokenType_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2018,
														"src": "8294:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8271:33:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2085,
												"nodeType": "ExpressionStatement",
												"src": "8271:33:9"
											},
											{
												"expression": {
													"id": 2090,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2086,
															"name": "_tokenGrowths",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1558,
															"src": "8314:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 2088,
														"indexExpression": {
															"id": 2087,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2024,
															"src": "8328:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8314:22:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 2089,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8339:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "8314:26:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2091,
												"nodeType": "ExpressionStatement",
												"src": "8314:26:9"
											},
											{
												"expression": {
													"id": 2102,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 2092,
																"name": "_ownedTokens",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1572,
																"src": "8389:12:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(uint256 => uint256))"
																}
															},
															"id": 2099,
															"indexExpression": {
																"id": 2093,
																"name": "to_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2016,
																"src": "8402:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "8389:17:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 2100,
														"indexExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2098,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 2094,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1562,
																	"src": "8407:9:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 2096,
																"indexExpression": {
																	"id": 2095,
																	"name": "to_",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2016,
																	"src": "8417:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "8407:14:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"hexValue": "31",
																"id": 2097,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8422:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "8407:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8389:35:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2101,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2024,
														"src": "8427:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8389:45:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2103,
												"nodeType": "ExpressionStatement",
												"src": "8389:45:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2107,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8479:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2106,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8471:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2105,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8471:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 2108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8471:10:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2109,
															"name": "to_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2016,
															"src": "8483:3:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2110,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2024,
															"src": "8488:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2111,
															"name": "tokenType_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2018,
															"src": "8497:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2104,
														"name": "Mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2471,
														"src": "8466:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 2112,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8466:42:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2113,
												"nodeType": "EmitStatement",
												"src": "8461:47:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 2118,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8571:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 2117,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8563:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 2116,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "8563:7:9",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2119,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8563:10:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 2120,
																	"name": "to_",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2016,
																	"src": "8575:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 2121,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2024,
																	"src": "8580:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"hexValue": "",
																	"id": 2122,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8589:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																		"typeString": "literal_string \"\""
																	},
																	"value": ""
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																		"typeString": "literal_string \"\""
																	}
																],
																"id": 2115,
																"name": "_checkOnERC721Received",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2386,
																"src": "8540:22:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256,bytes memory) returns (bool)"
																}
															},
															"id": 2123,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8540:52:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572",
															"id": 2124,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8606:52:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
																"typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
															},
															"value": "ERC721: transfer to non ERC721Receiver implementer"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
																"typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
															}
														],
														"id": 2114,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8519:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2125,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8519:149:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2126,
												"nodeType": "ExpressionStatement",
												"src": "8519:149:9"
											},
											{
												"expression": {
													"id": 2127,
													"name": "tokenId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2024,
													"src": "8686:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2022,
												"id": 2128,
												"nodeType": "Return",
												"src": "8679:14:9"
											}
										]
									},
									"id": 2130,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "7678:9:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2019,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2016,
												"mutability": "mutable",
												"name": "to_",
												"nameLocation": "7696:3:9",
												"nodeType": "VariableDeclaration",
												"scope": 2130,
												"src": "7688:11:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2015,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7688:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2018,
												"mutability": "mutable",
												"name": "tokenType_",
												"nameLocation": "7709:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 2130,
												"src": "7701:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2017,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7701:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7687:33:9"
									},
									"returnParameters": {
										"id": 2022,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2021,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2130,
												"src": "7746:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2020,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7746:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7745:9:9"
									},
									"scope": 2403,
									"src": "7669:1031:9",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										2526
									],
									"body": {
										"id": 2152,
										"nodeType": "Block",
										"src": "8760:143:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2140,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 2137,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "8774:3:9",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 2138,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8778:6:9",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "8774:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 2139,
														"name": "to_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2132,
														"src": "8788:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8774:17:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2146,
												"nodeType": "IfStatement",
												"src": "8770:86:9",
												"trueBody": {
													"id": 2145,
													"nodeType": "Block",
													"src": "8793:63:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 2142,
																		"name": "to_",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2132,
																		"src": "8841:3:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2141,
																	"name": "SoulSocietySBTInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2575,
																	"src": "8814:26:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 2143,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8814:31:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2144,
															"nodeType": "RevertStatement",
															"src": "8807:38:9"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2148,
															"name": "to_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2132,
															"src": "8882:3:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2149,
															"name": "tokenId_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2134,
															"src": "8887:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2147,
														"name": "_setGrowthToZero",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2177,
														"src": "8865:16:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2150,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8865:31:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2151,
												"nodeType": "ExpressionStatement",
												"src": "8865:31:9"
											}
										]
									},
									"functionSelector": "9b252852",
									"id": 2153,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "reset",
									"nameLocation": "8715:5:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2135,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2132,
												"mutability": "mutable",
												"name": "to_",
												"nameLocation": "8729:3:9",
												"nodeType": "VariableDeclaration",
												"scope": 2153,
												"src": "8721:11:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2131,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8721:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2134,
												"mutability": "mutable",
												"name": "tokenId_",
												"nameLocation": "8742:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 2153,
												"src": "8734:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2133,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8734:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8720:31:9"
									},
									"returnParameters": {
										"id": 2136,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8760:0:9"
									},
									"scope": 2403,
									"src": "8706:197:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2176,
										"nodeType": "Block",
										"src": "8972:166:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2161,
															"name": "to_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2155,
															"src": "9043:3:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2162,
															"name": "tokenId_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2157,
															"src": "9048:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2160,
														"name": "_requireMintedOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2346,
														"src": "9026:16:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256) view"
														}
													},
													"id": 2163,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9026:31:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2164,
												"nodeType": "ExpressionStatement",
												"src": "9026:31:9"
											},
											{
												"expression": {
													"id": 2169,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2165,
															"name": "_tokenGrowths",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1558,
															"src": "9068:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 2167,
														"indexExpression": {
															"id": 2166,
															"name": "tokenId_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2157,
															"src": "9082:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9068:23:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 2168,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9094:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "9068:27:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2170,
												"nodeType": "ExpressionStatement",
												"src": "9068:27:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2172,
															"name": "to_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2155,
															"src": "9117:3:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2173,
															"name": "tokenId_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2157,
															"src": "9122:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2171,
														"name": "Reset",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2477,
														"src": "9111:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2174,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9111:20:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2175,
												"nodeType": "EmitStatement",
												"src": "9106:25:9"
											}
										]
									},
									"id": 2177,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setGrowthToZero",
									"nameLocation": "8918:16:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2155,
												"mutability": "mutable",
												"name": "to_",
												"nameLocation": "8943:3:9",
												"nodeType": "VariableDeclaration",
												"scope": 2177,
												"src": "8935:11:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2154,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8935:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2157,
												"mutability": "mutable",
												"name": "tokenId_",
												"nameLocation": "8953:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 2177,
												"src": "8948:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2156,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "8948:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8934:28:9"
									},
									"returnParameters": {
										"id": 2159,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8972:0:9"
									},
									"scope": 2403,
									"src": "8909:229:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										2510
									],
									"body": {
										"id": 2192,
										"nodeType": "Block",
										"src": "9421:163:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2185,
															"name": "tokenId_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2179,
															"src": "9527:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2184,
														"name": "_isProtectedTokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1843,
														"src": "9507:19:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$__$",
															"typeString": "function (uint256) view"
														}
													},
													"id": 2186,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9507:29:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2187,
												"nodeType": "ExpressionStatement",
												"src": "9507:29:9"
											},
											{
												"expression": {
													"baseExpression": {
														"id": 2188,
														"name": "_tokenGrowths",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1558,
														"src": "9554:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
															"typeString": "mapping(uint256 => uint256)"
														}
													},
													"id": 2190,
													"indexExpression": {
														"id": 2189,
														"name": "tokenId_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2179,
														"src": "9568:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "9554:23:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2183,
												"id": 2191,
												"nodeType": "Return",
												"src": "9547:30:9"
											}
										]
									},
									"functionSelector": "51c18e0c",
									"id": 2193,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getGrowth",
									"nameLocation": "9362:9:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2179,
												"mutability": "mutable",
												"name": "tokenId_",
												"nameLocation": "9380:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 2193,
												"src": "9372:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2178,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9372:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9371:18:9"
									},
									"returnParameters": {
										"id": 2183,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2182,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2193,
												"src": "9412:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2181,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9412:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9411:9:9"
									},
									"scope": 2403,
									"src": "9353:231:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2210,
										"nodeType": "Block",
										"src": "9959:55:9",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2208,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 2202,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2196,
																"src": "9985:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 2201,
															"name": "_ownerOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1874,
															"src": "9976:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																"typeString": "function (uint256) view returns (address)"
															}
														},
														"id": 2203,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9976:17:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2206,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10005:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2205,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9997:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2204,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9997:7:9",
																"typeDescriptions": {}
															}
														},
														"id": 2207,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9997:10:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9976:31:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2200,
												"id": 2209,
												"nodeType": "Return",
												"src": "9969:38:9"
											}
										]
									},
									"documentation": {
										"id": 2194,
										"nodeType": "StructuredDocumentation",
										"src": "9591:292:9",
										"text": " @dev Returns whether `tokenId` exists.\n Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n Tokens start existing when they are minted (`_mint`),\n and stop existing when they are burned (`_burn`)."
									},
									"id": 2211,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_exists",
									"nameLocation": "9897:7:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2197,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2196,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "9913:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 2211,
												"src": "9905:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2195,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9905:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9904:17:9"
									},
									"returnParameters": {
										"id": 2200,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2199,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2211,
												"src": "9953:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2198,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9953:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9952:6:9"
									},
									"scope": 2403,
									"src": "9888:126:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2224,
										"nodeType": "Block",
										"src": "10091:42:9",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2222,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 2218,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1562,
															"src": "10108:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 2220,
														"indexExpression": {
															"id": 2219,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2213,
															"src": "10118:2:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "10108:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2221,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10125:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "10108:18:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2217,
												"id": 2223,
												"nodeType": "Return",
												"src": "10101:25:9"
											}
										]
									},
									"id": 2225,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_existsOwner",
									"nameLocation": "10029:12:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2213,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10050:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 2225,
												"src": "10042:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2212,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10042:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10041:12:9"
									},
									"returnParameters": {
										"id": 2217,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2216,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2225,
												"src": "10085:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2215,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10085:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10084:6:9"
									},
									"scope": 2403,
									"src": "10020:113:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										2519
									],
									"body": {
										"id": 2241,
										"nodeType": "Block",
										"src": "10462:46:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2237,
															"name": "to_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2227,
															"src": "10487:3:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2238,
															"name": "tokenId_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2229,
															"src": "10492:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2236,
														"name": "_growUp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2277,
														"src": "10479:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (address,uint256) returns (uint256)"
														}
													},
													"id": 2239,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10479:22:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2235,
												"id": 2240,
												"nodeType": "Return",
												"src": "10472:29:9"
											}
										]
									},
									"functionSelector": "be37e907",
									"id": 2242,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2232,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2231,
												"name": "onlyOwner",
												"nameLocations": [
													"10435:9:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "10435:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "10435:9:9"
										}
									],
									"name": "growUp",
									"nameLocation": "10389:6:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2227,
												"mutability": "mutable",
												"name": "to_",
												"nameLocation": "10404:3:9",
												"nodeType": "VariableDeclaration",
												"scope": 2242,
												"src": "10396:11:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2226,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10396:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2229,
												"mutability": "mutable",
												"name": "tokenId_",
												"nameLocation": "10417:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 2242,
												"src": "10409:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2228,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10409:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10395:31:9"
									},
									"returnParameters": {
										"id": 2235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2234,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2242,
												"src": "10453:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2233,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10453:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10452:9:9"
									},
									"scope": 2403,
									"src": "10380:128:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2276,
										"nodeType": "Block",
										"src": "10592:268:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2252,
															"name": "to_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2244,
															"src": "10664:3:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2253,
															"name": "tokenId_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2246,
															"src": "10669:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2251,
														"name": "_requireMintedOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2346,
														"src": "10647:16:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256) view"
														}
													},
													"id": 2254,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10647:31:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2255,
												"nodeType": "ExpressionStatement",
												"src": "10647:31:9"
											},
											{
												"expression": {
													"id": 2260,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2256,
															"name": "_tokenGrowths",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1558,
															"src": "10689:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 2258,
														"indexExpression": {
															"id": 2257,
															"name": "tokenId_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2246,
															"src": "10703:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10689:23:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 2259,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10716:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "10689:28:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2261,
												"nodeType": "ExpressionStatement",
												"src": "10689:28:9"
											},
											{
												"assignments": [
													2263
												],
												"declarations": [
													{
														"constant": false,
														"id": 2263,
														"mutability": "mutable",
														"name": "tokenGrowth",
														"nameLocation": "10736:11:9",
														"nodeType": "VariableDeclaration",
														"scope": 2276,
														"src": "10728:19:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2262,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10728:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2267,
												"initialValue": {
													"baseExpression": {
														"id": 2264,
														"name": "_tokenGrowths",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1558,
														"src": "10751:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
															"typeString": "mapping(uint256 => uint256)"
														}
													},
													"id": 2266,
													"indexExpression": {
														"id": 2265,
														"name": "tokenId_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2246,
														"src": "10765:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "10751:23:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10728:46:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2269,
															"name": "to_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2244,
															"src": "10797:3:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2270,
															"name": "tokenId_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2246,
															"src": "10802:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2271,
															"name": "tokenGrowth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2263,
															"src": "10812:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2268,
														"name": "GrowUp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2485,
														"src": "10790:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 2272,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10790:34:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2273,
												"nodeType": "EmitStatement",
												"src": "10785:39:9"
											},
											{
												"expression": {
													"id": 2274,
													"name": "tokenGrowth",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2263,
													"src": "10842:11:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2250,
												"id": 2275,
												"nodeType": "Return",
												"src": "10835:18:9"
											}
										]
									},
									"id": 2277,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_growUp",
									"nameLocation": "10527:7:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2247,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2244,
												"mutability": "mutable",
												"name": "to_",
												"nameLocation": "10543:3:9",
												"nodeType": "VariableDeclaration",
												"scope": 2277,
												"src": "10535:11:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2243,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10535:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2246,
												"mutability": "mutable",
												"name": "tokenId_",
												"nameLocation": "10556:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 2277,
												"src": "10548:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2245,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10548:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10534:31:9"
									},
									"returnParameters": {
										"id": 2250,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2249,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2277,
												"src": "10583:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2248,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10583:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10582:9:9"
									},
									"scope": 2403,
									"src": "10518:342:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										2567
									],
									"body": {
										"id": 2325,
										"nodeType": "Block",
										"src": "11135:367:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2288,
															"name": "owner_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2280,
															"src": "11233:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2287,
														"name": "_isProtected",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1821,
														"src": "11220:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
															"typeString": "function (address) view returns (bool)"
														}
													},
													"id": 2289,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11220:20:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2290,
												"nodeType": "ExpressionStatement",
												"src": "11220:20:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2296,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2292,
																"name": "index_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2282,
																"src": "11259:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 2294,
																		"name": "owner_",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2280,
																		"src": "11279:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2293,
																	"name": "_balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1902,
																	"src": "11268:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view returns (uint256)"
																	}
																},
																"id": 2295,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11268:18:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "11259:27:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f7574206f6620496e646578",
															"id": 2297,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11288:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_be78c1e9355992416a0dec4eab01ee588f3bd64dda46cc63c159dc4dddd83f4e",
																"typeString": "literal_string \"Out of Index\""
															},
															"value": "Out of Index"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_be78c1e9355992416a0dec4eab01ee588f3bd64dda46cc63c159dc4dddd83f4e",
																"typeString": "literal_string \"Out of Index\""
															}
														],
														"id": 2291,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11251:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2298,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11251:52:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2299,
												"nodeType": "ExpressionStatement",
												"src": "11251:52:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2305,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2300,
														"name": "owner_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2280,
														"src": "11318:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2303,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11336:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2302,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "11328:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2301,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "11328:7:9",
																"typeDescriptions": {}
															}
														},
														"id": 2304,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11328:10:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "11318:20:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2314,
												"nodeType": "IfStatement",
												"src": "11314:99:9",
												"trueBody": {
													"id": 2313,
													"nodeType": "Block",
													"src": "11340:73:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 2309,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11399:1:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 2308,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "11391:7:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 2307,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "11391:7:9",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2310,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11391:10:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2306,
																	"name": "SoulSocietySBTInvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2610,
																	"src": "11361:29:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 2311,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11361:41:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2312,
															"nodeType": "RevertStatement",
															"src": "11354:48:9"
														}
													]
												}
											},
											{
												"assignments": [
													2316
												],
												"declarations": [
													{
														"constant": false,
														"id": 2316,
														"mutability": "mutable",
														"name": "tokenId",
														"nameLocation": "11431:7:9",
														"nodeType": "VariableDeclaration",
														"scope": 2325,
														"src": "11423:15:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2315,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11423:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2322,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 2317,
															"name": "_ownedTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1572,
															"src": "11441:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(uint256 => uint256))"
															}
														},
														"id": 2319,
														"indexExpression": {
															"id": 2318,
															"name": "owner_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2280,
															"src": "11454:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "11441:20:9",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
															"typeString": "mapping(uint256 => uint256)"
														}
													},
													"id": 2321,
													"indexExpression": {
														"id": 2320,
														"name": "index_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2282,
														"src": "11462:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "11441:28:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11423:46:9"
											},
											{
												"expression": {
													"id": 2323,
													"name": "tokenId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2316,
													"src": "11487:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2286,
												"id": 2324,
												"nodeType": "Return",
												"src": "11480:14:9"
											}
										]
									},
									"documentation": {
										"id": 2278,
										"nodeType": "StructuredDocumentation",
										"src": "10868:171:9",
										"text": " @dev Returns a token ID owned by `owner` at a given `index` of its token list.\n Use along with {balanceOf} to enumerate all of ``owner``'s tokens."
									},
									"functionSelector": "2f745c59",
									"id": 2326,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenOfOwnerByIndex",
									"nameLocation": "11053:19:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2283,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2280,
												"mutability": "mutable",
												"name": "owner_",
												"nameLocation": "11081:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 2326,
												"src": "11073:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2279,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11073:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2282,
												"mutability": "mutable",
												"name": "index_",
												"nameLocation": "11097:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 2326,
												"src": "11089:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2281,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11089:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11072:32:9"
									},
									"returnParameters": {
										"id": 2286,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2285,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2326,
												"src": "11126:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2284,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11126:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11125:9:9"
									},
									"scope": 2403,
									"src": "11044:458:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2345,
										"nodeType": "Block",
										"src": "11978:106:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2338,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 2335,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2331,
																"src": "12000:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 2334,
															"name": "_ownerOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1874,
															"src": "11991:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																"typeString": "function (uint256) view returns (address)"
															}
														},
														"id": 2336,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11991:17:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 2337,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2329,
														"src": "12012:2:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "11991:23:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2344,
												"nodeType": "IfStatement",
												"src": "11988:90:9",
												"trueBody": {
													"id": 2343,
													"nodeType": "Block",
													"src": "12016:62:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 2340,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2329,
																		"src": "12064:2:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2339,
																	"name": "SoulSocietySBTInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2575,
																	"src": "12037:26:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 2341,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12037:30:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2342,
															"nodeType": "RevertStatement",
															"src": "12030:37:9"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2327,
										"nodeType": "StructuredDocumentation",
										"src": "11780:116:9",
										"text": " @dev Reverts if the `tokenId` has not been minted yet and owner address is not equal \"to\" address"
									},
									"id": 2346,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireMintedOf",
									"nameLocation": "11910:16:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2332,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2329,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "11935:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 2346,
												"src": "11927:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2328,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11927:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2331,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "11947:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 2346,
												"src": "11939:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2330,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11939:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11926:29:9"
									},
									"returnParameters": {
										"id": 2333,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11978:0:9"
									},
									"scope": 2403,
									"src": "11901:183:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2385,
										"nodeType": "Block",
										"src": "12209:217:9",
										"statements": [
											{
												"condition": {
													"id": 2362,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "12223:15:9",
													"subExpression": {
														"arguments": [
															{
																"id": 2360,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2350,
																"src": "12235:2:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 2359,
															"name": "isContract",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2402,
															"src": "12224:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																"typeString": "function (address) view returns (bool)"
															}
														},
														"id": 2361,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12224:14:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2366,
												"nodeType": "IfStatement",
												"src": "12219:57:9",
												"trueBody": {
													"id": 2365,
													"nodeType": "Block",
													"src": "12240:36:9",
													"statements": [
														{
															"expression": {
																"hexValue": "74727565",
																"id": 2363,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12261:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 2358,
															"id": 2364,
															"nodeType": "Return",
															"src": "12254:11:9"
														}
													]
												}
											},
											{
												"assignments": [
													2368
												],
												"declarations": [
													{
														"constant": false,
														"id": 2368,
														"mutability": "mutable",
														"name": "retval",
														"nameLocation": "12293:6:9",
														"nodeType": "VariableDeclaration",
														"scope": 2385,
														"src": "12286:13:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"typeName": {
															"id": 2367,
															"name": "bytes4",
															"nodeType": "ElementaryTypeName",
															"src": "12286:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2379,
												"initialValue": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2373,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 258,
																"src": "12339:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 2374,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12339:12:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2375,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2348,
															"src": "12353:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2376,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2352,
															"src": "12359:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2377,
															"name": "_data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2354,
															"src": "12368:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 2370,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2350,
																	"src": "12318:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2369,
																"name": "IERC721Receiver",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 246,
																"src": "12302:15:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$246_$",
																	"typeString": "type(contract IERC721Receiver)"
																}
															},
															"id": 2371,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12302:19:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC721Receiver_$246",
																"typeString": "contract IERC721Receiver"
															}
														},
														"id": 2372,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "12322:16:9",
														"memberName": "onERC721Received",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 245,
														"src": "12302:36:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
															"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
														}
													},
													"id": 2378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12302:72:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12286:88:9"
											},
											{
												"expression": {
													"components": [
														{
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 2382,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2380,
																"name": "retval",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2368,
																"src": "12392:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 2381,
																"name": "_ERC721_RECEIVED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1577,
																"src": "12402:16:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "12392:26:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"id": 2383,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "12391:28:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2358,
												"id": 2384,
												"nodeType": "Return",
												"src": "12384:35:9"
											}
										]
									},
									"id": 2386,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOnERC721Received",
									"nameLocation": "12099:22:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2355,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2348,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "12130:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 2386,
												"src": "12122:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2347,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12122:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2350,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "12144:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 2386,
												"src": "12136:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2349,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12136:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2352,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "12156:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 2386,
												"src": "12148:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2351,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12148:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2354,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "12178:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 2386,
												"src": "12165:18:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2353,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "12165:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12121:63:9"
									},
									"returnParameters": {
										"id": 2358,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2357,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2386,
												"src": "12203:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2356,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "12203:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12202:6:9"
									},
									"scope": 2403,
									"src": "12090:336:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2401,
										"nodeType": "Block",
										"src": "12498:104:9",
										"statements": [
											{
												"assignments": [
													2394
												],
												"declarations": [
													{
														"constant": false,
														"id": 2394,
														"mutability": "mutable",
														"name": "size",
														"nameLocation": "12516:4:9",
														"nodeType": "VariableDeclaration",
														"scope": 2401,
														"src": "12508:12:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2393,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12508:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2395,
												"nodeType": "VariableDeclarationStatement",
												"src": "12508:12:9"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "12539:32:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12541:28:9",
															"value": {
																"arguments": [
																	{
																		"name": "account",
																		"nodeType": "YulIdentifier",
																		"src": "12561:7:9"
																	}
																],
																"functionName": {
																	"name": "extcodesize",
																	"nodeType": "YulIdentifier",
																	"src": "12549:11:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12549:20:9"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "12541:4:9"
																}
															]
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 2388,
														"isOffset": false,
														"isSlot": false,
														"src": "12561:7:9",
														"valueSize": 1
													},
													{
														"declaration": 2394,
														"isOffset": false,
														"isSlot": false,
														"src": "12541:4:9",
														"valueSize": 1
													}
												],
												"id": 2396,
												"nodeType": "InlineAssembly",
												"src": "12530:41:9"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2399,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2397,
														"name": "size",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2394,
														"src": "12587:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 2398,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12594:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "12587:8:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2392,
												"id": 2400,
												"nodeType": "Return",
												"src": "12580:15:9"
											}
										]
									},
									"id": 2402,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "12441:10:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2388,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "12460:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 2402,
												"src": "12452:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2387,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12452:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12451:17:9"
									},
									"returnParameters": {
										"id": 2392,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2391,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2402,
												"src": "12492:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2390,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "12492:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12491:6:9"
									},
									"scope": 2403,
									"src": "12432:170:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2404,
							"src": "791:11813:9",
							"usedErrors": [
								2575,
								2580,
								2589,
								2596,
								2600,
								2605,
								2610,
								2615,
								2619
							],
							"usedEvents": [
								13,
								127,
								136,
								145,
								2454,
								2460,
								2471,
								2477,
								2485
							]
						}
					],
					"src": "32:12572:9"
				},
				"id": 9
			},
			"v2/contracts/interfaces/ISoulSocietyEnumerableSBT.sol": {
				"ast": {
					"absolutePath": "v2/contracts/interfaces/ISoulSocietyEnumerableSBT.sol",
					"exportedSymbols": {
						"ISoulSocietyEnumableSBT": [
							2439
						],
						"ISoulSocietySBT": [
							2568
						]
					},
					"id": 2440,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2405,
							"literals": [
								"solidity",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:10"
						},
						{
							"absolutePath": "v2/contracts/interfaces/ISoulSocietySBT.sol",
							"file": "v2/contracts/interfaces/ISoulSocietySBT.sol",
							"id": 2406,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2440,
							"sourceUnit": 2569,
							"src": "57:53:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 2408,
										"name": "ISoulSocietySBT",
										"nameLocations": [
											"534:15:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2568,
										"src": "534:15:10"
									},
									"id": 2409,
									"nodeType": "InheritanceSpecifier",
									"src": "534:15:10"
								}
							],
							"canonicalName": "ISoulSocietyEnumableSBT",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2407,
								"nodeType": "StructuredDocumentation",
								"src": "112:385:10",
								"text": "@title Lightweight Growth type SBT interface developed by SoulSociety\n @notice There is a part where the gas fee required by Ethereum is too expensive to contain various information. \n Therefore, by considering each contract as a piece of information, we tried to implement growth-type SBT through minimum information and minimum gas cost by managing growth in the contract."
							},
							"fullyImplemented": false,
							"id": 2439,
							"linearizedBaseContracts": [
								2439,
								2568
							],
							"name": "ISoulSocietyEnumableSBT",
							"nameLocation": "507:23:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										2491
									],
									"documentation": {
										"id": 2410,
										"nodeType": "StructuredDocumentation",
										"src": "556:82:10",
										"text": " @dev Returns the total amount of tokens stored by the contract."
									},
									"functionSelector": "18160ddd",
									"id": 2415,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "652:11:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2411,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "663:2:10"
									},
									"returnParameters": {
										"id": 2414,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2413,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2415,
												"src": "689:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2412,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "689:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "688:9:10"
									},
									"scope": 2439,
									"src": "643:55:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										2496
									],
									"functionSelector": "e1604b70",
									"id": 2420,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalUser",
									"nameLocation": "846:9:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2416,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "855:2:10"
									},
									"returnParameters": {
										"id": 2419,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2418,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2420,
												"src": "882:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2417,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "882:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "881:9:10"
									},
									"scope": 2439,
									"src": "837:54:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										2567
									],
									"documentation": {
										"id": 2421,
										"nodeType": "StructuredDocumentation",
										"src": "898:171:10",
										"text": " @dev Returns a token ID owned by `owner` at a given `index` of its token list.\n Use along with {balanceOf} to enumerate all of ``owner``'s tokens."
									},
									"functionSelector": "2f745c59",
									"id": 2430,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenOfOwnerByIndex",
									"nameLocation": "1083:19:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2426,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2423,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1111:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2430,
												"src": "1103:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2422,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1103:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2425,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "1126:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2430,
												"src": "1118:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2424,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1118:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1102:30:10"
									},
									"returnParameters": {
										"id": 2429,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2428,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2430,
												"src": "1156:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2427,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1156:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1155:9:10"
									},
									"scope": 2439,
									"src": "1074:91:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2431,
										"nodeType": "StructuredDocumentation",
										"src": "1171:164:10",
										"text": " @dev Returns a token ID at a given `index` of all the tokens stored by the contract.\n Use along with {totalSupply} to enumerate all tokens."
									},
									"functionSelector": "4f6ccce7",
									"id": 2438,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenByIndex",
									"nameLocation": "1349:12:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2434,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2433,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "1370:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2438,
												"src": "1362:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2432,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1362:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1361:15:10"
									},
									"returnParameters": {
										"id": 2437,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2436,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2438,
												"src": "1400:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2435,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1400:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1399:9:10"
									},
									"scope": 2439,
									"src": "1340:69:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2440,
							"src": "497:915:10",
							"usedErrors": [],
							"usedEvents": [
								2454,
								2460,
								2471,
								2477,
								2485
							]
						}
					],
					"src": "32:1381:10"
				},
				"id": 10
			},
			"v2/contracts/interfaces/ISoulSocietySBT.sol": {
				"ast": {
					"absolutePath": "v2/contracts/interfaces/ISoulSocietySBT.sol",
					"exportedSymbols": {
						"ISoulSocietySBT": [
							2568
						]
					},
					"id": 2569,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2441,
							"literals": [
								"solidity",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:11"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ISoulSocietySBT",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2442,
								"nodeType": "StructuredDocumentation",
								"src": "57:385:11",
								"text": "@title Growth type Lightweight SBT interface developed by SoulSociety\n @notice There is a part where the gas fee required by Ethereum is too expensive to contain various information. \n Therefore, by considering each contract as a piece of information, we tried to implement growth-type SBT through minimum information and minimum gas cost by managing growth in the contract."
							},
							"fullyImplemented": false,
							"id": 2568,
							"linearizedBaseContracts": [
								2568
							],
							"name": "ISoulSocietySBT",
							"nameLocation": "452:15:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"eventSelector": "ddb33c9627985605622b2c4e8b308152b557aeae8ba59e2f05038c9d8ed6ae84",
									"id": 2454,
									"name": "ContractCreated",
									"nameLocation": "481:15:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2453,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2444,
												"indexed": true,
												"mutability": "mutable",
												"name": "creator",
												"nameLocation": "513:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 2454,
												"src": "497:23:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2443,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "497:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2446,
												"indexed": false,
												"mutability": "mutable",
												"name": "creationTime",
												"nameLocation": "530:12:11",
												"nodeType": "VariableDeclaration",
												"scope": 2454,
												"src": "522:20:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2445,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "522:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2448,
												"indexed": false,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "551:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 2454,
												"src": "544:11:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2447,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "544:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2450,
												"indexed": false,
												"mutability": "mutable",
												"name": "symbol",
												"nameLocation": "564:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 2454,
												"src": "557:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2449,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "557:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2452,
												"indexed": false,
												"mutability": "mutable",
												"name": "uri",
												"nameLocation": "579:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 2454,
												"src": "572:10:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2451,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "572:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "496:87:11"
									},
									"src": "475:109:11"
								},
								{
									"anonymous": false,
									"eventSelector": "70e6a9dc20d331ce8e747d7de8444f26f544d9003beb11d8c46e802ab8d36fc9",
									"id": 2460,
									"name": "SetTokenURI",
									"nameLocation": "600:11:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2459,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2456,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "628:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 2460,
												"src": "612:22:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2455,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "612:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2458,
												"indexed": false,
												"mutability": "mutable",
												"name": "uri",
												"nameLocation": "643:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 2460,
												"src": "636:10:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2457,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "636:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "611:36:11"
									},
									"src": "594:54:11"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2461,
										"nodeType": "StructuredDocumentation",
										"src": "654:99:11",
										"text": " @dev Emitted when `tokenId` token is minted from `from(Contract Owner)` to `to`."
									},
									"eventSelector": "2f00e3cdd69a77be7ed215ec7b2a36784dd158f921fca79ac29deffa353fe6ee",
									"id": 2471,
									"name": "Mint",
									"nameLocation": "764:4:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2470,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2463,
												"indexed": false,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "777:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 2471,
												"src": "769:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2462,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "769:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2465,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "799:2:11",
												"nodeType": "VariableDeclaration",
												"scope": 2471,
												"src": "783:18:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2464,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "783:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2467,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "819:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 2471,
												"src": "803:23:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2466,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "803:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2469,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenType",
												"nameLocation": "844:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 2471,
												"src": "828:25:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2468,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "828:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "768:86:11"
									},
									"src": "758:97:11"
								},
								{
									"anonymous": false,
									"eventSelector": "154fa90f2d3692df165afacdcd7755b2e9d98a892a80cc1dda63f3a9cc1e64a4",
									"id": 2477,
									"name": "Reset",
									"nameLocation": "867:5:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2476,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2473,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "889:2:11",
												"nodeType": "VariableDeclaration",
												"scope": 2477,
												"src": "873:18:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2472,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "873:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2475,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "906:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 2477,
												"src": "893:20:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2474,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "893:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "872:42:11"
									},
									"src": "861:54:11"
								},
								{
									"anonymous": false,
									"eventSelector": "48ffd7fdb1c1a0561a2d410317f6bb839aab64898de6fc73ee703a9c0dc0a36c",
									"id": 2485,
									"name": "GrowUp",
									"nameLocation": "1042:6:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2484,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2479,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1065:2:11",
												"nodeType": "VariableDeclaration",
												"scope": 2485,
												"src": "1049:18:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2478,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1049:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2481,
												"indexed": false,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1077:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 2485,
												"src": "1069:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2480,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1069:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2483,
												"indexed": true,
												"mutability": "mutable",
												"name": "growth",
												"nameLocation": "1102:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 2485,
												"src": "1086:22:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2482,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1086:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1048:61:11"
									},
									"src": "1036:74:11"
								},
								{
									"documentation": {
										"id": 2486,
										"nodeType": "StructuredDocumentation",
										"src": "1116:82:11",
										"text": " @dev Returns the total amount of tokens stored by the contract."
									},
									"functionSelector": "18160ddd",
									"id": 2491,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "1212:11:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2487,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1223:2:11"
									},
									"returnParameters": {
										"id": 2490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2489,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2491,
												"src": "1249:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2488,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1249:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1248:9:11"
									},
									"scope": 2568,
									"src": "1203:55:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "e1604b70",
									"id": 2496,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalUser",
									"nameLocation": "1406:9:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2492,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1415:2:11"
									},
									"returnParameters": {
										"id": 2495,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2494,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2496,
												"src": "1442:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2493,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1442:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1441:9:11"
									},
									"scope": 2568,
									"src": "1397:54:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "e0df5b6f",
									"id": 2503,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setTokenURI",
									"nameLocation": "1466:11:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2499,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2498,
												"mutability": "mutable",
												"name": "tokenURI",
												"nameLocation": "1492:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 2503,
												"src": "1478:22:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2497,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1478:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1477:24:11"
									},
									"returnParameters": {
										"id": 2502,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2501,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2503,
												"src": "1519:13:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2500,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1519:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1518:15:11"
									},
									"scope": 2568,
									"src": "1457:77:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "51c18e0c",
									"id": 2510,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getGrowth",
									"nameLocation": "1661:9:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2506,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2505,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1679:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 2510,
												"src": "1671:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2504,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1671:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1670:17:11"
									},
									"returnParameters": {
										"id": 2509,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2508,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2510,
												"src": "1711:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2507,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1711:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1710:9:11"
									},
									"scope": 2568,
									"src": "1652:68:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "be37e907",
									"id": 2519,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "growUp",
									"nameLocation": "1884:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2515,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2512,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1899:2:11",
												"nodeType": "VariableDeclaration",
												"scope": 2519,
												"src": "1891:10:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2511,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1891:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2514,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1911:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 2519,
												"src": "1903:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2513,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1903:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1890:29:11"
									},
									"returnParameters": {
										"id": 2518,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2517,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2519,
												"src": "1938:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2516,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1938:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1937:9:11"
									},
									"scope": 2568,
									"src": "1875:72:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "9b252852",
									"id": 2526,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "reset",
									"nameLocation": "1962:5:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2524,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2521,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1976:2:11",
												"nodeType": "VariableDeclaration",
												"scope": 2526,
												"src": "1968:10:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2520,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1968:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2523,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1988:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 2526,
												"src": "1980:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2522,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1980:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1967:29:11"
									},
									"returnParameters": {
										"id": 2525,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2006:0:11"
									},
									"scope": 2568,
									"src": "1953:54:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "76aed2e1",
									"id": 2533,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getTokenType",
									"nameLocation": "2023:12:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2529,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2528,
												"mutability": "mutable",
												"name": "tokenId_",
												"nameLocation": "2044:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 2533,
												"src": "2036:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2527,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2036:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2035:18:11"
									},
									"returnParameters": {
										"id": 2532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2531,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2533,
												"src": "2077:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2530,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2077:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2076:9:11"
									},
									"scope": 2568,
									"src": "2014:72:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2534,
										"nodeType": "StructuredDocumentation",
										"src": "2092:732:11",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "40c10f19",
									"id": 2543,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nameLocation": "2838:4:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2539,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2536,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2851:2:11",
												"nodeType": "VariableDeclaration",
												"scope": 2543,
												"src": "2843:10:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2535,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2843:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2538,
												"mutability": "mutable",
												"name": "tokenType",
												"nameLocation": "2863:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 2543,
												"src": "2855:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2537,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2855:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2842:31:11"
									},
									"returnParameters": {
										"id": 2542,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2541,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2543,
												"src": "2892:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2540,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2892:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2891:9:11"
									},
									"scope": 2568,
									"src": "2829:72:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "ce35de95",
									"id": 2550,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isProtected",
									"nameLocation": "3220:11:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2546,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2545,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2550,
												"src": "3232:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2544,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3232:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3231:9:11"
									},
									"returnParameters": {
										"id": 2549,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2548,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2550,
												"src": "3264:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2547,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3264:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3263:6:11"
									},
									"scope": 2568,
									"src": "3211:59:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "1c02bc31",
									"id": 2557,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setProtected",
									"nameLocation": "3455:12:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2553,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2552,
												"mutability": "mutable",
												"name": "isProtected",
												"nameLocation": "3473:11:11",
												"nodeType": "VariableDeclaration",
												"scope": 2557,
												"src": "3468:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2551,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3468:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3467:18:11"
									},
									"returnParameters": {
										"id": 2556,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2555,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2557,
												"src": "3504:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2554,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3504:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3503:6:11"
									},
									"scope": 2568,
									"src": "3446:64:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2558,
										"nodeType": "StructuredDocumentation",
										"src": "3516:171:11",
										"text": " @dev Returns a token ID owned by `owner` at a given `index` of its token list.\n Use along with {balanceOf} to enumerate all of ``owner``'s tokens."
									},
									"functionSelector": "2f745c59",
									"id": 2567,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenOfOwnerByIndex",
									"nameLocation": "3701:19:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2563,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2560,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3729:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 2567,
												"src": "3721:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2559,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3721:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2562,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "3744:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 2567,
												"src": "3736:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2561,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3736:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3720:30:11"
									},
									"returnParameters": {
										"id": 2566,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2565,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2567,
												"src": "3774:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2564,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3774:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3773:9:11"
									},
									"scope": 2568,
									"src": "3692:91:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2569,
							"src": "442:3344:11",
							"usedErrors": [],
							"usedEvents": [
								2454,
								2460,
								2471,
								2477,
								2485
							]
						}
					],
					"src": "32:3754:11"
				},
				"id": 11
			},
			"v2/contracts/interfaces/ISoulSocietySBTErrors.sol": {
				"ast": {
					"absolutePath": "v2/contracts/interfaces/ISoulSocietySBTErrors.sol",
					"exportedSymbols": {
						"ISoulSocietySBTErrors": [
							2620
						]
					},
					"id": 2621,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2570,
							"literals": [
								"solidity",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:12"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ISoulSocietySBTErrors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2571,
								"nodeType": "StructuredDocumentation",
								"src": "57:167:12",
								"text": " @dev Standard SoulSocietySBT.sol Errors\n Interface of the ERC6093 custom errors for ERC721 tokens\n as defined in https://eips.ethereum.org/EIPS/eip-6093"
							},
							"fullyImplemented": true,
							"id": 2620,
							"linearizedBaseContracts": [
								2620
							],
							"name": "ISoulSocietySBTErrors",
							"nameLocation": "236:21:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"errorSelector": "50159299",
									"id": 2575,
									"name": "SoulSocietySBTInvalidOwner",
									"nameLocation": "495:26:12",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2574,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2573,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "530:2:12",
												"nodeType": "VariableDeclaration",
												"scope": 2575,
												"src": "522:10:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2572,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "522:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "521:12:12"
									},
									"src": "489:45:12"
								},
								{
									"documentation": {
										"id": 2576,
										"nodeType": "StructuredDocumentation",
										"src": "540:132:12",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "24476a3f",
									"id": 2580,
									"name": "SoulSocietySBTNonexistentToken",
									"nameLocation": "683:30:12",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2579,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2578,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "722:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 2580,
												"src": "714:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2577,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "714:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "713:17:12"
									},
									"src": "677:54:12"
								},
								{
									"documentation": {
										"id": 2581,
										"nodeType": "StructuredDocumentation",
										"src": "737:289:12",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "b6df41e6",
									"id": 2589,
									"name": "SoulSocietySBTIncorrectOwner",
									"nameLocation": "1037:28:12",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2588,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2583,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1074:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 2589,
												"src": "1066:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2582,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1066:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2585,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1090:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 2589,
												"src": "1082:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2584,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1082:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2587,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1107:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2589,
												"src": "1099:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2586,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1099:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1065:48:12"
									},
									"src": "1031:83:12"
								},
								{
									"documentation": {
										"id": 2590,
										"nodeType": "StructuredDocumentation",
										"src": "1120:210:12",
										"text": " @dev Indicates an error related to the ownership over a particular token.\n @param owner Address of the current owner of a token.\n @param to Address whose SBT token are being used."
									},
									"errorSelector": "d4ea4ebc",
									"id": 2596,
									"name": "SoulSocietySBTNotOwner",
									"nameLocation": "1341:22:12",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2595,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2592,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1372:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2596,
												"src": "1364:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2591,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1364:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2594,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1387:2:12",
												"nodeType": "VariableDeclaration",
												"scope": 2596,
												"src": "1379:10:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2593,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1379:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1363:27:12"
									},
									"src": "1335:56:12"
								},
								{
									"errorSelector": "f342bdc2",
									"id": 2600,
									"name": "SoulSocietySBTExistToken",
									"nameLocation": "1518:24:12",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2599,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2598,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1551:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 2600,
												"src": "1543:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2597,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1543:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1542:17:12"
									},
									"src": "1512:48:12"
								},
								{
									"documentation": {
										"id": 2601,
										"nodeType": "StructuredDocumentation",
										"src": "1566:152:12",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96223487",
									"id": 2605,
									"name": "SoulSocietySBTInvalidSender",
									"nameLocation": "1729:27:12",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2604,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2603,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1765:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 2605,
												"src": "1757:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2602,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1757:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1756:16:12"
									},
									"src": "1723:50:12"
								},
								{
									"documentation": {
										"id": 2606,
										"nodeType": "StructuredDocumentation",
										"src": "1779:159:12",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "74f5e87d",
									"id": 2610,
									"name": "SoulSocietySBTInvalidReceiver",
									"nameLocation": "1949:29:12",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2609,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2608,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1987:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 2610,
												"src": "1979:16:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2607,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1979:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1978:18:12"
									},
									"src": "1943:54:12"
								},
								{
									"documentation": {
										"id": 2611,
										"nodeType": "StructuredDocumentation",
										"src": "2004:95:12",
										"text": " @dev Indicates protected status. Used in token.\n @param owner Address."
									},
									"errorSelector": "904e928b",
									"id": 2615,
									"name": "SoulSocietySBTProtectedOwner",
									"nameLocation": "2110:28:12",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2614,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2613,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2147:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2615,
												"src": "2139:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2612,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2139:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2138:15:12"
									},
									"src": "2104:50:12"
								},
								{
									"errorSelector": "9fc6e758",
									"id": 2619,
									"name": "SoulSocietySBTNotSupported",
									"nameLocation": "2167:26:12",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2618,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2617,
												"mutability": "mutable",
												"name": "message",
												"nameLocation": "2201:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 2619,
												"src": "2194:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2616,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2194:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2193:16:12"
									},
									"src": "2161:49:12"
								}
							],
							"scope": 2621,
							"src": "226:2832:12",
							"usedErrors": [
								2575,
								2580,
								2589,
								2596,
								2600,
								2605,
								2610,
								2615,
								2619
							],
							"usedEvents": []
						}
					],
					"src": "32:3027:12"
				},
				"id": 12
			},
			"v2/contracts/interfaces/ISoulSocietySBTMetadata.sol": {
				"ast": {
					"absolutePath": "v2/contracts/interfaces/ISoulSocietySBTMetadata.sol",
					"exportedSymbols": {
						"ISoulSocietySBT": [
							2568
						],
						"ISoulSocietySBTMetadata": [
							2647
						]
					},
					"id": 2648,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2622,
							"literals": [
								"solidity",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:13"
						},
						{
							"absolutePath": "v2/contracts/interfaces/ISoulSocietySBT.sol",
							"file": "v2/contracts/interfaces/ISoulSocietySBT.sol",
							"id": 2623,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2648,
							"sourceUnit": 2569,
							"src": "57:53:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 2625,
										"name": "ISoulSocietySBT",
										"nameLocations": [
											"283:15:13"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2568,
										"src": "283:15:13"
									},
									"id": 2626,
									"nodeType": "InheritanceSpecifier",
									"src": "283:15:13"
								}
							],
							"canonicalName": "ISoulSocietySBTMetadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2624,
								"nodeType": "StructuredDocumentation",
								"src": "112:133:13",
								"text": " @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"
							},
							"fullyImplemented": false,
							"id": 2647,
							"linearizedBaseContracts": [
								2647,
								2568
							],
							"name": "ISoulSocietySBTMetadata",
							"nameLocation": "256:23:13",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2627,
										"nodeType": "StructuredDocumentation",
										"src": "305:58:13",
										"text": " @dev Returns the token collection name."
									},
									"functionSelector": "06fdde03",
									"id": 2632,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "377:4:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2628,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "381:2:13"
									},
									"returnParameters": {
										"id": 2631,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2630,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2632,
												"src": "407:13:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2629,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "407:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "406:15:13"
									},
									"scope": 2647,
									"src": "368:54:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2633,
										"nodeType": "StructuredDocumentation",
										"src": "428:60:13",
										"text": " @dev Returns the token collection symbol."
									},
									"functionSelector": "95d89b41",
									"id": 2638,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "502:6:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2634,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "508:2:13"
									},
									"returnParameters": {
										"id": 2637,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2636,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2638,
												"src": "534:13:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2635,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "534:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "533:15:13"
									},
									"scope": 2647,
									"src": "493:56:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2639,
										"nodeType": "StructuredDocumentation",
										"src": "555:90:13",
										"text": " @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."
									},
									"functionSelector": "c87b56dd",
									"id": 2646,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "659:8:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2642,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2641,
												"mutability": "mutable",
												"name": "tokenId_",
												"nameLocation": "676:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 2646,
												"src": "668:16:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2640,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "667:18:13"
									},
									"returnParameters": {
										"id": 2645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2644,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2646,
												"src": "709:13:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2643,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "709:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:15:13"
									},
									"scope": 2647,
									"src": "650:74:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2648,
							"src": "246:480:13",
							"usedErrors": [],
							"usedEvents": [
								2454,
								2460,
								2471,
								2477,
								2485
							]
						}
					],
					"src": "32:694:13"
				},
				"id": 13
			}
		}
	}
}